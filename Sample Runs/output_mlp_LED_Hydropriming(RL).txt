IterationNumber           MSE              MAE              MAPE              R2              ExpVar              MLSE              MedAE             Model
1                   156.59739         4.84393         0.34304         -51.59782          -47.81608          0.16359          0.83513          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[12.5005 11.7095  9.4469 13.8007 14.4812 11.6392 11.6854 12.9778 16.0818   13.0785 10.5702 57.674 ]]
2                   6.22         2.14085         0.16864         -1.08917          -1.08831          0.03461          1.88683          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[14.2    10.553  12.0329 10.2538 15.0154  8.8767 12.7917 13.6601 13.129   16.179  12.739  15.3426]]
3                   4.75342         1.84897         0.14625         -0.59658          -0.58462          0.02398          1.65197          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[13.5758 11.0511 12.2479 10.8028 14.9297 11.085  13.3127 13.5683 12.6187   16.131  13.1806 15.1404]]
4                   5.32199         1.79421         0.14731         -0.78755          -0.78203          0.03659          1.92198          MLPRegressor(hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[14.3396 12.2716 12.3015  6.83   14.9571 11.3466 12.8259 13.4149 14.1141   13.9804 13.1142 14.3457]]
5                   3.22241         1.4412         0.11861         -0.08234          -0.06274          0.01771          1.28257          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[12.6893 12.7084 12.589  12.2676 13.996  11.5468  9.5513 16.1162 16.0025   13.4233 13.7303 13.6579]]
6                   7.467         2.38721         0.189         -1.50801          -1.34634          0.04883          2.58162          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[ 7.4266 11.0777 11.4922  7.9723 14.2616 10.8188 13.4866 13.7541 13.6513   16.7294 11.8045 14.5795]]
7                   5.39541         2.06421         0.16516         -0.81221          -0.80738          0.02835          1.98977          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[14.1202 10.8191 12.2934  9.3979 14.8459 10.7489 13.936  12.6713 13.0867   16.4624 13.3504 15.0869]]
8                   5.68867         2.0184         0.16503         -0.91071          -0.83144          0.03247          1.58137          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.6174 10.185   7.4621 13.8436 16.1379 11.8644 11.2564 12.2889 13.6433   12.1152 13.5254 13.6107]]
9                   281730.54682         158.43518         13.61551         -94626.45252          -87117.68316          2.63069          4.90948          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[   1.964    14.8167    5.4924 1850.1338   12.8201    8.5353   10.7807      5.7703    2.1571   18.1837   10.2742    8.6648]]
10                   4.8079         1.75087         0.14454         -0.61487          -0.30709          0.0239          1.58082          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[15.1979 11.6268 12.5988 10.9432 15.5794 12.1277 14.3395 13.2356 14.344   16.0342 14.8967 15.9434]]
11                   3.9575         1.61449         0.12908         -0.32924          -0.32873          0.02029          1.62177          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.9522 11.4049 12.0124  9.9122 15.3171 11.4376 11.1845 14.0113 13.967   13.9204 12.9983 16.796 ]]
12                   3.61206         1.41257         0.11425         -0.21322          -0.20022          0.01849          1.2001          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.0813 11.1774 11.9946 10.7858 14.8163 11.8549 12.6414 13.048  12.6387   14.8976 14.971  14.8339]]
13                   3.71572         1.51942         0.12317         -0.24803          -0.10984          0.01856          1.0881          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.0632 11.3041 12.1305 12.1236 15.2282 12.5664 12.9103 13.2998 13.5285   15.9746 14.4497 15.4982]]
14                   6.84303         2.06759         0.16664         -1.29843          -1.23175          0.05946          1.62388          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[13.7617 10.9491 11.6159  5.19   14.2169 11.6166 13.5305 13.1899 13.2803   15.2406 12.889  14.5527]]
15                   4.93344         1.83689         0.14661         -0.65704          -0.65456          0.02517          1.64268          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[13.5023 11.3016 11.9999  9.2683 15.2261 11.6812 12.7572 13.0905 13.1571   16.7839 13.0783 14.5641]]
16                   5.09832         1.91593         0.14917         -0.71242          -0.67789          0.02493          1.76267          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[14.3489 11.0955 12.1663 10.9446 14.8138 11.4766 12.4512 13.3585 12.1184   16.305  13.4931 16.6557]]
17                   5.55881         2.03048         0.16327         -0.86709          0.02653          0.04129          1.72817          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.1076  9.1289  7.0454  7.8787  9.6408 13.6309 13.9886 11.7556 12.9715   12.5581 14.0882 14.0123]]
18                   5.03502         1.81411         0.14028         -0.69116          -0.68842          0.0244          1.72748          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[14.3221 10.9938  9.7201 12.062  14.8029 11.2835 12.2919 12.2408 12.3773   16.7905 12.6971 14.7142]]
19                   6.54388         2.30437         0.183         -1.19795          -1.19793          0.03359          2.35168          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[14.6194 11.2087 12.456   9.1726 15.4046 10.9368 13.2955 11.8129 12.6085   16.7805 12.7527 14.2247]]
20                   3.96909         1.43057         0.11738         -0.33313          -0.33116          0.02008          1.05062          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.7773 10.9382 12.4134 11.7577 15.8334 12.9717 11.0202 12.2692 13.3823   13.812  14.5735 13.5519]]
21                   10564.88903         35.05831         2.85454         -3547.5273          -3279.95502          1.21542          6.03905          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[367.6714   5.8665   2.4984  23.4119  17.46     9.2037  17.3746   9.2263    12.5002  12.0025   7.3888   9.4718]]
22                   4.40385         1.67233         0.13602         -0.47916          -0.16002          0.02135          1.41463          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[14.3724 11.6427 11.8002 13.0524 15.764  12.4033 13.0581 13.2588 14.0565   16.1755 14.8288 16.6645]]
23                   7.3288         2.26593         0.17945         -1.46159          -1.4567          0.03944          1.8549          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.3531  8.138  12.0567 11.318  15.9594 11.8923 11.0701 12.0371 13.7087   17.4692 12.3014 13.6283]]
24                   5.20905         2.00252         0.15846         -0.74961          -0.74958          0.02645          1.78662          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[14.0198 10.723  11.7602 10.025  15.0274 10.9773 13.6301 12.608  12.854   16.4174 13.0443 14.4064]]
25                   4.58168         1.74228         0.13604         -0.53889          -0.53637          0.02519          1.38113          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[13.0801 11.0004 11.816  11.2738 14.2149  9.3363 12.9096 13.7358 13.4778   15.9849 12.638  14.8723]]
26                   5.53107         1.9785         0.1587         -0.85777          -0.85529          0.02896          2.2038          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[14.9461 11.3903 12.0788  9.1222 15.3853 10.7557 12.6117 12.9359 13.2975   16.1485 13.1309 14.6092]]
27                   7.13459         2.18496         0.17256         -1.39636          -1.27354          0.04863          2.13367          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[12.3916 10.7996 11.9511  6.3438 14.5    10.7264 12.927  13.1    12.859   16.4351 11.9099 14.1799]]
28                   18.08969         3.2936         0.26414         -5.07595          -4.92508          0.10077          2.57665          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[14.6979 10.9028  7.7246 21.5347 12.9496  6.8389  9.0779 12.2532 17.1881    8.4164 11.0179 14.7354]]
29                   4.37099         1.84913         0.14498         -0.46812          -0.44559          0.02194          1.88795          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[14.2337 11.1941 12.2422 10.5852 14.2513 10.8156 11.9597 14.1314 13.5008   16.6765 13.0635 15.8339]]
30                   6.0874         2.04397         0.16536         -1.04463          -1.02216          0.03418          2.09265          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[14.2459 11.301  12.6394  8.222  15.167  10.0829 12.3178 13.0686 13.7308   17.1245 14.6514 15.9325]]
31                   4.03871         1.57662         0.12697         -0.35652          -0.3445          0.02209          1.26577          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.079   9.5677  9.8182 12.6695 15.2311 12.8803 11.5824 15.0222 13.8801   14.2917 13.6513 14.4361]]
32                   2.81134         1.3548         0.10776         0.05573          0.05573          0.01497          1.00782          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.163  10.8772 11.3771 10.5048 14.2693 10.9903 11.7771 12.8943 14.1171   15.5038 14.2668 15.6387]]
33                   3.91854         1.64519         0.1332         -0.31616          -0.06618          0.01956          1.4663          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[14.7284 11.5343 12.1915 11.3695 14.9961 11.9365 13.2791 14.1144 14.0681   16.2289 15.6087 15.6769]]
34                   6.7058         2.06537         0.16534         -1.25234          -0.92516          0.04281          1.42748          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[10.725   9.6458  9.9789  7.0833 15.7258 10.6541 11.6493 14.3447 12.938   13.3736 13.7767 13.6413]]
35                   5.01134         1.86452         0.1497         -0.68321          -0.68292          0.02666          1.94182          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.3549  9.5666 12.7638 11.2109 15.2316 11.29   12.2999 12.2979 13.0579   15.4954 13.7998 14.3616]]
36                   4.04281         1.5923         0.12917         -0.3579          -0.04093          0.01967          1.50488          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.6833 11.4656 12.0271 12.5508 14.9947 13.1905 13.2831 12.8792 13.9271   16.6668 14.9691 16.4   ]]
37                   10.37602         2.7281         0.21164         -2.48509          -2.42903          0.05355          2.77542          MLPRegressor(hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[12.8302 11.151  13.0327 14.8929 15.6394  9.7866 13.0345 11.9546  9.6601   16.6648 13.6871 17.9488]]
38                   12.15889         2.74666         0.21639         -3.08392          -2.92619          0.06007          2.75082          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[18.0369 11.0808 13.2446 11.4609 15.9434 10.3164 14.5137 13.1151  9.5051   16.91   13.9685 15.5079]]
39                   8.52601         2.52248         0.20107         -1.86371          -1.86162          0.04489          2.36273          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[14.4857 11.1442 13.5437  8.5915 15.5692 10.9069 13.4577 11.9943 11.0002   17.1739 13.4415 15.0181]]
40                   9.12469         2.38714         0.1891         -2.06479          -2.00972          0.04452          2.04227          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[14.8265 11.5083 12.3239  9.3827 16.0276 10.6972 13.4689 13.4202 10.7134   18.5086 14.8559 14.5059]]
41                   9.08631         2.62359         0.20496         -2.0519          -2.04205          0.04866          2.34757          MLPRegressor(hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.8528 10.3653 12.3795  8.1165 15.2203 11.1041 12.865  13.5874 10.5668   17.6325 12.7041 13.9309]]
42                   9.689         2.7955         0.22188         -2.25433          -2.25109          0.05298          2.64762          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.9973 10.718  12.5095  7.4966 15.5492 10.7862 14.7997 11.1849 11.7694   17.9899 12.4219 14.9774]]
43                   13.40792         3.01626         0.24004         -3.50344          -3.23818          0.06124          2.802          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[18.601  11.3495 12.7671 12.9564 17.1032 10.3301 14.78   12.3998 10.8603   17.5886 12.456  14.8521]]
44                   8.92722         2.53468         0.19908         -1.99847          -1.96171          0.04359          2.49287          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[15.3598 11.2808 11.5405  9.6001 15.7224 10.4654 15.1141 12.861  11.2573   17.6755 13.0522 15.4206]]
45                   6.41412         2.1963         0.17834         -1.15437          -1.09721          0.03655          2.21775          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[15.1425 10.4509 11.7494  7.9422 15.3938 10.705  13.5901 13.0119 16.5684   16.1792 12.7007 16.8962]]
46                   9.92691         2.67164         0.21014         -2.33424          -2.10003          0.05192          2.48132          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[15.4039 11.4917 13.0328 13.307  15.6113  8.8974 14.1865 13.3087 10.6114   16.8779 15.4755 17.1966]]
47                   6.06227         2.07108         0.16453         -1.03619          -1.02323          0.0306          1.79007          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[14.1818 10.8706 12.2064 11.1792 15.3935 10.8674 14.796  12.0897 11.9912   15.5204 13.4939 15.1468]]
48                   12.09519         3.03887         0.23985         -3.06252          -2.49602          0.05598          3.4155          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[16.7844 17.5179 11.9579 16.5156 15.0319  9.8598 12.5873 13.1826 11.6829   16.9908 12.7463 16.107 ]]
49                   8.60899         2.58525         0.20865         -1.89158          -1.85795          0.0435          2.48863          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.2537 10.2297 12.4639  9.1676 17.055  10.4427 14.3782 14.3162 13.5489   16.7664 12.1166 14.4382]]
50                   10.99116         2.94877         0.23167         -2.6917          -2.51011          0.05335          2.6152          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[17.1756 11.1306 12.3939 14.5733 15.543  10.0645 14.0571 11.8226 10.6271   17.5308 13.231  16.054 ]]
51                   11.80417         2.91875         0.22868         -2.96478          -2.88657          0.06983          2.42335          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.1776 10.1518 10.8573  6.7523 15.5798 10.0646 16.4674 12.3912  9.9637   16.3185 13.2115 13.6538]]
52                   9.3361         2.56836         0.20231         -2.1358          -2.05691          0.04322          2.1732          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.6601 11.4248 12.3863 10.1297 15.5012 10.636  14.7957 11.6934 11.4125   19.3635 13.9414 15.2513]]
53                   25.52623         3.29956         0.25832         -7.57373          -7.42219          0.08345          2.29577          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[27.1655 10.464  10.5361 10.5574 15.3439  9.504  12.6287 11.8118 11.6021   16.9367 12.4278 14.4624]]
54                   11.14377         2.81047         0.22395         -2.74296          -2.74295          0.07257          2.9932          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[15.3008 12.5833 11.4782  5.7423 15.2783 10.4337 16.3124 11.5138 11.3807   16.7201 13.3838 15.1802]]
55                   13.87974         3.07397         0.24263         -3.66192          -3.61656          0.11208          2.56217          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 4.3031 11.1482 12.5932 10.0168 15.5653 10.4273 14.7878 12.5806 10.8898   18.0407 13.9855 16.6319]]
56                   9.94656         2.76629         0.21807         -2.34084          -2.34078          0.05325          2.68803          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[14.7651 11.3545 12.1493  7.7341 16.1028 10.5357 14.2204 13.7464 11.2649   17.5193 12.0434 14.1085]]
57                   8.54015         2.64914         0.21091         -1.86846          -1.84381          0.04713          2.47987          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[15.1219 10.6987 13.4926 10.6609 15.5124  8.3502 13.9767 14.451  13.6394   16.7889 12.7242 13.2137]]
58                   11.58443         2.87986         0.22577         -2.89097          -2.81001          0.06992          2.8483          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[11.2788 11.1942 12.4391  6.9302 15.6563  9.179  14.9903 13.6022  9.8936   16.5659 12.2593 15.4996]]
59                   11.43505         3.06551         0.24322         -2.8408          -2.75976          0.07113          3.00128          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.0821 10.2978 13.9331  6.5146 15.0423  9.8617 14.6976 10.4239 10.7751   16.8283 12.5267 15.5025]]
60                   22.10456         3.76816         0.30213         -6.42446          -5.85795          0.08843          2.99838          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[16.2459 11.2536 13.447  23.5026 16.0408 10.3609 13.6032 11.134  10.4846   15.8897 12.1069 16.8954]]
61                   14.13513         2.93127         0.22861         -3.7477          -3.61741          0.10714          2.04197          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[14.866  10.9397 10.5902  4.5772 15.9864 10.9966 13.4581 12.2315  8.9072   17.7334 13.4228 14.1972]]
62                   15.98206         2.9541         0.2362         -4.36804          -4.14356          0.06823          2.51218          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[22.4235 11.6611 11.9531  7.8231 15.4832  9.8954 13.0342 13.2527 11.8931   17.3923 14.6078 15.7707]]
63                   18.97177         3.68338         0.29184         -5.37222          -5.25152          0.10076          3.10328          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[20.8541 11.014  14.092   6.4788 15.3936 10.9778 14.9705 13.8923  8.709   16.7594 13.0169 16.4152]]
64                   5.28312         1.84779         0.15056         -0.77449          -0.65551          0.02607          2.0335          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[14.3194 11.4239 12.512  11.1636 15.5563 11.381  13.858  12.4676 15.5017   17.1954 12.3586 14.7846]]
65                   9.66897         2.71648         0.21338         -2.24761          -2.21744          0.05229          2.49438          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[15.9623 10.6778 12.4308  7.8693 15.2688 11.1653 12.3945 15.7874 10.3234   16.697  14.1634 16.2361]]
66                   12.44181         2.8581         0.22859         -3.17895          -3.06565          0.1351          2.2963          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9221 11.3515 12.6339  3.1619 15.07   10.4268 14.2095 13.6653 11.5675   16.4036 12.8969 16.1016]]
67                   14.19977         3.41284         0.26685         -3.76941          -3.73938          0.08439          3.21252          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[15.7057 11.0649 12.7621  6.0342 15.6738 10.6295 14.796  12.5041 10.401   18.5286 11.3445 12.3473]]
68                   8.28765         2.46934         0.1987         -1.78365          -1.72982          0.04151          2.46482          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.2309 10.1128 14.7118 10.4237 16.0233 10.403  13.0589 14.0376 12.9055   17.4441 12.4409 15.3914]]
69                   10.3525         2.68953         0.21333         -2.47719          -2.47657          0.05889          2.68457          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[16.2982 11.3475 13.2068  7.2865 15.4859 10.5929 13.0505 13.0463 10.3483   16.309  12.7303 15.1632]]
70                   10.12086         2.67084         0.20844         -2.39939          -2.38317          0.05989          2.17433          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[14.7893 11.3187 10.8256  6.6034 15.7718 10.3793 13.0745 11.9159 10.9021   17.776  13.2773 16.1096]]
71                   24.68504         3.94899         0.30062         -7.29119          -7.08713          0.09469          2.901          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[14.4673  9.834  12.3213  6.5732 15.8438 11.4867 14.6431 11.8695 10.8383   16.9669 12.1211 27.7683]]
72                   42.26388         4.40843         0.35049         -13.19556          -12.00426          0.12257          3.0164          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[31.7836 10.5841 11.9095  7.4562 16.8146 10.7107 13.2952 14.5877 11.7344   17.0435 13.0638 18.9963]]
73                   9.30182         2.5354         0.19969         -2.12429          -2.09634          0.04298          2.36658          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[17.4086 11.3862 12.0896 10.5766 15.9267 10.5383 12.3895 11.1207 12.5247   17.9121 12.2828 14.6857]]
74                   12.68145         2.90638         0.23146         -3.25944          -3.2517          0.09024          2.08052          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.402  11.6978 12.1253  5.0722 16.5349 10.1918 13.8357 14.6605 10.144   16.7929 13.4983 14.604 ]]
75                   10.2329         2.88018         0.22618         -2.43702          -2.38713          0.05117          2.48888          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[15.6403 10.7963 12.5683  8.9413 15.8515  9.8922 14.1524 12.8004 11.3237   17.9965 13.0174 17.0245]]
76                   12.5552         3.00259         0.23709         -3.21703          -3.21428          0.06909          2.69787          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.8278 11.1259 12.6814  7.5662 16.0564 10.7398 16.1632 13.4143  9.4274   17.0615 12.3678 15.0336]]
77                   44.73179         5.0331         0.40154         -14.02448          -13.97508          0.33893          3.76258          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[28.8601 11.3914 14.4768  6.2912 15.4321  9.9183 14.1446  1.8415 10.2497   16.9609 14.1503 16.2651]]
78                   11.58538         3.03431         0.23824         -2.89129          -2.82967          0.0722          2.77438          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[15.1164  9.6943 12.2983  6.2919 15.732  10.9886 13.0666 14.5406 10.4038   16.7053 13.939  11.4632]]
79                   9.82052         2.68534         0.2108         -2.29851          -2.27197          0.0496          2.36208          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[15.4684 11.6924 12.3369  9.3024 15.5437  9.478  14.2599 13.7512 10.9407   18.2619 13.5713 14.1465]]
80                   7.85576         2.42443         0.19293         -1.63859          -1.63646          0.04209          2.42917          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[13.707  11.3872 12.6138  8.4712 15.5798 10.284  14.5012 13.7749 11.5569   16.6701 13.2603 14.5274]]
81                   9.29775         2.60131         0.20566         -2.12292          -2.01381          0.04459          2.37167          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.9548 11.0636 12.5099 15.4588 15.556  10.8128 14.9008 12.6413 11.2288   18.0139 12.9472 14.1315]]
82                   10.17204         2.85996         0.226         -2.41658          -2.38777          0.05487          2.37772          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.9019 10.1354 13.8634  7.8134 15.7019 11.2272 13.926  12.1012 11.0547   17.7929 12.9955 12.3525]]
83                   7.49249         2.47199         0.1933         -1.51657          -1.44973          0.03746          2.4064          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.4314  9.7007 12.1355 13.2203 15.7616 10.7515 13.5103 13.9811 12.1226   16.7174 12.3865 17.0143]]
84                   6.16865         1.92026         0.15256         -1.07192          -0.99708          0.03024          1.59145          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.3112 11.3898 11.5717 10.8978 15.3204 10.8368 14.6052 13.2113 11.7897   16.913  15.1745 15.0233]]
85                   3.44388         1.53264         0.1207         -0.15673          -0.15637          0.01731          1.13805          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.6166 11.0656 11.3857 10.6389 14.4947 11.8571 12.9663 13.9692 12.8099   15.7633 13.9702 15.2308]]
86                   5.80424         2.02381         0.16142         -0.94952          -0.91711          0.03013          1.45793          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[11.4703 11.003  11.9722  8.4994 15.5326 12.8696 13.142  13.9114 12.8836   17.1247 13.955  16.7437]]
87                   3.39367         1.41386         0.11199         -0.13986          -0.13883          0.01718          1.21025          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.7462 11.0326 11.3777 11.1617 14.678  11.4953 13.1334 12.8189 12.9359   15.4753 13.9929 14.8654]]
88                   6.56312         2.31091         0.18286         -1.20442          -1.19424          0.03474          2.11467          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[14.4617 11.3474 12.236   8.9124 14.991  10.4086 14.5756 12.7694 12.2773   15.7343 13.2036 16.551 ]]
89                   8.29337         2.5069         0.2004         -1.78557          -1.77925          0.04782          2.16458          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[13.233  13.0558 12.9304  7.2709 15.6916 11.1138 13.8438 11.0037 11.8274   17.0618 13.9191 16.0746]]
90                   8.28739         2.49554         0.19719         -1.78356          -1.7803          0.04588          2.06327          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[14.1538 10.7171 12.5414  8.2767 15.0429  9.6797 13.8418 13.5746 11.1869   17.0505 13.4403 14.6911]]
91                   5.51556         1.92556         0.15156         -0.85256          -0.83546          0.0278          1.60028          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.7219 11.0754 12.5203 13.322  14.6072 10.7976 12.364  12.6866 11.729   16.7385 13.7017 14.8236]]
92                   5.10885         1.92269         0.15282         -0.71596          -0.71385          0.02803          1.71303          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.1708 11.1096 12.0565  8.5359 14.7144 11.2728 13.2386 12.9299 12.5934   16.2463 13.2871 15.2744]]
93                   2.88392         1.21257         0.09469         0.03135          0.0773          0.01452          0.65095          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[11.1805 11.1677  9.7365 11.8023 14.4886 12.9137 11.6217 13.6384 12.909   14.017  13.0968 14.3696]]
94                   19.84275         3.73944         0.29383         -5.66477          -2.02489          0.22283          3.19378          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 8.9906 11.0129  8.8871  7.3898 13.245  12.1089  2.8759  5.8217 13.1085    8.4667 14.2868  9.6828]]
95                   2.78504         1.29744         0.10099         0.06456          0.08712          0.01408          0.89702          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.8594 11.0753  9.9359 11.3982 14.2199 12.6722 13.3831 13.566  13.6072   14.1841 12.5718 13.7971]]
96                   5.70601         1.80235         0.14616         -0.91653          -0.83059          0.04734          1.60102          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[11.7376 11.2791 12.2201  5.7232 13.919  13.6012 13.7384 13.5638 13.2256   13.5508 13.4027 13.3486]]
97                   3.59944         1.59411         0.12647         -0.20898          -0.1919          0.01853          1.60265          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[13.2419 13.2159 13.3929 13.3031 13.3806 13.1225 13.3022 13.1677 12.8658   13.1237 12.9731 12.9966]]
98                   5.64491         1.78319         0.14429         -0.89601          -0.80033          0.04662          1.52528          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[11.7698 11.3054 12.0403  5.7547 13.9323 13.5319 13.7331 13.5226 13.2068   13.4708 13.3013 13.4064]]
99                   3.53802         1.57039         0.12267         -0.18835          -0.18834          0.01803          1.35525          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[13.0043 12.9928 13.1698 13.0658 13.1589 12.9002 13.0447 12.9334 12.6438   12.873  12.7596 12.7683]]
100                   7.43827         1.94215         0.15771         -1.49836          -1.38106          0.08086          1.56748          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[12.7992 11.2178 12.051   4.1555 13.8942 13.5959 13.7412 13.549  13.2222   13.4508 13.279  13.3327]]
101                   3.57346         1.58664         0.12592         -0.20025          -0.18323          0.0184          1.57995          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[13.2331 13.2234 13.3948 13.2936 13.3857 13.1365 13.2663 13.1605 12.9014   13.1277 12.9683 12.9905]]
102                   6.89006         1.89731         0.15401         -1.31423          -1.18325          0.06878          1.63033          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[11.7621 11.2511 12.119   4.6168 13.8806 13.5499 13.7648 13.5861 13.2315   13.5266 13.3229 13.275 ]]
103                   3.54446         1.57258         0.12283         -0.19051          -0.1905          0.01806          1.35525          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[13.0043 13.0059 13.1697 13.0658 13.1589 12.9001 13.0447 12.9335 12.6438   12.8728 12.7465 12.7683]]
104                   3.58342         1.57938         0.12401         -0.2036          -0.20204          0.01832          1.46555          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.0184 13.0965 13.2583 13.1823 13.2275 12.965  13.1488 13.005  12.6777   12.9252 12.8006 12.8924]]
105                   7.74727         2.35103         0.1993         -1.60215          -0.16024          0.03856          2.33402          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[15.0604 15.1333 15.2358 15.1045 15.1976 14.9953 15.1372 14.9614 14.8107   14.8731 14.8381 14.8959]]
106                   6.56622         2.05708         0.16614         -1.20546          -1.1904          0.05351          1.63892          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.1405 11.0472 12.1443  5.5331 13.927  13.5299 14.7005 13.5799 13.2059   15.2802 13.379  13.3721]]
107                   8.33998         2.3757         0.18728         -1.80123          -1.79325          0.04675          1.83817          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[12.2987 11.0063 11.6268  7.7287 15.0603 11.031  15.7441 14.5136 10.619   15.9094 14.4276 13.5652]]
108                   3.52392         1.56661         0.12304         -0.18361          -0.18205          0.01802          1.39805          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[13.0468 13.1204 13.2349 13.0978 13.2576 12.9674 13.0983 12.992  12.7312   12.9722 12.8541 12.8262]]
109                   8.89444         2.55748         0.21581         -1.98746          -0.34598          0.04333          2.4865          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.9874 16.1746 15.3243 15.2174 15.4896 14.9954 15.2415 15.2856 14.751   15.0932 14.7559 14.5923]]
110                   6.76775         2.01117         0.15799         -1.27315          -1.17957          0.04607          1.69767          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[12.9103 11.1048 12.2314  6.4471 12.9313 13.8262 14.9515 13.5726 10.9487   13.564  13.3461 13.2119]]
111                   6.76784         2.22307         0.17196         -1.27318          -1.18111          0.03838          1.7874          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[10.6206 11.0101 12.0498  8.055  13.9405 13.5247 13.5709 14.1141 10.6579   15.9671 13.2761 12.3105]]
112                   7.40558         1.96583         0.15425         -1.48738          -1.29845          0.05359          1.46483          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[11.9339 11.2132 11.8551  6.0129 13.9131 13.5218 13.7289 13.5394 10.4032   13.5384 13.378  13.3421]]
113                   3.58345         1.58849         0.12614         -0.20361          -0.18583          0.01846          1.5923          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[13.2286 13.2215 13.3934 13.2964 13.4147 13.1377 13.2882 13.1552 12.883   13.1003 13.0034 13.0184]]
114                   9.36282         2.09239         0.16957         -2.14478          -1.91995          0.12747          1.59288          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[11.9832 11.1425 12.1143  2.9602 13.9199 13.5431 13.7601 13.5714 13.0826   13.4893 12.6505 13.3452]]
115                   3.49424         1.50971         0.11786         -0.17364          -0.17293          0.0178          1.35525          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[12.9441 12.4316 13.1698 13.0658 13.1721 12.9006 13.0447 12.9336 12.6438   13.0054 12.7465 12.7684]]
116                   5.60546         1.80445         0.14616         -0.88276          -0.82403          0.04531          1.60092          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[12.7601 11.1706 12.2244  5.8724 13.8861 13.6058 13.7947 13.57   13.1821   13.5444 13.3955 13.356 ]]
117                   3.59528         1.59246         0.12639         -0.20758          -0.18977          0.01851          1.59355          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[13.2595 13.2203 13.4011 13.314  13.3846 13.1525 13.2731 13.1706 12.8689   13.1015 12.9778 13.0197]]
118                   6.06877         1.85634         0.15051         -1.03837          -0.9664          0.05236          1.67587          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[12.7156 11.1696 12.3543  5.445  13.8404 13.5848 13.7959 13.593  13.2137   13.5113 13.2731 13.3285]]
119                   3.5422         1.57042         0.12267         -0.18975          -0.18974          0.01805          1.35525          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[13.0043 12.9928 13.1698 13.0658 13.1591 12.9133 13.0447 12.9334 12.6437   12.8729 12.7465 12.7683]]
120                   3.4922         1.56236         0.12262         -0.17296          -0.17169          0.01785          1.4192          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.078  13.0618 13.2179 13.1042 13.1932 12.9612 13.1342 12.9575 12.7116   12.9678 12.8192 12.9103]]
121                   8.50161         2.44161         0.20734         -1.85551          -0.27621          0.04183          2.28247          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[15.1163 15.0556 15.5457 15.4027 15.3756 14.9855 15.3987 14.936  14.6831   14.9616 15.1791 14.761 ]]
122                   6.83511         2.01486         0.15891         -1.29577          -1.23133          0.04327          1.62707          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.0644 11.2669 12.1502  6.9879 13.9489 13.4256 14.6842 13.7111 10.6982   13.4872 13.3902 13.309 ]]
123                   11.25932         2.62858         0.20515         -2.78177          -2.47478          0.09806          2.1664          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[11.3222 12.6244 11.9008  4.2831 14.5609 10.4205 13.6194 13.1028 10.3515   16.177  13.2342 12.3108]]
124                   3.50748         1.57061         0.12345         -0.17809          -0.17609          0.01795          1.42825          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[13.0575 13.1375 13.2313 13.114  13.2505 12.9516 13.1425 12.9526 12.7443   12.9805 12.8709 12.8727]]
125                   8.13025         2.42991         0.20561         -1.73078          -0.24331          0.04022          2.32117          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[15.0707 14.9519 15.3272 15.2961 15.4405 14.9548 15.0554 15.1171 14.7999   15.1923 14.7552 14.672 ]]
126                   9.58751         2.1418         0.17118         -2.22025          -2.06036          0.08702          1.57108          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.9764 11.8531 12.0955  4.3828 14.9766 13.5677 13.8294 13.5053 10.6526   13.5215 13.3698 13.37  ]]
127                   11.51799         2.88563         0.2264         -2.86865          -2.48712          0.08675          2.64293          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.5635 11.0604 11.676   4.9898 15.4888 10.8173 13.4946 13.3906 10.8891   16.4323 13.2169 11.5711]]
128                   5.54646         1.80584         0.14498         -0.86294          -0.79498          0.04127          1.57528          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[12.7069 11.2715 12.1245  6.2682 13.9042 13.5574 13.7997 13.5668 12.5488   13.4386 13.405  13.3906]]
129                   3.6067         1.59538         0.12666         -0.21142          -0.19331          0.01858          1.59275          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[13.2482 13.2177 13.412  13.2969 13.4079 13.1224 13.2886 13.1806 12.8694   13.1269 13.0034 12.9919]]
130                   5.28621         1.77268         0.14317         -0.77553          -0.72366          0.04026          1.63847          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[12.8181 11.3295 12.1769  6.2449 13.9018 13.5577 13.7769 13.5701 13.1029   13.509  13.3888 13.2876]]
131                   3.54644         1.57259         0.12284         -0.19118          -0.19117          0.01807          1.36185          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[13.0043 12.9928 13.1697 13.079  13.1591 12.9002 13.0447 12.9335 12.6438   12.8728 12.7465 12.7684]]
132                   4.78263         1.73081         0.13987         -0.60639          -0.57165          0.03344          1.59932          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[12.8223 11.1096 12.1886  6.8658 13.9525 13.5511 13.8055 13.6588 13.2101   13.6022 13.3609 13.3938]]
133                   3.59897         1.59363         0.12658         -0.20882          -0.18957          0.01854          1.582          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[13.2553 13.2503 13.4205 13.288  13.4148 13.1484 13.276  13.1799 12.8941   13.1293 13.0021 12.994 ]]
134                   7.79106         1.95139         0.15897         -1.61685          -1.47454          0.08787          1.61482          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[11.9652 11.1556 12.2444  3.9395 13.9267 13.5525 13.8068 13.5358 13.1636   13.5552 13.3741 13.3496]]
135                   3.5428         1.57137         0.12274         -0.18995          -0.18994          0.01805          1.35455          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[13.0043 12.9927 13.1698 13.0644 13.1589 12.9001 13.0447 12.9334 12.6438   12.8729 12.7465 12.7683]]
136                   3.47618         1.55254         0.12189         -0.16758          -0.16619          0.01777          1.3897          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.0601 13.0679 13.224  13.0905 13.216  13.0267 13.0889 13.011  12.769   12.929  12.838  12.8299]]
137                   8.12117         2.40709         0.20376         -1.72773          -0.29158          0.04017          2.25182          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[14.9649 15.0098 15.5342 15.3816 15.194  14.9578 15.1006 14.9205 14.512   14.9855 14.7756 14.8571]]
138                   6.56376         1.96014         0.15453         -1.20463          -1.14675          0.03989          1.50437          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[12.9275 10.8685 12.1633  7.4735 13.8989 13.6106 14.6733 13.5199 10.5024   13.5467 13.848  13.3661]]
139                   6.47412         1.96349         0.15455         -1.17452          -1.13844          0.0425          1.61262          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.2691 11.1128 12.0099  6.7641 13.8092 13.3585 13.6362 13.3118 11.0653   15.362  12.6518 15.0962]]
140                   3.50439         1.56412         0.1228         -0.17705          -0.17553          0.01792          1.41235          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[13.0915 13.0759 13.2025 13.1225 13.2404 12.9731 13.1022 12.9874 12.7355   12.969  12.8505 12.8367]]
141                   8.11132         2.38548         0.20258         -1.72443          -0.21669          0.04015          2.28747          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[15.0844 15.1178 15.5144 15.4025 15.2003 14.8736 15.1029 14.8838 14.733   14.8967 14.9897 15.0054]]
142                   8.53388         2.11248         0.16712         -1.86635          -1.72313          0.06621          1.57048          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[12.7929 11.6095 12.0633  5.3635 14.0857 13.6313 14.667  12.7103 10.382   13.5317 13.3678 13.339 ]]
143                   14.07422         2.73272         0.21867         -3.72724          -3.19611          0.17948          1.81333          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.3561 10.9116 12.2199  2.3892 15.8839 11.4259 13.5642 12.8344 10.3426   13.4292 13.2499 12.6831]]
144                   10.06085         2.59039         0.20565         -2.37923          -2.36341          0.056          2.4696          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[15.0781 11.1339 12.5611  7.4377 15.0594 12.0482 15.0997 12.805   9.9769   17.8296 14.4337 14.5212]]
145                   10.92876         2.7322         0.21633         -2.67074          -2.61424          0.07588          2.13275          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[11.701  11.9102 11.8908  5.4541 15.9552  9.284  13.4898 14.3351 12.2731   17.8248 12.5043 13.8359]]
146                   13.61738         2.95406         0.22874         -3.57379          -3.40481          0.08765          1.94352          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[11.2762 10.654  12.4628  9.7191 16.5318  6.1812 13.3517 13.3973 11.0167   16.7855 10.1326 15.3594]]
147                   12.76678         2.97512         0.22876         -3.2881          -3.28809          0.06662          2.31377          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.6534 10.3901 12.2996 10.4967 16.0032  9.0476 14.0508 13.3703  9.2907   18.679  11.6514 15.5016]]
148                   9.62101         2.61107         0.20544         -2.2315          -2.2296          0.05243          2.04388          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.2047 12.6324 12.4861  8.2432 15.634   9.1522 13.6973 11.959  10.9997   17.7311 13.055  14.6837]]
149                   9.92157         2.44931         0.19109         -2.33245          -2.31745          0.04775          1.17          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.2222 11.2838 11.2554 10.3519 16.2068 10.0674 16.1309 13.8297 10.579   18.1043 14.1363 13.7481]]
150                   9.26229         2.74239         0.21683         -2.11101          -2.0277          0.04723          2.28423          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[13.1415 11.045  12.2465  7.8484 15.2483 10.5019 14.1315 18.6297 12.948   15.9603 12.8906 16.7648]]
151                   8.70319         2.28029         0.1735         -1.92322          -1.81804          0.04278          1.64818          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[11.703  10.909  11.1657  9.6873 14.8779 10.1824 11.6965 11.2213 10.2593   18.9872 14.0346 13.9406]]
152                   25.94497         4.17791         0.3144         -7.71438          -6.51581          0.22439          3.2527          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[14.8295 11.8048 12.0605  7.15   14.6446  4.9142 14.6925  7.4748  4.8831   16.2895 12.741  11.2271]]
153                   5.77669         2.04933         0.16406         -0.94027          -0.88792          0.03621          1.90937          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[12.848  11.76   12.3215  7.8035 14.1585  9.5284 13.7539 10.8076 12.995   15.3379 14.1807 15.1473]]
154                   12.60817         2.96827         0.23456         -3.23482          -2.99076          0.08444          3.24755          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.5451  9.4696  9.2831  5.6283 16.0829  9.5104 15.1848 12.5344 10.9871   16.948  11.8429 15.1342]]
155                   11.64885         2.59898         0.20997         -2.91261          -2.89892          0.06404          1.69322          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.2076 12.6848 12.1558  7.1596 17.0461 11.5259 17.0568 11.5693 10.0736   15.3773 14.6423 15.3034]]
156                   9.51017         2.43437         0.18933         -2.19427          -2.16675          0.05149          1.83273          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.4738 11.1598 12.2926  8.668  15.7855  9.9461 12.4435 13.3708  9.6874   17.3459 13.2838 14.4879]]
157                   15.02445         2.72487         0.20622         -4.0464          -3.84557          0.1095          1.80398          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[11.3223 10.6172 12.2785 10.4143 15.9003  9.8254 13.8276 12.6446  5.4319   16.2266 13.4934 14.1188]]
158                   11.98234         2.79768         0.21878         -3.02462          -2.90551          0.09086          1.99392          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[12.6576 10.5715 12.2656  4.9486 14.5237 11.2711 14.541  13.9592  9.2496   17.0893 13.2444 13.9124]]
159                   13.39676         3.089         0.24359         -3.4997          -3.2587          0.08397          2.87433          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 7.6961 10.3215 12.3034  7.2052 16.0435  9.2298 13.9924 13.0793  9.5247   17.2796 13.3664 15.1735]]
160                   7.37698         2.23096         0.1788         -1.47777          -1.47598          0.04655          1.55652          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[13.2601 11.7082 11.886   6.6751 15.7542 12.236  14.1289 14.2953 11.9546   15.3737 13.1787 15.8059]]
161                   8.21206         2.46729         0.19014         -1.75826          -1.68038          0.04083          2.16658          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.8553 11.2099 11.6556 10.2955 16.175  11.2312 13.6376 10.8823 11.2773   16.3745 12.3954 11.6122]]
162                   12.05303         2.8181         0.22298         -3.04836          -2.7388          0.12557          2.01028          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.7799 10.9914 12.6753  3.3975 13.8292 11.5151 14.9734 10.9946 10.5792   15.674  13.1215 13.3286]]
163                   12.79985         3.01409         0.23463         -3.29921          -2.41259          0.09446          2.37718          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.6437 10.5385 12.4162  5.2769 14.8782 10.6285 13.0296 12.3243  9.4848   14.5356 11.1916 12.9356]]
164                   16.59513         3.36761         0.25919         -4.57396          -4.49892          0.12792          2.54192          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.6401 11.5953 12.637   4.8131 13.0939  7.9323 15.469  16.4441  7.6642   16.2566 13.6535 16.509 ]]
165                   11.57798         2.80394         0.21877         -2.8888          -2.80427          0.06433          2.41353          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[12.9915 10.627  10.897   7.2456 16.7225 10.8051 14.0283 10.8145  9.9937   17.6546 12.4203 15.1596]]
166                   10.76353         2.62855         0.20504         -2.61525          -2.61525          0.05564          2.10052          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[11.8822 10.9987 12.3751  8.8708 16.1083  9.8572 14.0826 12.9763  9.7746   18.4785 13.8694 16.1073]]
167                   13.60235         2.98801         0.23215         -3.56875          -3.56857          0.07358          3.03003          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[16.4777 10.9101 11.0552  7.9377 15.7444 12.4096 16.7018 13.5129  8.8362   16.1211 10.9745 14.4222]]
168                   13.08137         2.81299         0.2229         -3.39376          -3.17262          0.10501          2.01008          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.7933 10.7277 12.469   4.6546 15.7631  7.9259 12.5818 13.4467 10.7018   16.7789 13.1055 14.6947]]
169                   9.0817         2.47341         0.19617         -2.05036          -1.97624          0.05092          2.5147          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[11.9787 10.1228 12.0571  7.7995 16.2526 10.5093 14.5822 12.6809 10.9315   15.234  12.3184 15.2761]]
170                   11.15192         2.50697         0.19567         -2.7457          -2.67476          0.07624          1.81783          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.2398 10.7308 10.1145  5.529  14.5231 10.396  13.3386 12.9212  9.8528   18.4608 14.8365 14.9221]]
171                   13.7074         2.96831         0.23022         -3.60403          -3.50227          0.07755          1.987          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 7.7976 12.0685 10.5601  7.8622 16.9283 11.4198 13.8038 11.4579  9.0883   18.5784 13.1932 16.0166]]
172                   19.37774         3.61134         0.28231         -5.50858          -5.21926          0.18753          2.78873          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[14.5421 11.792  12.7232  2.8936 15.9858  9.3066 14.6994 13.5709  8.5957   16.4014 10.175  13.5571]]
173                   10.11625         2.64938         0.20412         -2.39784          -2.39631          0.04905          2.03145          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[13.3084 10.5054 11.8867  9.4017 15.5668 10.136  13.1434 12.3822 10.5208   19.3197 12.4926 15.9063]]
174                   15.86825         3.3026         0.25582         -4.32982          -4.22393          0.11767          3.10475          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[11.0748 10.8438 11.8366  4.3584 16.5853  9.6085 12.0195 14.3953  9.6014   17.1082 12.2887 18.9219]]
175                   16.03395         3.20611         0.25505         -4.38547          -4.07646          0.19055          2.2014          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.4089 11.1455 12.5798  2.3883 16.1889  9.597  14.0468 14.1392 10.3518   14.9414 12.924  12.1584]]
176                   12.6645         3.00804         0.23732         -3.25374          -3.22994          0.07802          2.62492          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.7825 10.4607 12.5075  6.5862 15.8813  9.6463 14.544  13.6594  9.2295   16.8996 13.3106 14.6779]]
177                   8.06761         2.35279         0.1862         -1.70974          -1.69174          0.04321          1.91702          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.56   12.1079 12.0061  9.2033 16.2137  9.7658 14.0846 14.5517 14.6931   16.4111 10.2022 16.3586]]
178                   15.13928         3.05883         0.23659         -4.08497          -4.01787          0.09682          2.32003          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.2696 11.2319 12.2477  7.2667 16.8233 10.4913 13.3274 14.2965  6.8738   16.5301 12.4662 14.1921]]
179                   21.25056         3.38712         0.26168         -6.13762          -5.64423          0.21244          2.63193          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[12.3259  9.0112 12.3284  2.8808 15.7621 12.5947 13.3636 13.0685  6.1875   18.0255 11.3724 13.9153]]
180                   17.40031         3.67476         0.28562         -4.8444          -4.34511          0.12639          3.14207          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.1501 10.9258 12.3736  4.9763 15.9691  9.7288 14.9909 11.3506 10.7642   15.0908  7.7403 17.6888]]
181                   14.2765         3.3728         0.26773         -3.79518          -3.79          0.09999          3.0438          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[13.99   10.8276 12.4361  4.8756 15.9654 10.0298 15.7834 16.8969 10.5985   16.4174 12.8768 16.1727]]
182                   10.06101         2.66136         0.20409         -2.37928          -2.37633          0.0554          2.47148          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[14.8403 10.024  11.2618 12.8241 14.1079  8.7376 15.1868 14.5948  9.569   17.1214 13.6657 14.5712]]
183                   10.78577         2.63211         0.20956         -2.62272          -2.2572          0.09186          2.37027          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 7.8095 10.1173 12.3952  4.7701 13.7642 10.9355 12.6229 12.719  10.9923   16.735  14.6045 15.3962]]
184                   11.31137         2.87572         0.22575         -2.79926          -2.76434          0.05683          2.62345          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[16.732   9.8548 12.24    8.8683 15.1861 11.4313 14.8474 12.7565  9.9702   18.4276 13.539  15.3956]]
185                   13.88486         2.9397         0.22945         -3.66364          -3.49213          0.0789          1.80755          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.4809 10.8568 12.276   7.4632 16.7113 10.5161 10.929  11.4484  8.2702   18.8575 13.9264 15.0693]]
186                   12.67927         2.88995         0.22262         -3.2587          -3.0499          0.08113          2.17857          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.3326 10.9378 10.9618  6.4897 15.4202 11.4659 14.6865 11.3744  8.2572   15.9912 11.6041 14.3971]]
187                   5.31008         2.00611         0.16684         -0.78355          -0.18916          0.0274          1.93732          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[14.1509 14.3704 14.34   14.2094 14.6069 14.2365 14.6749 14.2271 13.8797   14.4022 14.177  14.0683]]
188                   5.39516         2.03165         0.16927         -0.81212          -0.13169          0.02782          1.9414          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[14.5228 14.1033 14.4051 14.0345 14.6995 14.3666 14.6665 14.4829 14.0605   14.6486 14.3113 14.1582]]
189                   5.35009         2.00887         0.16755         -0.79699          -0.15113          0.02763          1.80117          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[13.8975 14.3515 14.4475 14.3078 14.6501 14.3523 14.6681 14.4213 14.0671   14.4772 14.2121 14.1677]]
190                   5.27487         1.97571         0.16543         -0.77172          -0.10273          0.02734          1.77287          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[14.1369 14.0555 14.5751 14.3605 14.5388 14.5445 14.6012 14.4434 14.2055   14.2661 14.4237 14.1643]]
191                   4.82096         1.69502         0.1322         -0.61926          -0.57864          0.02523          1.62765          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.0116 11.5375 12.1978  9.9879 14.1227 13.5842 13.8437 13.574  11.0097   13.7311 13.4368 13.1697]]
192                   3.87546         1.66923         0.13132         -0.30169          -0.29659          0.0201          1.7077          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.0765 11.8294 12.2569  9.838  13.9801 13.5892 13.8212 13.4559 12.4268   15.1433 13.4266 13.0585]]
193                   4.55418         1.60204         0.12409         -0.52966          -0.4969          0.02352          1.47343          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.9975 11.7409 12.2403 10.7443 13.936  13.5666 13.8185 13.4405 11.0038   13.6007 13.4123 13.1313]]
194                   4.96223         1.68418         0.13064         -0.66671          -0.60826          0.02633          1.72843          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.6679 11.3952 12.2012  9.6189 13.916  13.6051 13.7754 13.3678 10.7593   13.6066 13.401  13.0598]]
195                   7.72147         2.16084         0.16603         -1.59348          -1.59304          0.03818          1.54107          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[12.5495 11.1276 11.9892 11.7557 16.2246 11.8854 13.3496 11.9413 10.4928   15.7386 11.9634 16.8   ]]
196                   4.57268         1.84793         0.14332         -0.53587          -0.49806          0.02368          1.84007          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[11.944  12.3422 11.9626  9.9911 13.4614 10.8905 14.4821 11.3449 12.8547   15.6917 11.9866 14.402 ]]
197                   5.16044         1.87248         0.14483         -0.73328          -0.64748          0.0277          1.64897          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[13.2404 12.2145 11.9887  8.8138 13.4698 13.0869 14.5801 12.8152 11.7197   12.0694 12.1204 13.196 ]]
198                   6.80663         2.13832         0.16717         -1.28621          -1.2709          0.03534          1.69772          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[13.0143 11.3426 12.1565  9.9044 15.3582 10.9135 14.4698 13.4204 10.7206   12.3451 13.0698 16.1033]]
199                   20.07751         3.38322         0.27089         -5.74362          -5.63479          0.34569          2.72968          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.5249 12.1026 12.3145  0.9329 16.1962  9.8218 16.213  12.9681  9.8791   17.4188 13.2456 13.932 ]]
200                   15.30792         2.95531         0.23542         -4.14161          -4.02346          0.20521          2.1151          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.3557 11.3635 12.3412  2.0647 15.748  11.0201 14.6369 12.6144 10.3259   15.6803 13.0609 17.0511]]
201                   9.67767         2.63686         0.20914         -2.25053          -2.24212          0.05524          2.02473          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.3823 10.4076 12.4939  7.0978 16.3944 11.2393 13.4506 13.6402 10.9616   17.1669 13.1011 16.146 ]]
202                   13.86431         3.01987         0.23452         -3.65674          -3.6284          0.10611          3.11718          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.7694 12.1994 12.265   4.5229 14.671   9.7679 15.2278 13.0116  9.5786   17.4035 12.7977 17.6799]]
203                   3.9587         1.70283         0.13901         -0.32965          -0.13116          0.02068          1.39108          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[13.6648 13.694  13.7053 13.4427 14.0685 13.8158 13.9561 13.8689 13.3654   13.8133 13.7193 13.4907]]
204                   4.06253         1.68354         0.13789         -0.36452          -0.17783          0.02123          1.34602          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[13.418  13.4151 13.9648 13.7278 13.9809 13.8249 14.0295 13.7067 13.3175   13.6798 13.6442 13.6171]]
205                   4.07237         1.71696         0.14032         -0.36782          -0.17242          0.02127          1.45715          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[13.6016 13.7907 13.886  13.4943 14.0914 13.7168 13.8724 13.776  13.3941   13.849  13.5864 13.4742]]
206                   3.72198         1.6266         0.13317         -0.25014          -0.06797          0.01954          1.35533          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[13.5675 13.471  13.7673 13.0376 14.0711 13.7888 13.9482 14.0201 13.5626   13.677  13.6935 13.6126]]
207                   4.47124         1.59018         0.12342         -0.5018          -0.45739          0.02303          1.43383          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.1228 11.6957 12.2739 10.5958 13.9512 13.5543 13.8032 12.8154 11.1455   13.6268 13.3662 13.0656]]
208                   3.21675         1.47455         0.11732         -0.08044          -0.06531          0.01681          1.50783          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.862  11.581  12.102  10.2516 13.9658 13.5614 13.8586 13.3496 13.0556   13.6106 13.3963 13.239 ]]
209                   4.45914         1.52031         0.11694         -0.49773          -0.48563          0.02282          1.32267          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.7788 11.4315 12.2634 11.6272 13.9442 13.6    13.8042 13.5907 11.0193   13.5993 13.4065 13.0372]]
210                   5.1283         1.69099         0.13159         -0.72249          -0.65609          0.02802          1.64418          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.8163 11.6401 12.0414  8.8918 13.9673 13.5852 13.8411 13.3065 10.8197   13.6229 13.4097 13.1024]]
211                   3.56237         1.62348         0.12764         -0.19653          -0.17593          0.01784          1.62048          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[12.2204 13.4904 12.2705 12.9938 13.3508 11.5    12.9078 11.0901 13.2416   16.7068 13.7327 14.8469]]
212                   8.44822         2.49777         0.19545         -1.83758          -1.82884          0.04395          2.14442          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[13.7918 11.2988 12.5282  8.974  15.755  10.8469 14.0173 13.3315 10.4807   16.4384 13.0811 16.7725]]
213                   3.3941         1.57691         0.12113         -0.14001          -0.03639          0.01809          1.28702          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[12.8816 11.3047 12.1991 11.7288 13.1232 10.2369 12.8562 12.3096 13.1903   12.7681 12.7518 13.3646]]
214                   6.10472         2.14319         0.16794         -1.05045          -1.01554          0.02965          1.70597          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[11.6433 10.5134 11.7463 13.122  15.6585 10.4708 12.9465 12.1972 13.0622   16.3507 13.6048 17.9327]]
215                   15.77168         2.99656         0.23737         -4.29738          -4.19907          0.23335          2.42332          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.7943 12.2564 12.4031  1.7362 14.2052  9.8732 14.7002 13.0167 10.3946   17.3704 13.2375 15.9001]]
216                   12.03234         2.774         0.22142         -3.04141          -3.03915          0.07404          2.70007          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.5388 12.7568 13.0372  6.1204 16.6655 10.2502 14.6196 12.6285 10.3377   17.5599 13.8652 15.9855]]
217                   18.83688         3.13718         0.252         -5.32692          -5.20544          0.43663          2.5842          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.3165 12.7899 12.4498  0.4305 16.1191 10.168  14.6662 13.8357 10.5056   16.6874 12.7778 15.4168]]
218                   4.07462         1.61421         0.12304         -0.36858          -0.25765          0.02092          1.64877          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[10.3084 12.5243 12.4989 11.5623 13.2546 12.8721 13.1626 12.6109 12.1052   12.8241 12.6346 12.1256]]
219                   3.45644         1.50416         0.1154         -0.16095          -0.08519          0.01749          1.13252          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[11.137  11.9644 12.8102 11.6784 13.1282 12.7816 12.9587 12.8633 12.5909   12.6726 12.628  12.4678]]
220                   3.90723         1.66557         0.12791         -0.31236          -0.22618          0.02          1.51297          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[10.5736 12.1645 12.7722 12.3936 13.0323 12.711  13.1562 12.639  12.2532   12.6234 12.7357 12.247 ]]
221                   4.2623         1.72481         0.13251         -0.43162          -0.2604          0.02218          1.57763          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[11.163  12.2014 12.5082  9.706  13.2789 12.816  13.0946 12.5079 12.0295   12.8521 12.6293 12.0254]]
222                   47.69425         6.73502         0.51458         -15.01951          0.21612          0.44012          6.60095          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[5.388  6.7941 6.1493 6.3658 5.0177 6.4158 5.9974 6.7101 6.895  6.5908   6.2889 5.9469]]
223                   62.36598         7.54513         0.57154         -19.94744          -0.82616          0.68339          7.46618          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[4.409  5.3053 5.5009 5.6069 6.9082 6.8803 6.9889 3.4319 5.1342 4.1304   6.3408 4.2016]]
224                   50.01249         6.88806         0.52738         -15.79816          0.13775          0.48214          6.86628          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[6.5845 7.2285 4.9328 4.1981 5.7893 6.521  6.4914 6.1931 5.9744 5.3467   7.0699 6.3936]]
225                   54.72245         7.18458         0.54826         -17.38014          -0.04264          0.5437          6.66035          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[5.9382 5.6662 5.7949 4.9831 5.8437 7.8645 5.356  5.3385 6.6685 5.0488   5.4943 5.1683]]
226                   9.12158         2.58019         0.21808         -2.06375          -0.32161          0.0444          2.57477          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[15.1873 15.1507 15.8377 15.1641 15.5206 15.1701 15.229  15.4255 14.6884   15.6609 14.8651 14.8101]]
227                   7.84817         2.3928         0.20203         -1.63604          -0.08236          0.0388          2.52342          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[14.8182 14.8753 14.8613 15.0576 15.4717 15.9843 15.1139 15.178  14.8482   15.009  15.1886 14.7828]]
228                   8.94947         2.50041         0.21205         -2.00594          -0.39937          0.04366          2.17775          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[14.5461 15.0528 15.4524 15.6262 16.1692 14.7847 15.0906 15.1094 14.4529   15.0865 15.5035 14.7503]]
229                   8.15166         2.5454         0.21234         -1.73797          -0.23737          0.04003          2.60698          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[15.4884 15.4706 15.1082 14.9598 15.1175 15.0897 14.8667 14.8006 14.4292   15.8706 14.3039 15.2391]]
230                   3.34015         1.4906         0.11477         -0.12189          -0.09643          0.01682          1.12237          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.4569 12.8486 12.7635 12.253  12.9549 12.8677 13.2583 12.7174 12.3558   13.0646 12.8069 12.7285]]
231                   3.86888         1.55281         0.11951         -0.29948          -0.21462          0.0199          1.63563          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.8786 12.2924 12.3695  9.8856 13.3581 12.9839 13.3902 12.9404 12.2855   13.1702 12.6645 12.1296]]
232                   3.5921         1.42294         0.10923         -0.20651          -0.17986          0.01805          0.97225          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.2891 11.9058 12.5626 11.9372 13.5765 13.1413 13.1421 12.9438 12.3711   13.0876 12.6259 12.4167]]
233                   3.0226         1.33293         0.10215         -0.01523          0.01942          0.01513          1.14565          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.3087 12.4502 12.2597 10.9102 13.1408 13.1837 13.3743 12.8808 12.8147   12.973  12.762  12.4675]]
234                   3.4077         1.47704         0.11844         -0.14458          -0.10806          0.01762          1.49527          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[12.8852 12.8914 13.0675 12.9512 13.9727 13.5074 13.7374 13.3211 13.0836   13.4513 13.2339 13.234 ]]
235                   3.61202         1.59986         0.12725         -0.2132          -0.18929          0.01862          1.6211          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[13.2606 13.2905 13.4257 13.3475 13.4312 13.1467 13.2947 13.2364 12.8959   13.1833 12.9912 13.0779]]
236                   3.40765         1.45654         0.11676         -0.14456          -0.13674          0.01764          1.46797          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[12.1105 11.6181 13.0736 12.914  13.995  13.4809 13.7245 13.3133 13.0741   13.4171 13.2383 13.2514]]
237                   3.54322         1.57141         0.12274         -0.19009          -0.19008          0.01805          1.35435          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[13.0041 12.9917 13.1691 13.0643 13.1594 12.9003 13.0444 12.9326 12.643   12.8726 12.7464 12.7678]]
238                   3.41025         1.46744         0.11763         -0.14543          -0.13713          0.01766          1.48752          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[12.0556 11.6087 13.0732 12.9356 13.9801 13.4943 13.7292 13.3825 13.0939   13.4613 13.2189 13.2339]]
239                   3.63494         1.60178         0.12751         -0.2209          -0.19497          0.01875          1.6267          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[13.2875 13.2946 13.4228 13.3419 13.4853 13.2627 13.3115 13.2208 12.925   13.1122 13.0204 13.0294]]
240                   3.45819         1.50081         0.12033         -0.16153          -0.1445          0.0179          1.47802          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[12.8966 11.6464 13.0657 12.9269 13.9971 13.4899 13.7402 13.3463 13.0597   13.4534 13.2159 13.2442]]
241                   3.53265         1.56897         0.12257         -0.18654          -0.18653          0.018          1.3544          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[13.0026 12.9919 13.167  13.0643 13.1591 12.9001 13.0445 12.9331 12.6564   12.886  12.7464 12.7664]]
242                   2.96803         1.35448         0.10961         0.0031          0.11626          0.01526          1.34988          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.0178 12.9832 11.9863 13.0535 14.1544 13.6687 13.9222 14.2696 13.3467   13.6453 13.3937 14.9038]]
243                   5.76943         2.05945         0.17328         -0.93783          -0.06686          0.02963          2.11517          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[14.7426 14.7974 14.737  14.5619 14.4087 14.7442 14.3984 14.8596 14.6574   13.9688 14.8336 13.9942]]
244                   3.00061         1.37577         0.10991         -0.00784          0.02587          0.01527          1.25248          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[12.7333 11.4298 11.9881 12.1949 14.1318 13.6345 13.8923 14.6874 13.2005   13.6329 13.4664 14.1901]]
245                   5.10819         1.99353         0.15564         -0.71573          -0.48489          0.02883          2.28027          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[11.8085 11.2207 13.102   8.8796 13.0959 10.0648 13.6058 12.8682 12.5837   12.8097 12.6858 12.707 ]]
246                   4.84345         1.69452         0.13932         -0.62681          -0.4679          0.0243          1.48442          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[13.0108 13.0201 13.1662 13.0669 15.9839 13.6984 13.9099 13.9313 13.4522   13.6396 13.3834 13.3714]]
247                   5.24698         1.97259         0.16562         -0.76235          -0.00268          0.02718          1.79938          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.1941 14.5427 14.5465 15.033  14.0992 14.4277 14.3479 14.3795 14.562   14.4884 14.5045 14.3014]]
248                   3.53428         1.56012         0.12519         -0.18709          -0.18568          0.01911          1.61848          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[12.7047 11.4296 11.9544  9.2174 14.1346 13.6868 13.8944 14.8978 13.2042   13.6226 13.3741 14.0367]]
249                   6.93636         2.13671         0.16802         -1.32978          -1.31821          0.03447          1.9222          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.4858 12.2282 13.102  13.0005 15.4119 10.3197 13.2508 12.8675 11.8321   17.2753 12.6864 14.147 ]]
250                   3.42568         1.46834         0.11772         -0.15061          -0.14255          0.01773          1.47857          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[12.0514 11.6112 13.0753 12.9255 14.0066 13.4958 13.7232 13.36   13.0822   13.4488 13.2177 13.2417]]
251                   3.68238         1.60661         0.12789         -0.23683          -0.21025          0.01898          1.6664          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[13.2824 13.3025 13.4512 13.3631 13.4595 13.1968 13.3697 13.1859 12.8772   13.2485 13.0366 12.9825]]
252                   3.42195         1.46863         0.11771         -0.14936          -0.14183          0.01771          1.48067          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[12.008  11.6377 13.0623 12.9219 14.0045 13.4897 13.7269 13.3516 13.0803   13.4485 13.2116 13.2339]]
253                   3.54339         1.57146         0.12274         -0.19015          -0.19014          0.01805          1.3547          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[13.0035 12.9909 13.1695 13.0648 13.159  12.8995 13.0446 12.9328 12.6431   12.8722 12.7465 12.7674]]
254                   3.42157         1.46601         0.11749         -0.14923          -0.14156          0.01771          1.48332          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[12.0266 11.6432 13.0801 12.9356 13.9797 13.4873 13.7271 13.3399 13.0586   13.4484 13.2251 13.2423]]
255                   3.57348         1.59234         0.12687         -0.20026          -0.17269          0.01845          1.63455          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[13.2626 13.3375 13.4491 13.3157 13.4227 13.1878 13.3534 13.2185 12.9523   13.1729 13.0863 13.0588]]
256                   3.39813         1.44761         0.11606         -0.14136          -0.11765          0.01756          1.48822          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[12.0509 12.8844 13.0868 12.9426 13.9971 13.5047 13.7216 13.376  13.0825   13.4578 13.2245 13.2395]]
257                   3.54402         1.57239         0.12281         -0.19036          -0.19035          0.01805          1.355          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[13.0029 13.0054 13.1679 13.0654 13.1589 12.9001 13.0446 12.9332 12.6431   12.8727 12.7464 12.7676]]
258                   4.28912         1.82474         0.14642         -0.44063          -0.27639          0.02196          1.87522          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.0195 12.9904 13.1601 13.0509 14.1659 11.3492 13.9217 14.6497 13.2242   15.9046 13.4037 14.9312]]
259                   6.33122         2.09799         0.17705         -1.12653          -0.35967          0.03224          2.1447          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[14.4964 14.5721 14.99   14.6486 14.9089 12.8913 14.9129 14.3202 14.1227   14.5982 14.464  14.5868]]
260                   3.43567         1.48409         0.12013         -0.15397          -0.15339          0.01927          1.4426          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[12.6514 11.4154 11.9732  8.9058 14.1265 13.6433 13.8915 14.392  13.2033   13.6165 13.5326 14.5285]]
261                   6.03714         1.85973         0.14707         -1.02775          -1.02435          0.02933          1.43485          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.0758 12.9294 12.1521 13.0034 16.3818 12.8393 13.2663 12.8695 11.8785   12.809  12.683  12.6994]]
262                   3.4537         1.45144         0.1185         -0.16003          -0.07649          0.01804          1.13283          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[13.0129 13.0197 13.1729 13.0961 14.1447 13.6912 13.915  12.4144 13.2228   13.6074 13.109  14.9584]]
263                   5.76317         2.06364         0.17312         -0.93573          0.00734          0.02945          1.8317          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.7877 15.0173 14.6301 14.7242 14.5095 14.8124 13.6045 14.6465 14.3511   14.9035 14.7651 14.7358]]
264                   3.36848         1.47487         0.12001         -0.1314          -0.12825          0.01913          1.15263          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[12.9204 11.4259 11.9944  8.8507 14.1502 13.6831 13.8727 14.3328 13.2185   13.638  14.0842 14.3712]]
265                   8.22775         2.20631         0.17944         -1.76353          -1.64948          0.05598          1.84057          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[12.1571 10.8585 13.1079  6.0487 16.3245 12.8372 13.1258 12.8721 12.7156   12.9487 12.6875 12.7037]]
266                   3.46647         1.50273         0.12047         -0.16432          -0.14872          0.01794          1.49562          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[12.8729 11.6124 13.0582 12.9399 14.0126 13.4773 13.7224 13.3327 13.0544   13.4275 13.2336 13.222 ]]
267                   3.6615         1.60678         0.12791         -0.22982          -0.20338          0.01888          1.6629          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[13.3208 13.2601 13.4493 13.3648 13.4493 13.2154 13.361  13.2055 12.8825   13.1564 13.0148 13.067 ]]
268                   3.43634         1.49866         0.12015         -0.1542          -0.13849          0.0178          1.45767          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[12.8825 11.5946 13.0703 12.9082 13.9794 13.4747 13.718  13.3629 13.0655   13.436  13.2164 13.2662]]
269                   3.54215         1.57111         0.12271         -0.18974          -0.18972          0.01804          1.35345          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[13.0038 12.9913 13.168  13.0627 13.1593 12.8999 13.0442 12.933  12.6432   12.8727 12.7465 12.7674]]
270                   3.41044         1.46945         0.11776         -0.1455          -0.13816          0.01765          1.47892          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[11.9992 11.6196 13.0725 12.9134 13.9848 13.5098 13.7195 13.3502 13.0717   13.442  13.2421 13.2289]]
271                   3.61648         1.6014         0.12747         -0.2147          -0.18941          0.01866          1.6225          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[13.2924 13.2681 13.4582 13.3596 13.422  13.177  13.3151 13.226  12.9091   13.1309 13.0042 13.1101]]
272                   3.41785         1.47549         0.11825         -0.14798          -0.1132          0.01766          1.48567          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[12.858  12.8606 13.0546 12.9282 13.9939 13.4971 13.7317 13.353  13.058   13.4414 13.235  13.2302]]
273                   3.53849         1.57057         0.12268         -0.18851          -0.1885          0.01803          1.355          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[13.0041 12.9922 13.1695 13.0654 13.1588 12.8994 13.0446 12.9324 12.6436   12.873  12.7597 12.7663]]
274                   3.06357         1.38918         0.11222         -0.02899          0.05483          0.01573          1.48878          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.0042 11.8871 12.0151 13.0774 14.1618 13.6942 13.9266 14.5235 13.5077   13.6213 13.0628 14.8929]]
275                   5.72928         1.99256         0.16795         -0.92435          -0.05743          0.02932          1.83857          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[14.7493 14.4086 14.6866 13.2563 15.1304 14.3998 14.6792 14.588  14.2225   14.7181 15.2751 14.5448]]
276                   3.71351         1.57368         0.12624         -0.24729          -0.23495          0.02122          1.51843          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[12.5792 11.0987 11.9668  8.6288 14.1278 13.6467 13.8852 13.6094 13.1991   13.5951 13.396  13.3466]]
277                   5.25124         1.62566         0.12958         -0.76378          -0.76154          0.0362          0.8904          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[12.0122 13.4183 12.2715  6.5559 13.0993 12.9789 12.0233 12.8687 12.6064   17.2962 14.3475 14.9223]]
278                   3.5797         1.50999         0.12327         -0.20235          -0.03114          0.01858          1.59273          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[13.0394 12.9927 13.1751 13.0668 14.1651 13.6598 13.9125 14.742  13.2198   13.6395 13.3945 14.9403]]
279                   5.84583         2.05202         0.17115         -0.96349          -0.20292          0.0297          2.11358          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.5806 15.3604 14.7252 13.4899 14.566  14.4005 14.4414 14.5396 13.606   14.4373 14.5116 14.7791]]
280                   3.09318         1.38872         0.11033         -0.03894          -0.015          0.01563          1.26168          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[12.5707 11.4206 11.9973 11.914  14.1338 13.634  13.8782 14.9126 13.2116   13.6321 13.3722 13.9061]]
281                   5.70564         1.83718         0.14721         -0.91641          -0.8995          0.02809          1.3851          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[12.5294 12.9277 13.1024 13.0054 16.222  12.84   13.1648 13.5043 12.578   12.8133 12.6811 12.7041]]
282                   10.28325         2.79115         0.22095         -2.45393          -2.45208          0.05472          2.66002          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[12.4986 10.6203 13.0108  8.3242 16.3226  9.1169 14.5659 12.8167 12.0087   17.7079 12.5524 16.7272]]
283                   13.80547         3.09296         0.24554         -3.63697          -3.60448          0.08383          3.45847          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[11.4301 11.4398 12.4257  5.9176 16.8209  9.689  15.8601 13.1814 10.7577   17.9667 11.8974 14.261 ]]
284                   12.45822         2.92125         0.23116         -3.18446          -3.16849          0.07857          2.48523          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[13.1507 11.4999 12.8238  6.0364 16.6875 10.7939 14.8024 12.4405  9.6236   15.9302 12.51   16.4647]]
285                   8.1883         2.41622         0.18895         -1.75028          -1.74437          0.04937          2.22852          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[13.4081 11.4341 12.7794  6.8073 14.831  11.7484 12.4401 12.8786 11.4551   16.9084 12.1232 16.9743]]
286                   9.65409         2.59412         0.20386         -2.24261          -2.22514          0.05348          2.09023          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.6407 11.2342 12.3893  7.751  15.5763  9.8983 13.6747 12.5252 10.5328   17.6485 12.8655 14.907 ]]
287                   9.85372         2.65939         0.21003         -2.30966          -2.30827          0.05166          2.75415          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.9989 11.37   12.4247  8.555  16.4825 10.0862 14.6453 14.7688 10.7021   16.661  12.417  15.0418]]
288                   10.42871         2.69061         0.20534         -2.50279          -2.48973          0.05131          2.1803          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.8832 10.9558 11.6662 12.7213 16.2061  9.5956 13.4179 12.0905 10.2168   18.0147 12.3373 17.6406]]
289                   13.33969         3.16124         0.24805         -3.48052          -3.48043          0.0688          2.79738          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[15.1872 11.6472 12.399   8.4084 17.3429 10.9301 13.4459  9.2478 10.0082   18.3047 12.4291 15.826 ]]
290                   9.41505         2.44008         0.19225         -2.16232          -2.08504          0.04636          1.77823          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[12.8439 12.7515 12.5353 10.9215 16.4764  9.3147 15.0823 12.3015 11.4177   18.0043 13.6355 15.8515]]
291                   11.22995         2.8345         0.22428         -2.77191          -2.76602          0.05886          2.07088          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[14.381  10.774  12.4487  8.7318 17.325   8.709  12.556  14.6915 11.1968   17.5149 13.0759 15.5644]]
292                   12.4629         3.21961         0.25088         -3.18603          -3.11008          0.0627          3.10578          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[13.6676 11.1733 12.6107  8.6415 16.6152  9.5205 15.0864 15.009  10.565   17.5614 12.3351 18.3004]]
293                   16.95151         3.15475         0.24833         -4.69366          -4.40308          0.20202          2.54268          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[12.9288 11.4616 12.3993  2.2622 15.4785  9.502  13.3516 12.7378  9.8018   17.9729 11.9706 14.3514]]
294                   6.86257         2.17313         0.17447         -1.305          -1.27985          0.03634          1.99807          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.7572 12.129  12.6469  8.7881 15.7806 10.0635 13.6059 12.7094 12.5266   16.9386 14.1263 15.5912]]
295                   12.20576         2.84266         0.22112         -3.09966          -3.05816          0.06538          3.14423          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.3039 11.5101 12.3492  8.4788 16.3248  9.1241 15.0006 12.6303 10.0746   17.7517 11.068  14.5457]]
296                   12.19813         2.93707         0.22956         -3.0971          -3.0925          0.06217          2.7954          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.4598 11.0891 12.5079  9.2616 16.6668 10.1376 15.1358 14.466   9.6941   17.9118 11.6038 14.8504]]
297                   8.4294         2.27752         0.18058         -1.83126          -1.83033          0.04056          1.92937          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.8393 11.2988 12.4225  9.7071 17.0648 10.4535 12.8538 13.1256 11.8644   17.4989 12.5756 14.3086]]
298                   9.99705         2.63762         0.20144         -2.3578          -2.30363          0.0511          2.4857          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[13.0617 11.9728 12.4081 12.7683 14.8737  9.2319 14.8963 13.3971 10.0683   17.9345 12.4276 17.159 ]]
299                   10.9982         2.93725         0.23102         -2.69407          -2.66022          0.06133          2.51765          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[13.9589 10.6461 12.5322  7.9179 16.345   8.8944 14.2155 13.4891 10.9587   17.0015 12.4602 13.1512]]
300                   10.78174         2.73016         0.2164         -2.62136          -2.61588          0.06165          2.83027          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[12.6159 11.5855 13.8052  7.6784 15.7248  9.0793 14.112  13.8402 10.304   17.3399 13.8426 13.9196]]
301                   10.35612         2.70947         0.2103         -2.47841          -2.47022          0.04977          2.31313          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[12.4176 11.5742 12.1538  9.7262 16.592  10.1029 14.236  11.587  10.8376   18.3706 12.592  17.0636]]
302                   9.66024         2.52499         0.20368         -2.24467          -2.22413          0.06486          2.13255          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.1987 11.2645 12.2549  6.0116 16.2357  9.2687 13.8474 12.8413 12.8576   16.8034 12.8623 14.9658]]
303                   9.24993         2.52519         0.19444         -2.10686          -2.04917          0.04948          2.50458          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.7524 11.3706 11.2287  8.6843 15.6     9.4558 13.9268 12.2208 10.7179   17.1265 11.6529 15.6702]]
304                   11.57134         2.82411         0.22354         -2.88657          -2.80518          0.06968          2.09413          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.609  11.1866 12.786   6.5299 16.5964 10.0031 13.5662 11.6026 10.181   17.2168 13.2544 13.9408]]
305                   9.2431         2.37614         0.18888         -2.10457          -2.06848          0.04667          2.06197          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.8219 12.0963 12.6398 10.4439 16.7641  9.4007 13.7408 12.801  11.0299   17.0403 13.7922 14.7426]]
306                   11.2508         2.78772         0.21704         -2.77891          -2.76541          0.0593          2.8258          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[11.9389 11.3967 12.2782  8.2469 16.1849  9.6943 14.4702 12.5453 10.15   18.1676 12.0986 15.8024]]
307                   9.82595         2.51799         0.1975         -2.30033          -2.1513          0.05834          2.12368          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[12.6864 11.247  12.561   6.9688 16.1076  9.8396 11.8533 12.483  10.6491   16.6863 12.9703 13.3342]]
308                   10.43767         2.75927         0.21716         -2.5058          -2.50088          0.0599          2.57068          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[11.519  12.0916 11.8273  6.6609 16.0276  9.8757 14.5077 13.7313 12.2914   18.3007 12.6918 17.307 ]]
309                   13.19244         3.04814         0.23607         -3.43107          -3.35982          0.07575          3.03235          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[11.7315 11.3558 10.2112  6.7688 16.698   9.3315 15.1885 11.6698  9.9154   17.4317 12.4038 17.1473]]
310                   12.45142         3.00816         0.24043         -3.18218          -3.15646          0.0815          2.64407          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.2758 11.4349 12.2593  5.5612 16.4482  9.7701 16.0132 11.8241 11.2684   17.1755 13.7454 13.2833]]
311                   8.36738         2.51614         0.19991         -1.81043          -1.80854          0.04368          2.24153          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[14.0454 10.9349 12.4949  8.7498 16.1617  9.5176 13.0027 12.3663 12.8004   17.7252 12.6685 14.012 ]]
312                   8.7659         2.40094         0.19022         -1.94428          -1.94387          0.04299          2.11817          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.4252 11.71   12.3973 10.6637 17.1676  9.4481 14.0957 11.7398 12.6346   17.3145 12.5622 13.6439]]
313                   8.60512         2.55195         0.20235         -1.89028          -1.86975          0.04439          2.3284          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.0891 11.2689 12.4314  8.3028 16.4673 10.8085 14.0571 15.069  11.982   16.9979 12.6803 16.1923]]
314                   9.66207         2.71957         0.21414         -2.24529          -2.22793          0.04969          2.1312          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.0187 11.5356 12.4611  9.1235 16.4703  9.7354 13.5871 11.5453 11.2375   17.6935 13.1226 16.1214]]
315                   9.59241         2.65067         0.20404         -2.22189          -2.21166          0.0506          2.887          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[12.6668 11.533  11.5653  8.6225 15.0863  9.6007 15.1185 12.241  10.5078   17.4409 12.2835 16.6187]]
316                   11.63476         2.86572         0.2226         -2.90788          -2.90393          0.06369          2.32988          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[12.7374 11.3792 12.3454  7.847  16.2409  9.5619 13.5085 14.5612  9.7248   17.8927 12.3423 15.9377]]
317                   10.54769         2.60359         0.204         -2.54275          -2.53841          0.05405          2.45315          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[12.9416 11.2714 12.3082  8.8939 16.6429 10.0741 14.0422 12.9306 10.132   17.788  12.4159 14.5752]]
318                   12.51905         3.11023         0.24408         -3.20489          -3.19692          0.06769          3.15722          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.4351 11.1622 14.041   7.7854 16.3029 10.2962 14.0357 15.6014  9.8265   17.3414 11.8927 16.5082]]
319                   9.77645         2.64096         0.21088         -2.28371          -2.19606          0.04714          2.17325          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.8772 11.3927 12.4278 15.9132 16.5537 10.4794 13.995  10.8926 11.6826   17.4546 12.9285 14.9125]]
320                   9.90744         2.68127         0.21298         -2.3277          -2.31904          0.05174          2.45883          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.4725 11.16   12.7848  7.983  16.7699 10.0492 13.599  13.0457 11.8601   17.8059 12.5238 16.2536]]
321                   10.37197         2.8073         0.22541         -2.48373          -2.48053          0.07041          2.83537          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.1838 11.3664 14.7128  5.7675 14.7517  9.5622 13.3453 11.9621 12.5626   17.5861 13.09   16.3187]]
322                   11.13681         2.84666         0.22363         -2.74062          -2.70093          0.06544          2.2583          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[13.1307 11.3954 12.446   6.8978 15.6584  9.4441 14.1647 11.4959 10.4362   17.9352 12.9281 15.3224]]
323                   8.48232         2.42335         0.18772         -1.84903          -1.84849          0.04261          1.82682          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[13.4843 12.1965 12.0401 10.2279 16.0186 10.124  13.8702 11.8993 10.7993   16.9302 12.1938 16.0776]]
324                   11.71213         2.77895         0.21971         -2.93386          -2.93323          0.06527          2.15247          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[12.8318 11.1729 12.4318  7.3267 16.9895  9.5882 14.1298 12.983  10.1493   17.5109 13.587  16.1607]]
325                   10.4316         2.57669         0.20046         -2.50376          -2.44277          0.0531          2.31762          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[13.1209 10.9674 12.5883 11.9289 16.5964  9.3839 14.3036 12.5483  9.9765   17.1056 14.3771 17.5965]]
326                   14.09921         3.12921         0.2459         -3.73563          -3.54318          0.0934          2.85997          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.8531 11.2961 13.0214  5.578  16.604   9.4729 13.6931 11.9788  9.5157   16.8452 11.5763 13.8618]]
327                   11.94755         3.0258         0.23838         -3.01293          -3.01288          0.06246          3.22127          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.9228 11.06   13.5867  8.2875 16.2383  9.9823 15.1371 11.8348 10.2709   18.0835 12.2268 15.9035]]
328                   13.0591         2.65618         0.21191         -3.38628          -3.38382          0.06465          1.91897          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.2657 10.9179 11.1856  7.8194 19.2954  9.0751 12.8277 13.1754 11.7091   17.8659 12.7275 15.4875]]
329                   10.79763         2.6587         0.20731         -2.6267          -2.60159          0.05124          1.84137          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[13.4811 10.9123 12.3586 10.4866 16.8126  9.78   13.5808 13.3224 10.8542   19.0496 12.3553 15.6677]]
330                   5.23665         1.96788         0.16382         -0.75888          -0.22722          0.02709          1.98387          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[14.3491 14.2653 14.4375 14.4068 14.5433 14.0911 14.2341 14.1566 13.862   14.0723 13.9921 14.0674]]
331                   5.35169         1.99897         0.16625         -0.79752          -0.26052          0.02763          1.86602          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[14.1552 14.2235 14.5658 14.4224 14.5562 14.1494 14.3271 14.2287 13.8535   14.1521 13.9446 13.9747]]
332                   5.26206         1.99881         0.16589         -0.76742          -0.23161          0.02718          1.93967          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[14.2522 14.2738 14.4641 14.3912 14.4237 14.236  14.3517 14.2265 13.7955   14.1518 14.0305 13.9393]]
333                   5.2202         1.98292         0.16469         -0.75336          -0.22308          0.02698          1.92847          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[14.3014 14.2022 14.4155 14.4326 14.4292 14.2032 14.358  14.1468 13.802   14.1476 14.0203 13.9991]]
334                   3.55174         1.57429         0.12245         -0.19295          -0.19152          0.01804          1.29415          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.9389 12.9608 13.1035 12.9932 13.1082 12.846  12.9951 12.8468 12.5686   12.8222 12.6917 12.7196]]
335                   3.54164         1.5692         0.12206         -0.18956          -0.18831          0.01799          1.3073          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.9481 12.9387 13.1149 13.0297 13.0793 12.8555 12.9849 12.8903 12.5738   12.8065 12.7033 12.7225]]
336                   3.54808         1.57189         0.12227         -0.19173          -0.1903          0.01803          1.2837          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.962  12.9326 13.1097 12.9727 13.1148 12.8402 12.9947 12.8566 12.5806   12.8307 12.6752 12.7272]]
337                   3.55718         1.57738         0.12265         -0.19478          -0.19322          0.01807          1.30435          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.9416 12.955  13.0833 13.0118 13.1124 12.8324 12.9969 12.8545 12.5698   12.8086 12.7045 12.6893]]
338                   5.80451         1.90251         0.14338         -0.94961          -0.92813          0.02843          1.40725          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[13.3369 11.6173 11.6768 11.5406 13.7792 11.5059 12.6113 11.4623 11.2544   17.2768 14.8543 11.4294]]
339                   4.25862         1.76071         0.13798         -0.43038          -0.42666          0.02229          1.74718          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[13.4139 11.2491 13.4634 11.6633 13.3391 11.4512 12.6277 11.5011 13.3845   15.7921 14.8798 11.3519]]
340                   2.58704         1.4699         0.11355         0.13107          0.15343          0.01323          1.47938          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[11.2723 11.256  11.918  13.0641 11.6453 11.0205 13.3198 12.0453 13.3927   15.4306 14.8605 13.0584]]
341                   2.99354         1.51548         0.1209         -0.00547          -0.00545          0.01601          1.57377          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[13.3083 11.5551 11.9767 13.357  13.3133 11.3981 13.4275 12.1106 13.3686   11.4202 14.8673 15.1762]]
342                   3.53489         1.56918         0.12264         -0.1873          -0.1873          0.01802          1.3729          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.9868 12.9952 13.1692 13.0865 13.1673 12.91   13.0593 12.9437 12.6663   12.8767 12.7409 12.7832]]
343                   4.05301         1.65509         0.13077         -0.36132          -0.3494          0.0207          1.3586          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.0148 12.9725 13.1506 13.0656 14.1657 13.4119 13.0516 13.7216 12.6575   12.8942 12.7707 12.7641]]
344                   4.01614         1.60621         0.12697         -0.34894          -0.34422          0.02052          1.3415          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.9999 12.9976 13.1643 13.0387 14.1506 13.4044 13.0443 12.9399 12.6452   12.8909 12.7504 12.7767]]
345                   4.05757         1.66541         0.13149         -0.36285          -0.35114          0.02073          1.35895          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.0117 12.9899 13.165  13.067  14.1207 13.3839 13.0509 13.7944 12.6569   12.8791 12.7569 12.7446]]
346                   4.47133         1.80969         0.14869         -0.50183          -0.22865          0.02328          1.63752          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[13.9384 13.9833 14.0604 13.9645 14.1404 13.7753 13.9723 13.8504 13.4728   13.7842 13.6137 13.6464]]
347                   4.5064         1.80542         0.14845         -0.5136          -0.2428          0.02345          1.53543          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[13.8512 13.8301 14.1499 14.0226 14.1048 13.7687 14.0471 13.8785 13.4321   13.7671 13.617  13.6859]]
348                   4.32768         1.77674         0.1462         -0.45358          -0.18617          0.02261          1.56828          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[13.9182 13.8409 14.0816 14.0029 14.0687 13.841  13.8902 13.858  13.6161   13.7126 13.6183 13.6388]]
349                   4.32947         1.78673         0.14697         -0.45418          -0.17346          0.02262          1.55017          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[13.8873 13.8597 14.0167 14.0504 14.0887 13.8296 13.9494 13.8715 13.5857   13.8523 13.6878 13.6713]]
350                   3.54313         1.57221         0.12237         -0.19006          -0.18899          0.01801          1.30315          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.9589 12.9464 13.1136 13.0005 13.1153 12.8511 13.0058 12.8758 12.6055   12.8254 12.6856 12.7172]]
351                   3.53474         1.57247         0.12245         -0.18725          -0.18627          0.01797          1.3095          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.981  12.9227 13.1141 13.0288 13.122  12.8441 12.9902 12.8666 12.6131   12.8127 12.7043 12.735 ]]
352                   3.54794         1.56909         0.12213         -0.19168          -0.19062          0.01803          1.29615          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.9522 12.9382 13.1197 12.9936 13.1219 12.8545 12.9987 12.8868 12.5773   12.8311 12.7166 12.7156]]
353                   3.53285         1.56609         0.12184         -0.18661          -0.18549          0.01795          1.2983          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.9662 12.9324 13.0939 13.0114 13.1073 12.8685 12.9852 12.8974 12.5981   12.8317 12.7021 12.6922]]
354                   4.98019         2.00113         0.15525         -0.67274          -0.65787          0.02558          2.10057          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[11.3166 11.3247 13.5231 13.4035 13.1563 11.0257 13.0223 13.2913 12.2692   15.4945 12.5575 12.4704]]
355                   2.34479         1.28653         0.10249         0.21243          0.21245          0.01226          0.97292          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[11.3316 13.3625 11.9763 13.2942 13.0036 11.8581 12.6574 12.07   13.0276   12.8835 14.8851 15.1069]]
356                   4.24479         1.73159         0.13777         -0.42574          -0.42414          0.02223          1.44333          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[11.3099 11.3308 13.4601 11.5345 14.3223 11.0124 12.9094 12.0448 13.384   15.5006 12.5804 15.1635]]
357                   2.70529         1.3244         0.10595         0.09135          0.11486          0.01427          1.11508          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[13.3933 11.2898 12.9939 11.5239 13.0249 11.2918 12.8787 13.2203 13.3659   15.5565 14.8697 15.1463]]
358                   4.08292         1.65994         0.13108         -0.37137          -0.36911          0.02086          1.3659          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.0208 12.9946 13.1643 13.0786 14.1868 12.9066 13.0532 12.9353 12.6413   12.8684 12.7461 12.768 ]]
359                   4.0075         1.63974         0.12971         -0.34603          -0.32903          0.02048          1.3624          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.0235 13.0139 13.1496 13.0771 14.1361 12.9027 13.0477 13.7286 12.6641   13.8054 12.7618 12.7698]]
360                   4.14682         1.67061         0.13217         -0.39283          -0.39227          0.02134          1.40917          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.9711 11.0853 13.1641 13.1003 14.1525 13.3891 13.0512 12.9383 12.6251   12.8594 12.7617 12.793 ]]
361                   4.00146         1.59902         0.12663         -0.34401          -0.33461          0.02047          1.37615          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.0223 13.0021 13.1746 13.1016 14.1494 12.9138 13.0507 12.9421 12.6549   13.8505 12.7518 12.7737]]
362                   3.72141         1.57091         0.11915         -0.24995          -0.19268          0.01864          1.14472          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[12.6075 12.5852 12.7561 12.6531 12.7632 12.4944 12.6296 12.5287 12.2202   12.487  12.3254 12.3747]]
363                   3.71892         1.57123         0.11909         -0.24911          -0.1892          0.01862          1.15207          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[12.5963 12.6002 12.7439 12.634  12.7472 12.5061 12.6184 12.5139 12.2274   12.4532 12.3398 12.3315]]
364                   3.71592         1.57014         0.1191         -0.2481          -0.19118          0.01861          1.15762          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[12.6189 12.5781 12.779  12.6563 12.7402 12.5053 12.625  12.5436 12.234   12.4644 12.3467 12.3485]]
365                   3.72332         1.57126         0.11925         -0.25058          -0.19324          0.01866          1.14947          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[12.5911 12.5636 12.7944 12.6453 12.7698 12.4927 12.6308 12.5143 12.2376   12.4697 12.3473 12.365 ]]
366                   89.22753         9.24978         0.70761         -28.96968          -0.23236          1.19978          8.94913          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[4.1633 3.6684 3.8141 4.0071 3.6509 3.5752 4.0543 3.86   3.2607 3.1609   3.5998 3.5679]]
367                   89.74661         9.30303         0.71323         -29.14403          -0.07487          1.22468          9.20598          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.648  3.0412 3.8697 3.6557 3.492  4.2042 4.1117 3.8305 3.7085 2.8902   4.0349 3.257 ]]
368                   89.79989         9.26436         0.70816         -29.16192          -0.33396          1.23262          9.68602          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[4.0749 2.7577 4.3394 4.3711 3.8025 3.5038 4.0891 2.9727 4.0662 3.9636   2.7419 3.5248]]
369                   87.42451         9.11903         0.69593         -28.36408          -0.43344          1.16287          8.85103          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.854  3.5041 4.7341 4.541  3.9962 3.838  3.3591 4.2205 3.02   3.2459   3.3873 4.2514]]
370                   8.46782         2.47667         0.20942         -1.84417          -0.27341          0.04155          2.53922          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[15.2436 15.6428 15.6722 15.4266 15.005  15.5015 14.9291 14.58   14.8697   14.9855 14.5688 14.9056]]
371                   8.58261         2.50572         0.21161         -1.88272          -0.24037          0.04208          2.4041          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[15.0348 15.4707 15.6815 15.3957 15.0985 14.9547 15.1096 15.0734 14.6518   15.5105 14.9048 15.0292]]
372                   8.29061         2.46004         0.20765         -1.78464          -0.19572          0.04076          2.21612          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[15.6957 14.6528 15.3247 15.3374 15.0681 15.3064 15.1777 15.2061 14.6343   15.1621 14.9788 14.9359]]
373                   8.87939         2.51538         0.21332         -1.9824          -0.36296          0.04342          2.25907          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[15.5424 14.9511 15.4677 15.5796 15.459  15.0604 15.586  14.9937 14.9224   14.7616 14.4834 14.9222]]
374                   3.63657         1.57069         0.12013         -0.22145          -0.19103          0.01829          1.15142          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.7007 12.6893 12.861  12.7691 12.8857 12.6039 12.7595 12.6479 12.3594   12.5896 12.4436 12.4593]]
375                   3.64966         1.57483         0.12044         -0.22585          -0.19658          0.01835          1.14947          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.7458 12.7061 12.8801 12.7691 12.8594 12.6315 12.7642 12.6418 12.3262   12.5935 12.4474 12.473 ]]
376                   3.64889         1.5772         0.12071         -0.22559          -0.19714          0.01836          1.16222          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.7134 12.7326 12.8891 12.7746 12.8849 12.6371 12.7693 12.6293 12.3428   12.5735 12.4443 12.4972]]
377                   3.64067         1.57615         0.12056         -0.22283          -0.19252          0.01831          1.15432          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[12.7337 12.699  12.8855 12.7619 12.8597 12.6201 12.7615 12.6075 12.3503   12.5766 12.4428 12.4769]]
378                   3.18692         1.44221         0.11658         -0.07042          -0.04608          0.01659          1.11825          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[11.0851 11.1278 12.1683 11.6769 14.5922 13.922  14.0416 14.1016 13.4726   14.3193 14.1047 13.9985]]
379                   8.31928         2.34988         0.19827         -1.79427          -1.65327          0.04506          2.1612          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.6437 10.0366 13.271   8.3186 17.0217 15.1587 15.8966 13.8405 14.5956   15.679  15.186  14.5071]]
380                   3.08115         1.41669         0.11204         -0.03489          -0.03284          0.01583          1.32825          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[10.9802 11.1338 11.8167 11.2867 14.1942 13.5762 13.5927 13.78   12.978   14.0416 13.6431 13.4193]]
381                   3.67148         1.71821         0.13474         -0.23317          -0.08809          0.0199          1.6188          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.778  10.9247 12.1956  9.4205 13.7101 12.6822 12.7388 13.578  13.0544   12.7974 12.7407 12.8728]]
382                   54.73828         6.2013         0.48701         -17.38545          -15.29264          0.20072          6.18662          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[22.8286  9.8006 10.6894 23.3575 21.0573  8.9766  8.5273 22.5849  8.2835   13.4194 11.4018 24.4071]]
383                   3.0531         1.37917         0.10952         -0.02547          -0.02338          0.01573          1.31975          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.9507 11.0913 11.7702 11.3582 14.2949 13.5197 13.618  13.7099 13.0791   13.8593 13.7165 13.4661]]
384                   4.32371         1.6001         0.12499         -0.45224          -0.43823          0.022          1.00453          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.4988 10.4051 11.1201 11.767  15.1554 14.3137 12.745  12.7784 12.3984   14.7874 12.8301 14.1299]]
385                   2.51386         1.32539         0.10332         0.15565          0.24259          0.01303          1.11025          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[10.7894 11.7856 11.2573 10.2404 13.3522 12.7728 13.1068 12.3903 12.8102   13.189  13.6543 13.9263]]
386                   3.02534         1.39344         0.11084         -0.01615          -0.01522          0.01565          1.30963          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[10.8759 11.0975 11.7701 11.3582 14.2366 13.4832 13.8296 13.6906 13.2531   14.0045 13.5459 13.6027]]
387                   4.53666         1.73758         0.13855         -0.52377          -0.52272          0.02317          1.83273          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.427  10.5829 12.3017 11.6774 15.1542 14.2338 14.5294 12.885  13.7782   12.9264 12.686  12.5267]]
388                   3.47659         1.47222         0.11907         -0.16772          -0.13792          0.01788          1.09733          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[11.2529 11.2173 12.2726 11.5557 14.8531 13.7082 14.1041 14.1989 13.3219   14.4536 14.1951 13.8209]]
389                   5.50756         2.15314         0.17087         -0.84988          -0.696          0.02759          2.22235          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[ 9.9798 13.3335 12.6045 10.1802 13.6121 15.2652 15.5077 15.5325 12.7701   16.0908 15.487  13.1388]]
390                   3.10551         1.40097         0.11115         -0.04308          -0.03999          0.01601          1.34333          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[10.9023 11.0577 11.7634 11.3019 14.2736 13.47   13.6667 13.6742 13.041   13.9529 13.705  13.4212]]
391                   2.912         1.35029         0.10715         0.02192          0.02452          0.015          1.26945          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[10.9925 11.1408 11.7114 11.305  14.1938 13.4188 13.575  13.7595 13.1631   13.8848 13.6385 13.5399]]
392                   3.16811         1.44286         0.11608         -0.0641          -0.04767          0.01636          1.24033          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[11.1917 11.1057 11.8921 11.5084 14.6177 13.8983 14.0827 14.2397 13.6228   14.2238 14.2132 13.4382]]
393                   6.85202         2.42892         0.19031         -1.30145          -1.26143          0.03878          2.15863          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 8.4332  9.57   13.3333 10.7865 12.5554 15.5943 15.1131 11.0995 11.9685   15.8363 13.4257 13.522 ]]
394                   3.01063         1.36952         0.10905         -0.01121          -0.0099          0.01561          1.32968          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[10.9073 11.0284 11.8251 11.3973 14.1911 13.3958 13.7752 13.7456 13.1253   13.8683 13.8203 13.55  ]]
395                   17.32625         3.82921         0.30115         -4.81953          -4.62481          0.09893          4.00212          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 8.0941 15.1143  6.6445 13.1963 13.7616  7.4188 17.697  18.6781 20.5803    9.2491 15.3877 18.695 ]]
396                   3.18053         1.41332         0.11184         -0.06827          -0.06521          0.01632          1.31945          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.9507 11.0839 11.7696 11.3582 14.2854 13.4832 13.6836 13.6904 12.9471   13.9651 13.552  13.4656]]
397                   3.85679         1.38711         0.10856         -0.29542          -0.29502          0.01905          0.8433          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[11.4909 11.5776 11.0574 11.7782 15.1302 12.405  12.648  14.1606 11.9284   14.9007 14.7132 14.0014]]
398                   2.58297         1.23558         0.09839         0.13244          0.13296          0.0133          1.0481          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.118  11.1173 10.9906 11.8691 14.3304 12.5752 13.3564 13.9942 13.4633   13.7827 13.768  14.5413]]
399                   3.0828         1.40497         0.11313         -0.03545          -0.01394          0.01585          1.15922          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[11.4003 11.1222 11.7616 11.4345 14.6453 13.7141 14.0537 14.3586 13.6084   14.3849 14.0427 13.8905]]
400                   3.46057         1.5207         0.12288         -0.16233          -0.08847          0.01864          1.5965          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[13.2566 12.7109 12.6477 11.7358 12.5656 11.443  15.4917 10.1452 14.8767   15.5497 15.8298 14.7545]]
401                   3.83963         1.7058         0.13528         -0.28965          -0.26795          0.02018          1.67597          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[10.4529 11.4139 12.1258  9.9172 14.3137 14.592  11.1306 11.9348 13.486   15.7914 12.4151 14.7561]]
402                   3.09082         1.39656         0.11079         -0.03814          -0.03522          0.01593          1.33543          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[10.9295 11.0463 11.7499 11.3092 14.2724 13.4731 13.6689 13.6711 13.0515   13.9542 13.7027 13.4317]]
403                   3.1613         1.41991         0.11243         -0.06182          -0.05992          0.01625          1.37948          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[11.0072 11.026  11.8383 11.3953 14.1973 13.5643 13.7874 13.7837 12.9809   13.8678 13.6339 13.3966]]
404                   4.69921         1.73221         0.13273         -0.57837          -0.4846          0.02527          1.65752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[12.6704  9.8451 12.0998  9.7447 12.8023 13.4134 13.4719 14.2886 11.0514   13.451  12.7669 13.4341]]
405                   33.82432         5.39794         0.43384         -10.36089          -10.2624          0.18931          5.4955          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 8.2091 10.2581 17.5463  5.8689 21.0037  7.4509 17.0591  8.6168 22.5728    8.4301  8.8863 12.9797]]
406                   3.09632         1.40572         0.11153         -0.03999          -0.03849          0.01597          1.35848          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.8724 11.1006 11.7704 11.3582 14.2854 13.5221 13.681  13.6906 13.0652   14.0544 13.7101 13.4687]]
407                   3.79825         1.38755         0.10728         -0.27575          -0.22572          0.01874          0.90245          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[11.3112 11.4484 10.9873 11.7081 14.9709 12.5283 12.7432 12.948  12.2275   13.0704 12.8032 14.0019]]
408                   20.94685         4.00928         0.30612         -6.03561          -5.9914          0.10335          3.91672          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 8.4117 14.2782 13.2978  9.2065  5.8584 15.3938 11.1628 21.7723 11.9625   17.6918  9.0626 21.6353]]
409                   3.07514         1.38922         0.11028         -0.03288          -0.03113          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6905 13.0652   13.9652 13.7165 13.4661]]
410                   3.07513         1.38922         0.11028         -0.03287          -0.03113          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4662]]
411                   3.07519         1.38925         0.11028         -0.03289          -0.03115          0.01584          1.31975          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9506 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
412                   3.07519         1.38925         0.11028         -0.03289          -0.03115          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7164 13.4661]]
413                   3.07512         1.38923         0.11028         -0.03287          -0.03113          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0653   13.9652 13.7165 13.4661]]
414                   3.07515         1.38924         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9653 13.7165 13.4661]]
415                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
416                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
417                   3.07523         1.38925         0.11028         -0.03291          -0.03116          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2855 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
418                   3.0751         1.38922         0.11028         -0.03286          -0.03112          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0653   13.9652 13.7165 13.4661]]
419                   3.07521         1.38924         0.11028         -0.0329          -0.03116          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2855 13.4832 13.6787 13.6906 13.0652   13.9652 13.7164 13.4662]]
420                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
421                   3.07521         1.38924         0.11028         -0.0329          -0.03116          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2855 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
422                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
423                   3.07519         1.38925         0.11028         -0.03289          -0.03115          0.01584          1.31975          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9506 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
424                   3.07513         1.38922         0.11028         -0.03287          -0.03113          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4662]]
425                   3.07515         1.38924         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9653 13.7165 13.4661]]
426                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
427                   3.07521         1.38924         0.11028         -0.0329          -0.03116          0.01584          1.31975          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9506 11.0857 11.7701 11.3582 14.2855 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4662]]
428                   3.07519         1.38924         0.11028         -0.03289          -0.03115          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3583 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7164 13.4661]]
429                   3.07513         1.38922         0.11028         -0.03287          -0.03113          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4662]]
430                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3196          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9508 11.0856 11.77   11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7164 13.4661]]
431                   3.07509         1.38922         0.11028         -0.03286          -0.03112          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3583 14.2854 13.4832 13.6787 13.6906 13.0653   13.9652 13.7164 13.4662]]
432                   3.07513         1.38922         0.11028         -0.03287          -0.03113          0.01584          1.31965          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.77   11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4662]]
433                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
434                   3.07517         1.38924         0.11028         -0.03289          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
435                   3.07517         1.38924         0.11028         -0.03289          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
436                   3.07517         1.38924         0.11028         -0.03289          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
437                   3.07521         1.38924         0.11028         -0.0329          -0.03116          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2855 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
438                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
439                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
440                   3.07518         1.38925         0.11028         -0.03289          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9653 13.7165 13.4661]]
441                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4662]]
442                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
443                   3.07517         1.38924         0.11028         -0.03289          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
444                   3.07517         1.38924         0.11028         -0.03289          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7164 13.4661]]
445                   3.07523         1.38926         0.11028         -0.03291          -0.03116          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3581 14.2854 13.4832 13.6787 13.6906 13.0651   13.9652 13.7165 13.4661]]
446                   3.07513         1.38922         0.11028         -0.03287          -0.03113          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4662]]
447                   3.07517         1.38924         0.11028         -0.03289          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
448                   3.07521         1.38925         0.11028         -0.0329          -0.03116          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3581 14.2855 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
449                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
450                   3.07513         1.38922         0.11028         -0.03287          -0.03113          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4662]]
451                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
452                   3.07512         1.38923         0.11028         -0.03287          -0.03113          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9507 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0653   13.9652 13.7165 13.4661]]
453                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.31965          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9508 11.0856 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
454                   3.0751         1.38922         0.11028         -0.03286          -0.03112          0.01584          1.3197          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0653   13.9652 13.7165 13.4661]]
455                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
456                   3.07515         1.38923         0.11028         -0.03288          -0.03114          0.01584          1.3197          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.9507 11.0857 11.7701 11.3582 14.2854 13.4832 13.6787 13.6906 13.0652   13.9652 13.7165 13.4661]]
R2 : 0.2124
MSE : 2.3448
MAE : 1.2126
MAPE : 0.0947
Explained Var : 0.2426
MSLE : 0.0123
MedAE : 0.651
R2 indices : (array([354], dtype=int64),)
MSE indices : (array([354], dtype=int64),)
MAE indices : (array([92], dtype=int64),)
MAPE indices : (array([92], dtype=int64),)
Explained Var indices : (array([384], dtype=int64),)
MSLE indices : (array([354], dtype=int64),)
MedAE indices : (array([92], dtype=int64),)