IterationNumber           MSE              MAE              MAPE              R2              ExpVar              MLSE              MedAE             Model
1                   4.05596         1.52812         0.12152         0.29638          0.30613          0.02171          1.14242          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[ 9.9747 11.1285  8.7129 16.5943 13.2648 13.1912 13.8194 15.9861 17.0249   17.5807 16.0058 16.8937]]
2                   2.93572         1.19998         0.09931         0.49072          0.51502          0.01595          0.86888          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[10.4993 11.6183  9.417  15.9379 13.6263 13.7859 14.0991 16.1804 16.6691   16.3131 15.6475 18.0307]]
3                   3.09537         1.19259         0.09693         0.46302          0.47012          0.01722          0.79832          MLPRegressor(hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[10.9069 11.2678  8.8877 16.0734 13.9724 13.831  13.9135 16.1607 16.0238   15.5904 15.9228 17.2102]]
4                   2.0085         1.13316         0.09163         0.65157          0.65174          0.01298          0.8394          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.3255 11.3914  9.0407 13.3944 14.0795 13.3923 13.5748 16.3611 17.332   16.1464 15.8978 17.7669]]
5                   2.61368         1.31177         0.10188         0.54659          0.55426          0.01535          1.26335          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[11.7378 11.2405  8.637  14.334  14.2206 13.0237 14.2546 16.7358 17.0221   15.8788 16.3643 16.4078]]
6                   1.85242         1.11587         0.08772         0.67865          0.68558          0.01223          0.798          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 9.0085 11.0678  9.0276 12.336  14.0426 13.291  13.5366 16.177  17.4485   15.8889 15.6485 17.4617]]
7                   2.41651         1.10032         0.08312         0.58079          0.59193          0.01597          0.78457          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.1783 10.2956  7.9759 12.9228 15.6646 13.6234 12.0737 15.6251 16.6002   13.8687 16.1043 18.3598]]
8                   2.46358         1.14803         0.09235         0.57263          0.57263          0.01389          0.86178          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[10.4122 10.5681  9.1577 15.3793 13.5276 12.7535 13.9033 16.0988 15.3391   15.6662 16.5328 17.9097]]
9                   3.85599         1.4711         0.11746         0.33107          0.46688          0.02077          1.29532          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.7932 11.7725  8.7148 15.7207 14.4887 13.9117 14.8742 17.4947 17.5052   16.189  17.0331 18.4531]]
10                   1.38109         0.9125         0.07016         0.76041          0.76753          0.0087          0.84395          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[10.9777 11.3922  9.0967 11.5461 14.7838 12.9899 13.9587 15.5931 16.4792   14.9683 15.9694 17.1478]]
11                   5.98074         1.79734         0.14634         -0.03752          -0.0338          0.03173          1.10732          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[ 8.4064 11.6853  8.8513 17.955  13.766  13.1278 14.1228 15.9534 17.0166   15.7208 15.6846 16.8015]]
12                   2.84048         1.30315         0.10152         0.50724          0.53051          0.01356          0.99562          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[11.9657 11.3194 10.6311 15.9749 13.5457 13.2467 13.3228 16.5579 17.2421   15.4061 15.266  17.2494]]
13                   4.06073         1.41227         0.11605         0.29556          0.30008          0.02175          0.82977          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.0041 11.4663  9.3902 16.763  13.7276 13.6753 13.8057 15.1557 17.2376   15.8098 16.1798 17.0562]]
14                   2.75318         1.20153         0.09089         0.52239          0.54164          0.02056          0.80572          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.0716  9.8414  7.3265 12.6876 16.0454 14.5456 13.9485 15.4147 16.1706   14.5475 15.4004 17.3361]]
15                   3.7033         1.42137         0.1143         0.35756          0.47696          0.01828          0.8752          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.6699 12.0305  9.8131 16.2209 14.6918 14.2545 14.6022 16.2828 18.159   16.2414 16.8976 17.4251]]
16                   4.80012         1.67028         0.12532         0.16729          0.16927          0.02227          1.29588          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[10.0987  9.18    9.2323 16.7837 14.7047 12.8287 13.9655 16.6338 17.0833   15.0337 15.8297 14.6779]]
17                   1792.3271         16.36768         1.00178         -309.92765          -293.42533          0.8171          4.43987          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[  6.0861  11.046    2.9067  19.1378   1.8551   8.656    9.4575  13.9918    16.2876  13.7805  17.7986 163.3692]]
18                   1.72659         1.03405         0.08214         0.70048          0.70258          0.01048          0.61895          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.5113 10.4053  9.4114 13.8428 13.289  13.542  13.6202 15.5379 17.208   15.9374 15.8944 17.8134]]
19                   3.03786         1.39175         0.11197         0.473          0.47386          0.01877          1.05992          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[ 8.9864 11.5323  8.8414 14.8966 14.6797 13.4386 13.9992 15.3584 17.1074   15.6817 16.8815 16.7727]]
20                   2.49894         1.14952         0.09223         0.56649          0.59028          0.01352          0.92248          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[11.0905 11.6848  9.6236 15.3298 14.267  14.0276 14.0704 16.0082 16.8692   15.5721 16.339  16.8949]]
21                   3.37083         1.41019         0.11531         0.41524          0.41908          0.02192          1.10782          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[ 7.7526 11.3585  9.7769 15.1652 13.941  13.4538 14.1201 16.4622 17.3179   15.8968 16.1378 17.736 ]]
22                   22.04088         2.90216         0.20924         -2.82359          -2.31916          0.50572          2.1952          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[ 8.8346 10.1212  5.9654 11.5007  0.4698 11.7135 13.768  12.1924 18.4833   16.6534 16.9945 20.1739]]
23                   1.77037         1.09505         0.08516         0.69288          0.72491          0.0117          0.96017          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[ 8.9318 11.1395  9.1853 11.0703 13.4557 13.3412 13.6699 16.0265 16.8258   16.4971 15.2373 16.7966]]
24                   1.99971         1.15657         0.09001         0.6531          0.65936          0.01119          1.026          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[11.3194 11.5281  9.4728 14.1479 13.9616 13.4603 13.8741 16.4156 17.1614   15.2925 15.8368 17.1436]]
25                   4.83163         1.62234         0.12452         0.16182          0.17338          0.02408          1.33868          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[11.593   8.9692  8.522  17.1594 15.7622 13.1782 12.5272 16.6263 17.5941   16.9812 14.8367 16.6815]]
26                   2.7892         1.40884         0.11101         0.51614          0.52224          0.01499          1.13755          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.1118 11.3819  9.4809 15.0473 13.3331 13.5825 14.8214 15.9086 17.4892   15.6024 15.6254 17.1995]]
27                   3.23744         1.35932         0.10818         0.43838          0.51985          0.01703          0.78455          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.622  11.7537  9.0736 14.9846 14.3636 14.4911 14.0211 17.3086 18.3606   16.3148 16.5581 17.7053]]
28                   3.59533         1.31833         0.10489         0.37629          0.41175          0.0277          0.76938          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.312   9.5535  7.0236 14.2877 15.8935 12.2192 12.2339 15.1168 15.7937   16.2052 15.6034 18.666 ]]
29                   1.7992         1.00803         0.08131         0.68788          0.71202          0.01045          0.5153          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.2062 11.4996  9.4751 13.8699 14.6873 13.4937 14.7415 15.5042 17.3061   16.6443 15.6157 17.7659]]
30                   2.96785         1.41505         0.11578         0.48515          0.48607          0.01976          1.00197          MLPRegressor(hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.1457 12.2522  9.5687 14.2834 13.7948 13.3159 13.6926 16.1916 16.8802   15.421  16.8887 17.7753]]
31                   2.45265         1.29624         0.10389         0.57452          0.57555          0.0154          1.07722          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.5459 11.8132  8.8942 14.0071 13.8369 13.6651 13.8247 15.8053 17.0677   15.1106 15.8754 18.8117]]
32                   2.92844         1.04359         0.08682         0.49198          0.50547          0.01573          0.468          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[11.3218 11.4095  9.3105 16.1416 13.7713 13.3355 12.9373 15.3412 16.9607   16.3202 16.1317 17.6985]]
33                   3.23638         1.39121         0.10932         0.43856          0.44522          0.0175          1.0099          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[11.1037 11.8592  9.0882 15.5678 13.8779 15.2391 13.6125 15.716  16.5479   15.3781 15.6319 16.0615]]
34                   5.24847         1.61269         0.13224         0.08951          0.11103          0.02646          0.9573          MLPRegressor(hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.6686 11.8481  8.9415 17.7853 13.662  13.3014 13.6886 16.7609 16.7766   15.7567 15.6628 17.7075]]
35                   4.34515         1.46289         0.12022         0.24622          0.24775          0.0241          0.99003          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.1495 11.339   8.73   16.8559 13.3459 13.8565 13.7561 15.037  16.9934   15.5707 15.5808 18.2474]]
36                   2.52286         1.28319         0.1027         0.56234          0.58396          0.01738          1.23848          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.1743 11.8212  8.3969 12.716  12.7083 13.5128 13.4829 14.8268 17.0698   15.3357 15.7112 18.341 ]]
37                   5.61431         1.51422         0.12421         0.02605          0.04331          0.02561          1.23775          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.9549 11.4858  9.5454 18.4769 13.2896 13.8044 13.6354 14.8743 17.2098   15.0522 15.7987 17.9911]]
38                   2.08092         1.20618         0.09613         0.63901          0.69842          0.01394          1.1237          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.415  11.6953  9.5153  8.6651 13.0499 12.7597 12.9814 14.1829 16.9293   15.58   16.6179 17.919 ]]
39                   2.45022         1.33608         0.10625         0.57494          0.58399          0.01477          1.32377          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.7934 12.0176  9.7249 13.0678 14.085  16.1281 13.8298 15.3233 16.3264   15.8104 17.9039 17.0636]]
40                   4.41912         1.35935         0.11004         0.23338          0.26479          0.02129          0.76482          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.7169 10.9589  9.1696 17.5223 13.5907 14.647  13.8226 15.1932 17.2919   15.3575 16.4364 17.7323]]
41                   3.34565         1.27596         0.10409         0.41961          0.42617          0.01854          0.78827          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.9267 10.8962  9.4133 16.0239 14.1788 13.6034 13.7313 15.6951 17.5144   16.4145 16.2221 17.0481]]
42                   17.25134         2.16451         0.18171         -1.99271          -1.85445          0.06076          0.76592          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 7.9893 11.2359  9.2097 24.8877 13.9754 13.8604 13.6549 15.9162 16.8979   15.7625 15.8155 18.841 ]]
43                   2.86399         1.39811         0.11088         0.50316          0.51144          0.01744          1.47948          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.2347 11.5697  8.917  14.1972 12.527  13.8108 13.9943 15.1562 17.1466   15.499  16.0748 16.5843]]
44                   6.7847         1.62059         0.1309         -0.17699          -0.07442          0.0282          0.93338          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[11.3743 11.6385 10.2618 19.5027 12.5163 13.1846 14.2041 16.0223 16.9461   15.684  16.5707 18.6551]]
45                   3.83763         1.39956         0.11308         0.33426          0.34413          0.01923          1.1204          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.2221 11.4443  9.5652 16.8874 13.2571 12.7585 13.1515 15.8234 16.8527   15.6398 16.929  17.6642]]
46                   3.67385         1.42269         0.11415         0.36267          0.3627          0.02103          1.05853          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.2478 11.8703  8.5491 15.8921 13.665  14.0282 13.3226 15.068  17.1217   15.1135 15.3408 16.9518]]
47                   1.79568         1.06489         0.08639         0.68849          0.69186          0.01139          0.63913          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.0307 11.3479  9.8293 13.797  15.0732 13.6905 13.2638 15.5443 17.0645   15.9837 15.7329 18.6484]]
48                   4.47494         1.61439         0.13245         0.2237          0.22385          0.02978          1.20843          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.0963 11.6148  8.0682 15.7363 13.0631 13.3316 13.7497 16.3654 16.9148   16.3982 15.7788 18.5745]]
49                   3.14372         1.17252         0.09673         0.45464          0.51128          0.01679          0.66482          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[11.3474 11.6667  9.3498 16.2544 14.3043 15.1095 13.8519 15.8444 16.224   15.658  16.672  17.908 ]]
50                   5.06795         1.59704         0.1312         0.12083          0.15021          0.02635          1.0775          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.505  11.6555  9.7412 17.5807 15.0032 14.1791 14.5686 15.8395 16.6683   15.3633 16.0704 17.0972]]
51                   6.59792         1.85274         0.15169         -0.14459          -0.14417          0.03519          1.16687          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.2421 11.5807  8.5874 18.3045 13.6829 13.0808 14.306  14.0856 17.0499   15.7397 16.0606 17.2025]]
52                   3.96747         1.67394         0.13172         0.31173          0.31349          0.02078          1.4992          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.1026 11.4416  9.8166 16.1971 12.4565 13.0731 14.1363 15.9316 17.2854   15.137  16.915  17.0472]]
53                   8.3975         2.13521         0.17344         -0.45677          -0.42765          0.0425          1.1201          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 7.9639 11.9504  8.574  19.2816 13.5503 12.8902 14.0616 17.3211 16.7028   15.3126 17.2121 17.4294]]
54                   6.37097         1.72671         0.14393         -0.10522          -0.10518          0.05244          0.90457          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 5.4383 11.7674  9.7286 16.6909 13.9532 13.388  13.6806 15.7154 17.0521   15.2262 16.0576 18.4527]]
55                   4.75681         1.62976         0.12371         0.1748          0.20931          0.01974          1.07645          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.1847 12.1809  9.8539 14.5419 13.3373 13.1731 12.7904 15.3738 16.6902   15.7381 16.4558 23.3654]]
56                   1.54274         1.05365         0.08195         0.73237          0.73546          0.00862          1.12937          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[11.7678 11.8229  9.9297 13.1464 13.3878 13.6861 12.9687 16.582  16.849   15.6127 16.3842 16.7968]]
57                   4.90317         1.60203         0.13327         0.14941          0.14965          0.03752          0.8515          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 6.4871 11.7716  8.942  15.7244 13.4954 13.5935 13.8133 16.0679 16.0547   15.7012 16.3432 18.8951]]
58                   3.8021         1.43055         0.11449         0.34042          0.34243          0.01925          1.00953          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[12.1625 11.6625  9.6786 16.4624 13.1062 13.8431 13.9565 12.8346 15.873   15.3201 16.429  17.2967]]
59                   3.20464         1.36431         0.11121         0.44407          0.44437          0.02007          1.09945          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.488  11.7441  8.4738 15.0913 14.8517 13.5896 13.5005 13.7531 16.978   15.6291 16.2711 18.4619]]
60                   3.93556         1.44224         0.11462         0.31727          0.32352          0.02229          0.92425          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.3558 10.9487  8.2158 16.1579 13.6966 15.0216 13.6444 15.2045 17.8   15.5657 15.7344 17.2662]]
61                   3.16948         1.26786         0.10592         0.45017          0.45385          0.01906          0.67743          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.395  11.7741  8.8963 15.6644 13.6749 14.5444 12.7913 15.3285 16.6655   15.8669 16.0629 18.4181]]
62                   6.42965         1.76078         0.14023         -0.1154          -0.0445          0.02811          1.14555          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.204  11.2033 10.1054 18.7809 13.318  13.7953 13.8453 17.895  16.8091   15.4451 15.6467 18.9569]]
63                   3.80011         1.42255         0.11349         0.34077          0.36333          0.01926          0.94662          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[11.7365 11.8835  9.4165 16.6118 13.4799 14.6185 13.0164 14.69   17.1331   15.1489 16.8558 17.0702]]
64                   3.48591         1.54996         0.12453         0.39527          0.39536          0.02209          1.19612          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.3931 11.6909  8.8775 14.9393 13.2631 14.9279 12.6903 16.472  17.0295   15.7981 16.0056 16.9791]]
65                   2.98568         1.24147         0.10265         0.48205          0.48503          0.01843          0.70497          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.4663 11.5558  8.6997 15.3414 14.821  13.4463 13.3216 15.4767 16.8577   15.5671 15.9779 18.3741]]
66                   5.74665         1.80501         0.14718         0.00309          0.02879          0.03053          1.42072          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.6781 12.1741  8.9077 17.5494 13.4168 14.8658 13.6975 14.8151 17.199   15.0657 17.6238 17.9594]]
67                   5.25081         1.43962         0.11921         0.0891          0.09987          0.02491          0.98063          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.2835 11.6581  9.2266 18.239  13.8427 13.5831 13.451  14.2699 16.6145   15.3462 15.8934 17.9151]]
68                   3.40272         1.40914         0.11371         0.40971          0.4138          0.01949          1.29595          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8184 11.6586  8.9395 15.4227 13.0257 13.7411 13.4645 12.8964 16.8176   15.7222 16.005  17.9788]]
69                   4.33318         1.50675         0.12262         0.24829          0.25364          0.02186          1.22363          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.6112 11.687   9.5456 17.1012 13.3002 14.0721 13.9239 14.3067 17.0897   15.1492 15.811  17.8423]]
70                   3.98925         1.47368         0.12174         0.30796          0.30796          0.02369          1.08138          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.9563 12.1289  8.8903 15.8022 12.2367 13.728  13.3692 15.1984 17.1393   16.7185 15.5432 17.6477]]
71                   17.37147         2.20169         0.18225         -2.01355          -1.83145          0.05565          1.12942          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.5734 11.6946  9.8853 25.1636 13.6728 13.0558 13.5109 15.7168 17.3082   15.2479 17.2234 17.5754]]
72                   5.25777         1.40007         0.11374         0.0879          0.12699          0.02396          0.89727          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.7841 11.0411  9.2659 18.3769 13.6286 14.1499 13.7143 15.1659 16.7468   15.1637 17.1898 17.8031]]
73                   3.80793         1.46889         0.11678         0.33941          0.34058          0.019          1.231          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.3543 11.5838  9.6006 16.618  13.0904 13.5195 14.1709 15.2373 16.7639   15.1519 15.6496 16.5797]]
74                   2.07609         1.17444         0.09375         0.63985          0.64506          0.01272          1.04892          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.4601 12.0602  9.0921 13.5323 14.7736 13.998  14.1344 16.1185 16.9132   15.3371 16.0644 16.9299]]
75                   3.15412         1.2151         0.10281         0.45283          0.4553          0.01959          0.6135          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.7421 11.6431  9.1243 15.6084 13.5454 13.9549 13.5959 15.2416 16.3811   16.1165 16.3905 18.4207]]
76                   4.79635         1.48215         0.12405         0.16794          0.1682          0.02663          0.90893          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.2076 11.5874  9.5403 17.3041 13.3805 13.7228 13.6783 14.0816 16.1753   15.6983 16.2644 18.1541]]
77                   1.98707         1.1019         0.08934         0.65529          0.65572          0.01194          0.82837          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.3992 11.4496  9.3013 14.4785 13.6422 13.3968 13.6176 14.3644 16.6268   16.517  16.7133 17.4228]]
78                   2.88066         1.22599         0.09951         0.50027          0.52143          0.01739          0.88455          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[10.8711 11.4391  8.5475 15.3713 14.8217 14.8364 14.0508 15.8339 16.5414   15.8926 16.1809 17.1373]]
79                   2.41844         1.32602         0.10209         0.58046          0.58292          0.01226          1.16945          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.2398 11.3639 10.1277 14.7033 14.613  13.8017 14.7628 16.2301 16.492   15.1913 15.1386 16.1004]]
80                   1.3605         0.95976         0.07516         0.76398          0.77553          0.00724          0.82927          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[11.007  11.4294 10.7998 14.0665 14.8161 14.5172 13.8789 14.893  16.8018   15.3707 15.7352 17.1137]]
81                   1.48273         0.99758         0.08087         0.74278          0.74528          0.0092          1.00208          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.3334 11.4383 10.1601 13.2473 14.4952 14.1213 14.4484 15.6579 16.7413   15.863  16.1351 17.1338]]
82                   1.80845         1.19336         0.09065         0.68627          0.68801          0.01006          1.17333          MLPRegressor(beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[10.4122 11.1952  9.3836 12.7252 12.7825 14.2017 14.2481 16.4634 16.7466   15.5322 16.1042 16.3385]]
83                   1.85711         1.1405         0.08844         0.67783          0.68042          0.01063          0.87005          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[11.2536 11.2523  9.3667 13.7146 13.9474 14.5768 14.9309 16.0371 16.0832   15.1646 15.2918 17.1781]]
84                   1.57014         1.04578         0.07939         0.72762          0.73071          0.00856          0.93182          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.3614 11.0841  9.5102 12.308  14.3174 13.8045 14.8463 16.1723 16.1333   15.7149 15.5363 15.9433]]
85                   3.52996         1.43748         0.11591         0.38763          0.44304          0.02076          0.96525          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[ 7.8895 11.5652 16.1723 11.9168 13.7229 15.0878 14.9841 16.0327 17.1359   15.7748 15.762  18.0708]]
86                   1.61762         1.06049         0.08583         0.71938          0.7197          0.01005          0.93533          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.587  11.5859  9.7642 13.3248 13.9352 13.8805 14.4793 15.6132 16.6863   15.7492 16.0286 17.2123]]
87                   1.52377         1.03427         0.07697         0.73566          0.73994          0.00821          1.0292          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[11.3784 11.2946  9.5582 10.4472 14.6327 13.9773 14.2556 15.9935 17.0941   15.5507 14.9578 16.3077]]
88                   24.19986         3.95454         0.27982         -3.19812          -0.85279          0.20864          4.1184          MLPRegressor(beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.4591 10.6358  8.3447  5.5719  7.1111  4.1391 13.8601 14.9273 13.4493   11.7379  9.6258 13.3485]]
89                   1.0847         0.84528         0.06618         0.81183          0.81461          0.00617          0.7035          MLPRegressor(hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[10.5186 12.0064 10.5035 11.7032 14.2904 13.6321 14.1144 14.5716 16.3174   15.7604 15.9318 16.463 ]]
90                   1.79767         1.22751         0.09245         0.68815          0.68855          0.00926          1.14202          MLPRegressor(beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.4767 11.3471 10.8853 13.2274 15.3887 14.314  13.8043 16.3566 16.0815   15.3059 14.6014 15.9668]]
91                   7.06003         2.12626         0.16808         -0.22475          -0.19937          0.06073          1.83963          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[ 5.1091 11.7921  8.9093 14.5922 15.508  15.5405 15.5609 15.289  15.3082   15.0755 15.2153 14.8435]]
92                   6.92999         2.24291         0.17332         -0.20219          -0.19322          0.03324          2.34885          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[14.4342 14.5483 14.3791 14.3979 14.118  14.1923 14.2338 14.0465 14.0073   13.9535 13.9614 13.7906]]
93                   5.58724         1.95118         0.15204         0.03074          0.064          0.04266          1.79077          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[ 6.0345 11.7231  9.0669 13.3141 15.3459 15.5941 15.6826 15.2356 14.9864   15.1116 15.1171 14.8669]]
94                   4.79277         1.67518         0.1249         0.16856          0.17699          0.0239          1.2916          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[14.1785 11.6812  8.7309 11.982  13.8945 13.9377 15.6855 15.383  16.1856   13.7084 15.7546 13.5675]]
95                   5.99922         1.99611         0.15694         -0.04073          -0.02139          0.0479          1.71403          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[ 5.6861 11.6699  9.2851 14.2602 15.4833 15.4115 15.58   15.3883 15.2374   15.0507 15.2756 14.9983]]
96                   6.93552         2.23785         0.17308         -0.20315          -0.19352          0.03328          2.3481          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[14.4028 14.5768 14.3717 14.4288 14.1377 14.1636 14.2608 14.0744 14.0321   13.962  13.9555 13.7953]]
97                   6.86461         2.06178         0.16295         -0.19085          -0.16867          0.05989          1.82753          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[ 5.0168 11.7646  9.6939 14.811  15.1506 15.5438 15.5018 15.2731 15.2443   15.0726 15.1125 14.8568]]
98                   8.30159         2.25536         0.17992         -0.44014          -0.4362          0.04406          1.42085          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[ 7.9368 14.3233  9.1608 17.0994 15.395  13.9376 14.0146 14.6495 17.0006   15.0089 17.046  13.5677]]
99                   7.83542         2.05286         0.15722         -0.35926          -0.06116          0.07928          1.63713          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 4.189  11.7218  9.3126 12.8627 13.9647 13.9673 14.0567 14.6197 13.8351   15.6817 13.767  13.6244]]
100                   11.30376         2.65404         0.22223         -0.96094          -0.2069          0.05289          2.2574          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[16.3409 16.4057 16.2605 16.2699 15.9682 16.1399 16.0993 15.7909 15.8081   15.7659 15.8073 15.6951]]
101                   5.89211         1.98526         0.15624         -0.02215          -0.01331          0.04727          1.64808          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 5.7039 11.2831  9.1736 14.4268 14.6268 15.0489 16.0356 16.9564 14.6671   15.6388 15.297  15.7674]]
102                   3.75682         1.81298         0.13327         0.34828          0.35381          0.01883          1.67275          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 8.9528 11.1331  9.2868 12.7782 15.016  15.0206 15.5264 17.0839 17.3117   14.8162 17.7127 14.8377]]
103                   13.10189         2.64555         0.20744         -1.27288          -1.00647          0.20691          1.99698          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 1.836  14.3428  9.2567 12.4011 14.0765 13.964  14.2924 13.8746 17.2176   13.7617 13.7903 13.6488]]
104                   11.53776         2.67819         0.22423         -1.00154          -0.24394          0.05381          2.2495          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[16.3114 16.4623 16.2098 16.5781 15.941  16.0354 16.0436 15.8364 15.8398   15.7328 15.8136 15.6064]]
105                   6.24954         2.00934         0.1583         -0.08415          -0.08253          0.04676          1.62883          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 5.9516 11.2802  8.8458 14.746  15.2461 15.0393 16.0629 16.9208 15.6182   15.7087 15.7502 15.002 ]]
106                   3.96128         1.50584         0.11506         0.31281          0.35585          0.03315          1.28495          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 6.0316 10.9061 10.4534 12.7438 14.0508 14.3277 13.6796 17.1702 14.7191   15.0797 16.8057 15.3884]]
107                   6.08192         2.02654         0.1598         -0.05507          -0.04226          0.04523          1.79083          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[ 6.0604 11.6859  8.9304 14.6982 15.3391 15.5491 15.6796 15.3965 15.291   15.1494 15.2911 15.001 ]]
108                   6.90826         2.23798         0.17306         -0.19843          -0.18859          0.03315          2.35165          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[14.415  14.5472 14.3788 14.4284 14.1459 14.1929 14.2577 14.0699 14.0276   13.947  13.9555 13.825 ]]
109                   5.45302         1.94794         0.15255         0.05403          0.06193          0.0367          1.67738          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[ 6.6492 11.6875  9.4405 14.7084 15.472  15.3206 15.7212 15.3172 15.295   15.2097 15.1113 14.8392]]
110                   5.06207         1.82727         0.145         0.12185          0.13804          0.03248          1.05572          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[ 7.4333 14.323   9.131  11.902  15.5168 13.0104 14.0125 16.2281 16.6413   15.2173 15.2568 14.9943]]
111                   5.6969         1.95788         0.15439         0.01172          0.02364          0.04212          1.86593          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 6.1613 11.7986  9.2095 14.3421 15.3352 15.5866 15.658  15.2739 15.3274   15.2096 15.2788 15.0066]]
112                   6.89312         2.23441         0.17269         -0.1958          -0.18676          0.03307          2.3171          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[14.4002 14.5468 14.3454 14.4158 14.1296 14.1901 14.2407 14.0547 14.0255   13.9355 13.9912 13.7962]]
113                   6.1553         2.01916         0.1589         -0.0678          -0.05549          0.04426          1.74418          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 6.132  11.6966  9.2083 14.9422 15.1883 15.4451 15.7044 15.36   15.3397   15.1628 15.2644 14.6928]]
114                   5.49528         1.89896         0.15637         0.04669          0.09982          0.03051          1.54318          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 8.3779 14.3232 14.1227 15.4548 15.5083 13.7714 15.6957 15.3893 13.7856   15.2247 15.2608 17.0594]]
115                   5.72397         2.04102         0.16033         0.00702          0.01292          0.02986          2.25157          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[14.19   14.3687  9.208  14.1808 15.5046 13.9831 14.0549 16.1868 13.8222   13.7635 15.2657 15.0172]]
116                   11.58413         2.69547         0.2254         -1.00958          -0.20429          0.05394          2.3315          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[16.3491 16.3947 16.3318 16.4384 16.0497 16.1944 16.1098 15.9172 15.965   15.7547 16.0817 15.6014]]
117                   11.9434         2.50939         0.19796         -1.07191          -0.94845          0.25624          1.83818          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 1.2755 11.7549  8.5615 12.6468 15.3356 15.5748 15.9494 16.5532 14.5855   14.1095 14.9819 15.8814]]
118                   2.64776         1.41276         0.10368         0.54067          0.54567          0.01406          1.22017          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 8.8836 10.5204  9.4207 12.5295 14.9735 15.0434 14.0579 16.6152 15.8747   14.9637 17.4775 14.9377]]
119                   8.74463         2.28027         0.18146         -0.51699          -0.38216          0.06688          1.82148          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 5.3301 14.3466  8.745  14.1836 13.5809 13.9803 14.038  14.5719 15.345   13.7417 15.2918 13.5989]]
120                   11.47908         2.68425         0.225         -0.99136          -0.16867          0.05363          2.1078          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[16.2532 16.5925 16.2527 16.2854 16.2176 16.0444 16.1896 16.1381 15.8482   16.0349 15.7103 15.8988]]
121                   5.50962         2.01444         0.15482         0.04421          0.06387          0.03816          1.78285          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 6.4377 11.9012  9.194  12.5809 13.9336 15.4535 16.2256 17.3022 15.0707   15.3034 14.8934 14.9973]]
122                   3.68441         1.63282         0.12493         0.36084          0.39548          0.02327          1.47198          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 7.6333 11.988   9.5074 12.8776 14.9729 13.6576 13.9434 16.5462 16.2809   15.0303 14.6689 14.8643]]
123                   6.36959         2.05102         0.16118         -0.10498          -0.08671          0.05045          1.71628          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[ 5.5825 11.6345  9.4026 14.6721 15.3383 15.4514 15.7191 15.3637 15.1939   15.0791 15.1103 14.8918]]
124                   6.89692         2.23369         0.17265         -0.19646          -0.18761          0.03309          2.3347          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[14.4225 14.5453 14.3451 14.4052 14.1402 14.1621 14.2405 14.0466 14.0289   13.9382 13.9557 13.8135]]
125                   8.12325         2.17964         0.17292         -0.4092          -0.36941          0.08777          1.74133          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[ 3.9251 11.7081  9.2682 14.6198 15.493  15.4279 15.4346 15.3411 15.2918   15.0699 15.1    14.9071]]
126                   7.48939         2.45293         0.18683         -0.29924          -0.2225          0.03994          2.4829          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[ 8.0291 14.3229  9.3999 14.0444 14.5373 15.5689 14.8335 13.8203 13.7853   13.7085 13.7343 13.5678]]
127                   5.10459         1.82124         0.14231         0.11447          0.14323          0.03938          1.42272          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[ 6.1294 11.7773  9.2172 12.742  15.3323 15.4301 15.6387 15.3842 15.3316   15.218  15.275  14.9718]]
128                   6.89401         2.23412         0.17281         -0.19595          -0.18628          0.0331          2.34765          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[14.4027 14.5765 14.3773 14.3933 14.1186 14.1812 14.2536 14.0728 14.0387   13.9648 13.962  13.8249]]
129                   5.34671         1.94284         0.15204         0.07247          0.0822          0.03581          1.74153          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[ 6.7652 11.5723  9.2193 14.7604 15.3766 15.5641 15.4858 15.2965 15.1917   15.2299 15.071  14.9579]]
130                   10.16524         2.59122         0.20386         -0.76344          -0.68007          0.08324          2.23268          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 4.6165 14.3548  9.1251 15.0034 15.5156 14.0181 13.8547 13.8518 13.8606   13.7707 17.4113 13.6319]]
131                   11.42984         2.68545         0.2246         -0.98282          -0.17706          0.05338          2.26965          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[16.336  16.4008 16.275  16.4309 15.8692 16.2032 16.0407 16.0551 16.0828   15.7546 16.0131 15.7339]]
132                   8.37043         2.20006         0.1766         -0.45208          -0.45205          0.08929          2.14998          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 3.9057 11.8671  9.3354 15.0093 14.8659 14.5402 16.0973 17.664  16.5281   15.9092 15.5838 15.8838]]
133                   6.91212         2.29476         0.17404         -0.1991          -0.18851          0.03464          2.17958          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[14.1998 14.3605  8.8331 11.8825 13.9287 15.587  15.7097 13.9275 13.8472   13.7521 14.6694 13.671 ]]
134                   11.282         2.67888         0.22362         -0.95717          -0.17286          0.05276          2.26305          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[16.2598 16.4308 15.9953 16.319  15.9246 16.0975 16.3475 16.0467 16.0598   15.6895 16.0369 15.6414]]
135                   5.03081         1.74634         0.13579         0.12727          0.14992          0.0361          1.42307          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 6.5695 11.6167  8.7312 11.4484 15.4139 14.5021 16.8739 16.2751 15.5549   14.6623 15.2485 16.101 ]]
136                   6.00374         1.83691         0.14244         -0.04151          0.03212          0.04799          1.44338          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 6.9402 11.7359  6.6037 12.2557 14.5066 13.656  14.2927 17.3586 15.7444   14.7526 16.9019 14.7671]]
137                   4.84267         1.7116         0.13725         0.15991          0.17257          0.0278          1.56175          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.8799 11.8107  8.3614 16.4815 13.8244 14.9545 13.3842 16.8316 15.9077   15.9721 17.7304 16.4369]]
138                   5.50792         1.50998         0.1222         0.0445          0.06954          0.0688          1.2864          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 4.192  11.5968 10.3201 13.0035 14.8889 14.0005 13.1569 16.6027 15.8826   15.0387 17.2819 16.8099]]
139                   7.19019         2.06776         0.16401         -0.24733          -0.24604          0.05728          1.49547          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 5.2305 11.8656  9.2933 14.575  14.0392 12.1372 14.3048 16.3225 16.4249   15.5733 20.6927 17.9122]]
140                   7.41173         1.65577         0.13478         -0.28576          -0.0986          0.12288          0.90867          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 2.8055 11.836   9.5716 11.6956 13.7117 14.1604 13.6676 13.9686 16.1228   15.5705 14.6531 17.1055]]
141                   3.83878         1.55354         0.11768         0.33406          0.33521          0.01852          1.4842          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.2082 11.7694  9.3699 14.0063 13.862  14.2818 13.3365 15.2055 16.327   15.571  20.058  15.3132]]
142                   11.89612         2.27609         0.18622         -1.0637          -0.90789          0.2164          0.88597          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 1.7146 11.8547  8.1317 14.5731 13.9588 15.0007 13.5916 10.8868 16.1596   15.7521 16.7606 17.5765]]
143                   8.16393         2.17069         0.17225         -0.41625          -0.39829          0.06611          1.46          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 5.2472 11.8586  8.6547 15.8057 14.1112 14.4341 13.5871 10.7631 16.2681   15.6125 17.1469 19.9831]]
144                   13.47513         2.42849         0.19454         -1.33763          -1.28189          0.39058          1.94418          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 0.4817 11.6511  9.5734 15.2712 15.2735 14.5659 12.91   13.2994 16.259   15.8647 19.416  15.9656]]
145                   4.77442         1.73635         0.13247         0.17175          0.21925          0.02109          1.45775          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.42   11.8262  9.7696 15.309  13.3845 14.6481 13.647  16.2556 16.2321   16.31   20.8498 15.9608]]
146                   12.40931         2.59433         0.2037         -1.15273          -0.73834          0.23051          2.16477          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 1.5769 12.0205  7.7083 13.5685 12.9995 14.8102 13.3971 13.3609 16.2763   13.3864 13.7997 15.8823]]
147                   8.78594         2.31299         0.18341         -0.52416          -0.50787          0.07071          1.86158          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 4.9239 11.7752  8.9273 17.058  14.0471 14.1684 14.0757 12.6632 17.0909   15.4533 17.8413 15.6322]]
148                   4.65243         1.57409         0.13075         0.19291          0.28965          0.04186          0.97555          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 6.451  11.6846  8.9927  7.549  13.9222 15.455  12.5426 15.3305 16.8849   15.7838 16.3157 17.4603]]
149                   11.30999         1.7694         0.14832         -0.96202          -0.69583          0.39437          0.7586          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 0.4341 11.5567  9.0905 10.2662 14.4914 14.3228 13.4758 13.3978 15.6742   16.0867 16.6797 16.9925]]
150                   7.24213         2.15395         0.16382         -0.25634          -0.24759          0.04792          1.65797          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 5.8499 10.9448  9.4033 14.8213 12.7134 14.9655 13.0894 18.1384 16.662   16.2038 20.8225 16.414 ]]
151                   5.37446         1.78987         0.14008         0.06766          0.10066          0.04303          1.97148          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 5.831  11.6529  9.4451 13.8261 14.4836 14.2477 14.164  13.2466 15.2776   16.2145 18.5177 15.1921]]
152                   5.54195         1.83112         0.13942         0.0386          0.08196          0.03505          1.31255          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 6.5516 11.8756  9.74   10.7902 13.7003 15.1493 11.9633 12.5115 15.5053   16.1473 20.8056 16.5942]]
153                   2.28065         1.29912         0.10044         0.60436          0.60447          0.01395          1.02677          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.3394 11.6518 10.0582 12.2897 13.9557 14.8428 13.5836 16.7424 15.1536   15.7183 18.4238 16.8795]]
154                   3.56569         1.52573         0.11906         0.38144          0.42415          0.02688          1.36413          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 6.8539 11.8158  9.5876 10.1427 13.7275 14.459  12.7107 16.7343 16.0731   15.7247 17.8015 15.7479]]
155                   8.4764         1.99425         0.16191         -0.47046          -0.40928          0.12256          1.24603          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 2.9462 11.7871  9.0675 14.5724 14.3606 15.0516 12.9766 14.0304 16.9058   15.3443 16.9287 16.2357]]
156                   6.75946         1.81275         0.14296         -0.17261          -0.14538          0.06481          1.14232          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 4.6462 11.6949  9.0012 12.5898 13.9184 14.3216 13.6629 13.4436 15.7912   16.1516 20.4088 16.9485]]
157                   8.08998         1.95409         0.15475         -0.40343          -0.26016          0.11128          1.14913          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 3.1484 12.0096  9.5149 12.5699 13.4667 14.4282 14.2317 15.9695 16.0831   16.1539 14.0786 14.7738]]
158                   7.05771         1.65875         0.13662         -0.22435          -0.16029          0.10093          1.25535          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 3.3154 11.509   9.925  14.2213 14.152  13.9524 13.3566 13.8947 15.2875   15.959  17.6139 16.8546]]
159                   13.16382         2.26467         0.18729         -1.28362          -1.21541          0.30516          1.07777          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 0.9403 11.8267  9.1838 16.8911 14.0211 14.4492 13.4546 15.5633 15.1546   15.3552 17.2274 15.7413]]
160                   6.5445         1.86786         0.14964         -0.13532          -0.12149          0.0616          1.91835          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 4.7736 11.7066  9.5712 13.2101 14.2291 14.27   15.6348 18.5914 16.2985   16.1168 18.3998 17.9195]]
161                   3.50828         1.48347         0.11676         0.39139          0.4009          0.02293          1.16365          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 7.5325 11.5209  9.3939 13.8246 14.3553 14.3745 13.2707 16.4191 16.6271   16.8977 19.0539 16.8718]]
162                   6.0778         1.6219         0.12816         -0.05436          -0.04787          0.05849          0.72682          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 4.8225 11.8276  9.2829 11.0398 14.4492 14.0734 13.2286 17.4924 15.9353   15.5851 19.8212 17.4546]]
163                   10.65939         2.16786         0.1734         -0.84916          -0.74833          0.23638          1.75145          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 1.3856 11.7289  9.5453 13.1089 13.333  14.2173 12.2764 17.877  17.394   14.6776 15.8847 16.7559]]
164                   7.37282         1.92774         0.14338         -0.27902          -0.15515          0.05119          1.221          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.365  11.729   9.9284 12.2961 13.7936 14.9132 11.6842  7.3463 16.4899   15.4738 17.9117 17.2624]]
165                   6.61728         2.07437         0.15642         -0.14795          -0.1459          0.0495          1.63635          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 5.6026 11.7865  9.284  12.5662 13.8834 14.7635 13.4041 12.014  16.6335   15.4617 19.746  20.885 ]]
166                   11.29335         1.93656         0.16267         -0.95914          -0.91712          0.32076          0.98942          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 0.7946 11.7188  9.3052 14.2014 14.0309 14.1679 12.1238 15.536  16.5993   16.4033 18.2005 18.346 ]]
167                   11.02575         2.40044         0.19053         -0.91271          -0.78815          0.12883          1.5551          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 3.1922 11.7475  8.8186 14.8777 13.9908 15.5787 13.7896  9.4418 15.2178   15.7056 17.6715 17.1329]]
168                   4.5389         1.73211         0.13532         0.21261          0.21834          0.03406          1.33103          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 7.1007 11.5555  7.7805 12.652  13.9328 14.5585 14.5134 17.6026 16.2907   15.9492 17.3389 15.8764]]
169                   4.9577         1.76825         0.13484         0.13995          0.17208          0.03461          1.55662          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 6.5839 11.8177  9.2585 11.6785 14.0374 14.6951 14.2552 12.1098 16.2913   16.1468 19.2596 16.0353]]
170                   2.53822         1.37696         0.10741         0.55968          0.56233          0.01496          1.4016          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.2914 11.5766  9.3138 13.7079 14.3586 15.4207 12.95   13.0919 16.5189   15.793  17.1389 16.6875]]
171                   7.14699         1.7873         0.15003         -0.23984          -0.21234          0.09142          1.09298          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 3.7232 13.101   8.961   9.9187 15.108  15.4044 12.3951 15.6996 15.9824   16.0725 17.6598 18.5296]]
172                   5.64558         1.73297         0.14113         0.02062          0.03389          0.05206          1.25118          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 5.1995 11.5802  9.8239 14.9803 14.6211 14.779  12.5813 17.4364 16.9342   17.3247 17.3815 18.0104]]
173                   9.91155         2.03978         0.16378         -0.71943          -0.53993          0.18092          1.17337          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 2.0077 11.8574  8.9983 12.5088 13.9459 14.5042 13.55   11.5752 16.2805   15.7932 17.4046 16.7012]]
174                   12.82326         2.13654         0.1774         -1.22454          -1.0494          0.49122          1.23892          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 0.1228 11.7788  9.3257 14.3692 13.192  14.3839 13.7808 13.0231 16.2578   16.2988 15.9695 16.7735]]
175                   5.91318         1.95168         0.15759         -0.0258          -0.01569          0.04499          1.6235          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 6.44   11.8683  8.0223 15.3757 14.6999 15.194  11.2932 14.7553 16.5082   15.9322 17.8824 16.4654]]
176                   9.8296         2.11149         0.16314         -0.70521          -0.69794          0.10778          1.32325          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 3.3261 11.4239  9.8036 14.1522 14.3091 14.1567 13.2083 15.7283 16.3179   15.5474 21.6629 15.2395]]
177                   2.25957         1.28401         0.10011         0.60802          0.63007          0.01292          0.88813          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.7617 11.8262  9.1553 12.1854 14.8693 15.6526 12.2844 17.7418 16.2481   16.0403 17.124  18.7224]]
178                   8.58757         2.33797         0.19306         -0.48975          -0.09827          0.0416          2.01497          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[15.421  15.7418 15.4893 15.3692 15.5103 15.4647 15.6419 15.4178 15.6351   15.4291 15.2098 15.0299]]
179                   8.93983         2.38515         0.19732         -0.55085          -0.12195          0.04308          2.16662          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[15.4707 15.712  15.4518 15.8101 15.5678 15.5051 15.9048 15.3496 15.4258   15.3205 15.5468 15.137 ]]
180                   8.61005         2.37612         0.19534         -0.49365          -0.09288          0.04152          2.36847          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[15.347  15.5791 14.7306 15.9834 15.6003 16.1209 15.6927 15.349  15.4633   15.2399 15.3091 15.1572]]
181                   8.63831         2.36167         0.19457         -0.49855          -0.11016          0.04179          2.04562          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[15.4505 15.7715 15.4059 15.3467 15.6406 15.6094 15.5585 15.3912 15.3542   15.2672 15.5547 14.9382]]
182                   2.60688         1.33734         0.0997         0.54777          0.54799          0.01257          1.06042          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.1334 11.4493 10.9778 11.8991 15.2813 15.4673 15.8361 15.295  16.0218   15.2847 15.3576 14.895 ]]
183                   2.22893         1.11319         0.0836         0.61333          0.6207          0.01074          1.03648          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.4605 11.5472 10.7255 11.3163 15.3118 14.1432 15.6433 15.1226 15.3781   15.2197 16.0944 14.8968]]
184                   3.00032         1.47457         0.1124         0.47951          0.48039          0.01639          1.33852          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 8.3842 11.5465 10.6501 12.7938 15.1159 15.4293 15.6301 15.3131 16.0348   15.2366 15.3567 14.9877]]
185                   2.4347         1.29401         0.09607         0.57764          0.57861          0.01164          1.26157          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.43   11.4622 10.5727 11.4396 15.3051 15.4493 15.6716 15.5831 15.8477   15.2875 15.388  14.999 ]]
186                   5.99953         1.95579         0.14831         -0.04078          -0.03966          0.02842          1.37627          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[14.4069 14.0111 10.6296 10.9906 14.8375 14.5832 15.9132 12.7989 14.1512   15.3606 15.5499 13.1349]]
187                   3.97633         1.66338         0.13399         0.3102          0.31295          0.02315          1.74693          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[ 8.863  13.375   9.5677 14.5826 14.1901 13.6749 13.9936 13.2259 17.1031   15.955  14.0634 17.2271]]
188                   3.06387         1.3374         0.10649         0.46849          0.50414          0.02561          0.93565          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 6.7422 11.5458  9.5583 11.0101 13.3762 13.6322 14.5118 16.0268 16.4475   15.6582 16.656  16.7286]]
189                   3.66478         1.4023         0.11255         0.36424          0.40387          0.03297          1.00183          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 6.2116 11.5354  9.1297 12.1153 13.3788 13.7505 14.0858 15.7019 16.8572   15.7331 16.5106 16.5882]]
190                   2.84222         1.22438         0.0978         0.50694          0.54584          0.02253          0.97755          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 7.1241 11.6688  9.4355 11.3881 13.3232 14.1693 14.2864 15.2176 16.4783   15.692  16.4842 16.3835]]
191                   6.07851         1.68515         0.13745         -0.05448          -0.01599          0.07585          1.27238          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 4.0374 11.5854  9.712  13.4117 13.2981 13.7647 14.6499 15.5519 16.7673   15.7049 16.5786 16.6192]]
192                   6.20153         2.06852         0.16495         -0.07582          0.01845          0.03058          1.80028          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[13.677  15.0633 14.4051 14.6642 14.8179 15.0923 14.901  14.9497 14.4217   14.6471 14.9982 14.5419]]
193                   4.30862         1.50949         0.11882         0.25255          0.25486          0.02131          1.15828          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[10.1417 14.9476 11.0322 12.0697 14.8543 15.3661 14.9936 14.8691 15.7208   15.2826 15.0284 14.4109]]
194                   6.50717         2.02257         0.16237         -0.12884          -0.05054          0.03192          1.29622          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[14.9358 15.1112 11.1146 14.6923 14.8545 15.2322 15.2173 14.9536 14.7407   15.1631 15.104  14.2765]]
195                   4.18734         1.64532         0.13329         0.27359          0.30807          0.02198          1.40472          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[14.4756 14.4817 10.6199 12.896  14.6619 14.9485 14.9598 14.7127 14.5656   15.9533 14.4086 15.9996]]
196                   2.62833         1.27549         0.09621         0.54404          0.54726          0.01356          1.19652          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 8.7578 11.5055 10.7557 11.2468 15.0942 15.4479 15.7038 15.389  15.294   15.2346 16.3292 14.9415]]
197                   2.7536         1.40837         0.10437         0.52231          0.53121          0.01364          1.33367          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.7322 11.3299  9.4896 11.6816 15.2238 15.4331 15.6093 15.6341 15.0467   15.2891 15.3525 14.7946]]
198                   2.84475         1.45609         0.11016         0.5065          0.50673          0.01384          1.51963          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.7656 11.4618  9.9577 13.078  15.1864 15.4582 15.8908 15.2647 15.2383   15.2135 15.3835 15.0016]]
199                   2.4016         1.27975         0.09517         0.58338          0.59601          0.01133          1.00195          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.5563 11.5532 10.7848 11.1939 13.5506 15.5019 15.7168 15.3078 15.0483   15.6051 15.3113 14.9657]]
200                   5.77964         1.85351         0.14872         -0.00263          0.02591          0.03042          1.256          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[ 8.5819 14.8832 14.2162 14.2424 13.7436 13.9862 14.072  14.728  17.19   15.7703 16.845  13.9424]]
201                   4.88456         1.66465         0.12819         0.15264          0.15274          0.02421          1.1751          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[10.9649 14.3803  9.8381 13.5411 14.0766 13.5679 14.0212 13.5422 17.079   15.7054 16.8403 13.4843]]
202                   7.83658         2.04213         0.17028         -0.35947          -0.34473          0.06657          1.29828          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[ 5.0799 14.7195  9.3125 14.6292 14.6071 13.9747 14.3974 15.3149 14.2975   13.6564 16.871  16.9753]]
203                   6.48298         2.18223         0.16913         -0.12465          -0.11129          0.03383          1.93227          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[ 8.3039 14.3269 14.6483 14.0304 13.2175 13.6149 14.5395 14.1886 14.3165   15.48   13.7383 13.5987]]
204                   3.07331         1.32719         0.10718         0.46685          0.48817          0.02581          1.00433          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 6.7139 11.6613  9.76   12.3439 13.3819 13.7573 14.6572 15.0708 16.4459   15.7484 16.7714 16.8145]]
205                   2.41167         1.13062         0.09047         0.58163          0.61112          0.01867          0.6972          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 7.412  11.5448  9.7649 11.4413 13.7695 14.0567 14.5009 14.887  16.3413   15.7969 16.3948 16.4754]]
206                   2.95074         1.32444         0.10457         0.48811          0.52046          0.02241          0.9334          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 7.1508 11.8483  9.7379 11.6217 13.5734 13.9009 14.5501 14.5943 16.6402   15.763  16.7154 16.0555]]
207                   3.23081         1.39805         0.11074         0.43953          0.48703          0.02649          1.19965          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 6.7651 11.5367  9.3467 11.8001 13.0427 13.6369 14.4503 14.6435 16.699   15.724  16.7826 16.6265]]
208                   2.59322         1.30755         0.09365         0.55014          0.60169          0.01144          1.24575          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[ 9.9469 11.762  11.3496 11.1025 14.6818 14.2764 15.0576 14.4844 14.4816   14.6829 14.5523 14.4137]]
209                   3.24516         1.44682         0.10438         0.43704          0.46282          0.01448          1.42488          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[ 9.9384 11.9717 11.8446 12.908  14.6282 14.6082 14.8317 14.7126 14.4926   14.2184 14.6985 13.8542]]
210                   2.99735         1.44053         0.10431         0.48003          0.48687          0.01321          1.2944          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[12.0699 11.9761 11.4029 13.0259 14.5157 14.8668 14.8737 14.0199 14.6115   14.7367 14.8213 14.0294]]
211                   2.89499         1.43567         0.10372         0.49779          0.50556          0.0127          1.47228          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[12.3816 11.8318 11.4645 12.9385 14.6915 14.5651 14.812  14.3369 14.2406   14.7743 14.607  14.1491]]
212                   58.85825         7.29704         0.50973         -9.21056          0.02655          0.46972          7.78403          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[7.3996 7.0564 6.2594 5.1411 5.8616 7.3393 5.4792 7.3194 7.2449 7.157   7.2281 6.2828]]
213                   60.10549         7.41913         0.52309         -9.42692          0.12185          0.49126          6.57512          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[5.3463 5.2897 5.7412 6.2337 7.4419 8.7561 6.998  5.7157 6.1478 7.8793   6.8875 5.8666]]
214                   66.09514         7.70645         0.53765         -10.46599          -0.16329          0.55913          7.62638          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[6.1541 6.5167 5.1327 6.9629 7.9581 6.7379 5.086  6.6692 5.952  6.7153   5.0309 5.9401]]
215                   68.78559         7.90643         0.5529         -10.93272          -0.08839          0.59483          8.36742          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[4.9905 6.6319 6.8743 5.5383 5.0972 5.5503 7.0092 5.6329 7.2882 6.0672   5.2276 6.5486]]
216                   12.71471         2.88345         0.23985         -1.20571          -0.1587          0.05816          2.3949          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[16.3394 16.4367 16.4843 17.1322 16.326  16.3826 16.2777 16.6587 16.4133   16.7134 15.9868 15.6628]]
217                   12.10318         2.73521         0.22934         -1.09962          -0.25331          0.05595          2.3533          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[15.7718 16.7931 16.5437 16.6632 15.8637 16.4159 16.4551 15.784  15.9884   15.5552 16.2248 15.7793]]
218                   11.43883         2.63077         0.22174         -0.98437          -0.07697          0.05337          2.11455          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[16.113  16.2829 16.4892 16.3913 16.1587 16.388  16.5704 15.3349 16.3674   16.5346 15.9189 16.2289]]
219                   12.29995         2.79415         0.23313         -1.13376          -0.14683          0.05655          2.37578          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[16.3073 16.4228 16.9488 16.2866 16.7211 15.9095 16.5278 16.1465 16.1369   16.6436 16.3384 15.5662]]
220                   2.89204         1.48508         0.10983         0.4983          0.50289          0.01323          1.22978          MLPRegressor(activation='tanh',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.0361 11.7186 11.0767 13.4777 14.9007 15.0879 15.3294 14.8417 14.599   14.7695 14.991  14.5527]]
221                   3.59809         1.63252         0.12277         0.37581          0.38651          0.01817          1.43152          MLPRegressor(activation='tanh',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 8.7304 11.7385 10.8563 13.7612 14.8968 15.1248 15.3641 14.919  14.9264   14.9048 14.8955 14.2361]]
222                   2.35874         1.24458         0.08922         0.59081          0.60528          0.01013          1.08063          MLPRegressor(activation='tanh',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.2426 11.4631 11.1266 11.541  14.9034 15.0572 15.3501 15.0137 14.83   14.8668 14.957  14.5165]]
223                   2.54351         1.33533         0.09811         0.55876          0.56726          0.01155          1.22907          MLPRegressor(activation='tanh',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[ 9.7832 11.5769 11.3249 12.6498 14.6221 15.1198 15.2954 14.9876 14.9485   14.7946 15.005  14.5696]]
224                   1.8196         1.10328         0.08199         0.68434          0.69645          0.00869          0.93355          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[11.0123 11.708  10.7123 10.0795 13.3673 13.477  14.5237 15.495  16.4344   15.6852 16.7567 14.9115]]
225                   6.93745         2.23797         0.17341         -0.20349          -0.19073          0.03332          2.32342          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[14.4039 14.6201 14.4063 14.4294 14.1954 14.236  14.3228 14.0974 14.0444   14.0188 13.9977 13.8158]]
226                   1.71702         1.02144         0.07666         0.70214          0.71571          0.00831          0.8124          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[11.0725 11.6893 10.6468 10.0642 13.5975 13.5648 14.4861 15.5123 16.4223   15.7358 16.2235 14.9613]]
227                   6.68934         2.12165         0.16272         -0.16045          -0.15833          0.03189          2.3336          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[14.1774 14.323  14.1212 14.1712 13.907  13.9381 14.0125 15.2123 13.7849   13.7083 13.734  13.5676]]
228                   2.02991         1.18771         0.0894         0.64786          0.66387          0.01053          0.83705          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[10.9936 11.7042  9.9244  9.7462 13.6998 13.4667 14.5294 15.8376 16.4692   15.6451 16.6461 15.0248]]
229                   6.89729         2.23489         0.17329         -0.19652          -0.18375          0.03317          2.33247          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[14.4851 14.5897 14.4152 14.4178 14.1613 14.205  14.2881 14.0782 14.0519   14.007  13.9914 13.8991]]
230                   1.82579         1.09428         0.08134         0.68327          0.69501          0.00884          0.84135          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[11.0567 11.6915 10.6918  9.8621 13.5782 13.5685 14.297  15.6798 16.4609   15.7267 16.759  14.8395]]
231                   6.60252         2.16741         0.16444         -0.14539          -0.12932          0.03153          2.14037          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[14.1747 14.3228 10.5398 14.1712 13.894  13.9376 14.0131 13.8209 13.7989   13.708  13.7337 13.5667]]
232                   1.51644         1.01516         0.07585         0.73693          0.73725          0.00781          1.05962          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[11.1441 11.5463  9.9029 10.3322 14.4131 13.9247 13.7073 17.0046 16.6981   15.6803 17.2744 16.2182]]
233                   8.87333         2.26405         0.18567         -0.53932          -0.27244          0.04203          1.35212          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[15.5469 15.7858 11.6223 16.4103 15.3706 15.3153 16.3332 15.3808 15.4925   15.1344 14.8671 14.958 ]]
234                   1.21769         0.86404         0.06632         0.78876          0.79405          0.00642          0.83985          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[11.2875 11.6321 10.8416 10.0146 14.1702 13.483  14.615  15.1767 16.27   15.4403 16.2629 16.0443]]
235                   1.83201         1.23219         0.09645         0.68219          0.68923          0.01018          1.26622          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 9.4552 11.5688 10.5462 13.5559 13.6615 14.9529 14.2953 16.754  16.4953   16.1319 15.811  16.5235]]
236                   1.50722         1.02902         0.07624         0.73853          0.73862          0.00718          1.01807          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.1364 11.5396 10.5175 10.2828 14.5016 13.8518 12.1844 17.3397 16.5449   15.7715 17.2965 16.103 ]]
237                   10.30829         2.68406         0.21914         -0.78825          -0.35669          0.04863          2.36287          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[16.1987 15.998  15.2153 15.7933 15.4017 16.1691 16.3232 15.4952 15.1395   14.0831 14.7587 15.6845]]
238                   1.52679         1.08956         0.08265         0.73514          0.73815          0.008          1.28063          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.0082 11.7043 10.4804  9.9912 13.0996 13.7652 14.3642 16.9067 16.0939   15.3672 16.5605 16.4097]]
239                   1.71401         1.10513         0.08688         0.70266          0.70271          0.01006          1.14347          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.43   11.6619  9.9245 12.2247 12.7348 13.9818 13.7805 16.6789 17.2073   16.2915 16.4104 17.2165]]
240                   1.79073         1.10978         0.08281         0.68935          0.69803          0.00877          0.75423          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[10.9548 11.7192 10.7011  9.8332 13.7688 13.4995 14.3417 15.9911 16.3807   15.7254 16.7668 14.966 ]]
241                   6.91709         2.23796         0.17328         -0.19996          -0.18816          0.03322          2.3356          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[14.4423 14.5767 14.4013 14.4226 14.171  14.2402 14.2725 14.0821 14.0435   13.9714 14.0101 13.8287]]
242                   2.18504         1.21028         0.09116         0.62095          0.62121          0.01042          0.92675          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[10.9896 11.6894 10.6588 13.8786 13.4588 13.3632 14.365  15.4565 16.5123   15.6551 16.8555 14.9218]]
243                   6.61033         2.1692         0.16459         -0.14674          -0.13051          0.03158          2.14667          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[14.1774 14.3225 10.5182 14.1711 13.9074 13.9376 14.0125 13.821  13.785   13.7082 13.735  13.5674]]
244                   1.8108         1.11326         0.08266         0.68587          0.6971          0.00864          0.97195          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[10.9997 11.7163 10.6883 10.1477 13.2818 13.4684 14.4512 15.8524 16.4257   15.7311 16.5908 14.927 ]]
245                   6.98698         2.22849         0.17308         -0.21208          -0.19814          0.0336          2.2831          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[14.4468 14.7199 14.3479 14.4661 14.2648 14.218  14.2366 14.0736 14.072   13.9855 14.0617 13.8425]]
246                   1.9006         1.15308         0.08704         0.67029          0.68755          0.00951          0.96198          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.7654 11.7039 10.8114 10.1604 13.8365 13.4841 14.3941 15.5984 16.4487   15.7033 16.764  14.8777]]
247                   6.20634         2.00896         0.15021         -0.07666          -0.06697          0.02913          2.02477          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[14.1776 14.3213 14.1218 11.4161 13.8944 13.938  14.0123 13.8204 13.7856   13.7079 13.7341 13.5679]]
248                   1.70994         1.09602         0.08161         0.70336          0.70404          0.00866          0.99298          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[11.1593 11.5271  9.7857 10.4258 14.3764 13.7087 12.1478 17.3777 16.8551   15.7765 17.1971 16.2446]]
249                   8.42981         2.30129         0.18975         -0.46238          -0.04691          0.04065          1.91892          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[13.9485 15.9377 15.7997 15.8415 15.3776 15.4432 15.4713 16.2589 15.6647   15.8092 15.408  14.9437]]
250                   1.21969         0.89395         0.06812         0.78841          0.80241          0.00632          0.89772          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.9596 11.5899 10.4534 10.3998 13.469  13.1089 13.4717 15.3805 16.8311   16.0983 16.2693 15.8928]]
251                   1.77171         1.1228         0.08799         0.69265          0.69266          0.01071          1.05908          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 9.1879 11.668   9.7305 11.5403 13.5525 13.4153 14.374  16.6276 17.303   16.2288 16.4417 17.1793]]
252                   1.62586         1.02973         0.07643         0.71795          0.71795          0.00822          0.83458          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.1415 11.5365  9.7338 10.8114 14.5251 13.9603 12.3536 17.3603 16.8352   15.7343 17.0861 16.2455]]
253                   9.38362         2.47081         0.20299         -0.62784          -0.26999          0.04476          2.2404          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[16.0368 15.5436 15.5204 16.0141 16.4723 13.8925 15.5585 15.3733 14.909   14.9247 14.9134 15.4097]]
254                   1.00685         0.84198         0.06404         0.82533          0.83383          0.00524          0.67267          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[10.82   11.6073 10.6865 10.7471 13.768  13.26   13.6481 15.2381 16.6438   15.5626 16.4683 16.2281]]
255                   1.7721         1.21852         0.09332         0.69258          0.69272          0.00954          1.33572          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.3927 11.6663 10.484  12.4339 13.9492 13.4451 14.3721 16.8734 17.2025   15.9488 15.5341 16.3654]]
256                   1.87947         1.12996         0.08386         0.67396          0.6889          0.009          0.97483          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[11.0094 11.7074 10.7394 10.0451 13.0151 13.4735 14.4706 15.6215 16.4024   15.7246 16.7    14.902 ]]
257                   6.94886         2.23564         0.17342         -0.20547          -0.19185          0.03339          2.31022          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[14.5298 14.6126 14.3967 14.3971 14.1677 14.1812 14.3411 14.1052 14.0946   14.001  14.0419 13.8271]]
258                   2.18969         1.19258         0.09028         0.62014          0.62033          0.01068          0.7936          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[10.9101 11.6735 10.1996 13.6605 13.7458 13.6568 14.4858 15.5227 16.4855   15.7483 16.7869 14.8567]]
259                   6.85384         2.23717         0.17029         -0.18898          -0.18898          0.03257          2.33365          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[14.177  14.3209 14.1217 14.1682 13.9065 13.9374 14.0125 13.8214 13.7854   13.7086 13.7344 13.5672]]
260                   1.77258         1.0955         0.08141         0.6925          0.70198          0.00845          0.87528          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[11.0181 11.7022 10.7257 10.1475 13.3996 13.4872 14.5621 15.8216 16.2114   15.7465 16.7559 14.9493]]
261                   6.9463         2.24045         0.17372         -0.20502          -0.19223          0.03338          2.30632          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[14.4316 14.6078 14.4049 14.5107 14.1507 14.2096 14.2707 14.0716 14.0357   14.0146 14.0361 13.8479]]
262                   1.66536         1.0394         0.07763         0.7111          0.72426          0.00805          0.69333          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[10.9604 11.6755 10.7355 10.0278 13.7726 13.3748 14.264  15.5355 16.1913   15.7374 16.8006 14.9523]]
263                   6.6964         2.13153         0.16339         -0.16167          -0.15989          0.03192          2.33365          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[14.1741 14.3317 14.1215 14.1704 13.8944 13.9373 14.0128 15.1118 13.7853   13.7079 13.7342 13.5679]]
264                   1.59096         1.04322         0.07863         0.724          0.72453          0.00838          1.00208          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 9.3379 11.5293 10.5486 11.4565 14.3069 13.7395 13.6343 17.4123 16.6649   15.7864 17.1526 16.4253]]
265                   10.34932         2.62886         0.21732         -0.79537          -0.34758          0.04899          2.19117          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[15.3278 16.9355 15.6054 15.8096 16.0623 15.8509 15.6081 14.3301 14.8454   15.5564 15.2546 15.4268]]
266                   1.23952         0.93141         0.07157         0.78497          0.78687          0.00668          0.9006          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[10.9594 11.6797 10.6089 10.0517 14.2658 14.1562 14.5458 14.9206 16.476   15.5248 16.6962 16.1925]]
267                   2.10619         1.3348         0.10334         0.63462          0.63716          0.01183          1.43168          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 9.6592 11.5813  9.6515 12.8144 12.9977 14.4996 15.1717 16.4407 16.1193   15.9918 17.3168 16.5393]]
268                   1.71886         1.11126         0.08386         0.70182          0.71368          0.00881          1.07513          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[10.8515 11.5394  9.7838 12.8148 14.4779 13.8768 13.8665 17.2574 16.6178   15.7492 17.3458 16.2899]]
269                   9.42766         2.42054         0.20155         -0.63548          -0.17919          0.04521          1.86147          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[16.0781 15.7387 15.7588 15.8234 15.2463 15.1276 16.1101 15.0274 15.7811   15.1401 15.3331 15.6303]]
270                   0.97668         0.75437         0.05764         0.83057          0.83063          0.00499          0.61355          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[10.9603 11.6314 10.7442 10.8449 14.4179 14.1226 13.822  16.0105 16.6472   16.0836 16.2385 16.0355]]
271                   2.41501         1.32994         0.10589         0.58105          0.63983          0.01272          1.08922          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.6816 11.6833 14.0588 14.5022 13.6908 13.4398 14.3379 17.1415 16.493   15.8114 16.4256 17.0528]]
272                   2.22889         1.2269         0.09588         0.61334          0.61335          0.01284          1.1813          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.5087 11.4762  9.3234 13.5711 14.7022 14.3123 13.3715 17.2497 16.1769   15.8836 15.7925 16.0756]]
273                   3.07087         1.33264         0.10535         0.46727          0.4673          0.01676          0.78737          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8109 11.582   9.2291 15.3122 13.7821 14.268  13.1891 16.0548 16.1815   15.7134 16.5482 15.5219]]
274                   2.04643         1.11047         0.08701         0.64499          0.6514          0.011          0.69508          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[10.9848 11.4845  9.8129 14.5033 13.3896 14.3346 12.3318 14.9356 15.8408   15.9034 15.5947 15.9114]]
275                   2.50883         1.28838         0.10201         0.56478          0.57261          0.01601          0.73947          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.2896 11.6274  9.7793 13.5694 13.8135 14.1807 13.8458 15.8691 15.407   15.7975 16.9498 15.6547]]
276                   4.58383         1.57256         0.123         0.20481          0.2147          0.02221          1.22677          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.5133 11.1169  9.606  16.891  13.9539 14.1029 12.0867 13.4042 16.0803   15.9985 16.655  15.0594]]
277                   2.03939         1.21985         0.09596         0.64621          0.6482          0.01255          1.1757          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.7317 11.7105 10.0729 13.13   13.8621 14.8204 13.1418 16.721  16.3602   16.8362 16.925  16.3069]]
278                   2.59545         1.2644         0.09647         0.54975          0.55249          0.01528          0.7099          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.3906 11.636   8.6761 11.5775 13.9731 14.2078 13.8621 17.7161 16.3077   16.0438 16.7347 15.6988]]
279                   2.51911         1.24666         0.10105         0.56299          0.56457          0.01736          0.82242          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.1139 11.5221  9.4341 13.7839 14.2267 14.1438 14.1495 15.862  15.9159   15.9017 16.7404 16.3946]]
280                   3.97394         1.53033         0.12209         0.31061          0.37526          0.02878          1.39625          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.2345 11.9711  7.6403  8.3826 14.0358 14.1998 13.7535 17.5058 15.7323   15.743  15.9719 15.8371]]
281                   3.30793         1.28903         0.10715         0.42615          0.44056          0.02711          0.54673          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.4698 12.3582  7.3325 12.4105 13.9237 14.4621 13.6675 15.5429 16.5839   15.9207 15.6516 17.5518]]
282                   2.09647         1.26789         0.0985         0.63631          0.63915          0.01211          1.06243          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.287  11.4873  9.4454 12.561  13.6712 14.3447 14.0672 17.5808 17.0148   16.813  15.4883 17.1089]]
283                   3.34337         1.37072         0.11179         0.42          0.42586          0.02043          0.6308          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.2992 11.9192  9.6566 15.3262 13.9266 13.7561 12.7391 15.5185 16.3009   15.8893 15.7962 15.9997]]
284                   2.03081         1.14226         0.08966         0.6477          0.66141          0.01297          1.13225          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.6395 11.3757  8.772  12.7552 14.4517 12.9221 13.592  16.4766 16.0091   15.6322 16.1631 16.1709]]
285                   3.72734         1.43505         0.11195         0.35339          0.40451          0.02398          0.76468          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 7.5949 11.8101  9.2645 12.9311 14.0768 14.2547 12.3904 16.0331 15.6683   15.9338 16.7392 14.1222]]
286                   2.31894         1.21253         0.09658         0.59772          0.61242          0.01281          0.71398          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.692  11.8062  9.5294 14.5271 13.7952 14.1837 12.4405 17.4314 16.4272   15.9863 16.7297 17.2782]]
287                   1.45268         1.01268         0.08176         0.74799          0.75013          0.00953          0.74905          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.3888 11.626   9.705  12.8152 13.8418 14.7754 13.451  15.9127 15.8506   15.8842 15.7119 17.0404]]
288                   2.26376         1.18026         0.09386         0.60729          0.63221          0.01477          1.19355          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.3621 11.7264  9.8139 12.9375 12.9463 13.7941 13.1341 15.0658 16.5334   16.0213 16.4959 15.954 ]]
289                   3.36964         1.39781         0.11105         0.41544          0.4158          0.01843          1.21507          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.9934 11.694   9.6465 15.4523 14.6722 13.9304 13.3005 16.8775 15.2549   15.6807 16.7203 15.6505]]
290                   2.62702         1.29176         0.1036         0.54427          0.5449          0.0191          0.9994          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 7.6035 11.5609  9.6107 12.9844 14.0398 14.8043 13.4824 17.1072 16.2132   15.8831 16.448  16.8755]]
291                   2.58349         1.24033         0.10286         0.55182          0.55409          0.01625          0.96953          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.8409 12.4608  9.7408 14.2763 14.114  13.8282 12.6857 16.6417 16.6155   16.5499 15.8776 17.0731]]
292                   2.3146         1.26833         0.09806         0.59847          0.5998          0.01456          1.32262          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.1968 11.5414 10.0647 12.631  14.252  13.9488 12.579  16.3715 17.094   15.9646 17.5809 16.0596]]
293                   1.64762         0.98722         0.08196         0.71418          0.7142          0.01132          0.63147          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.8948 11.7546  9.7228 12.9294 13.8864 14.3746 13.4885 16.4116 15.4915   16.461  16.4785 17.294 ]]
294                   2.31531         1.28137         0.09788         0.59835          0.59886          0.01168          1.25435          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8269 11.8636 10.041  12.9275 13.3844 14.3217 12.4505 17.3976 16.6201   16.5993 16.0025 15.248 ]]
295                   2.15972         1.06586         0.0899         0.62534          0.62616          0.01406          0.69372          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.4286 11.7906  9.178  14.327  13.6309 13.8199 13.7944 15.3165 15.6028   16.0335 16.9097 18.3258]]
296                   2.05825         1.17537         0.09391         0.64294          0.6528          0.01274          1.02048          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.0617 11.4809  9.4912 13.5038 14.6885 13.9945 13.5357 17.0581 16.7033   16.1698 17.151  17.3553]]
297                   2.03309         1.20884         0.09342         0.64731          0.64963          0.01189          0.85345          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.4122 11.6478  9.4112 12.7462 13.9409 14.0792 13.7412 16.1003 16.4174   15.7935 17.0366 15.6182]]
298                   2.15603         1.16696         0.09341         0.62598          0.62873          0.0129          1.06572          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.422  11.5666  9.3969 13.7941 13.5433 13.9095 12.9357 17.2055 15.1917   15.9278 16.1605 16.7686]]
299                   2.17074         1.12465         0.09071         0.62343          0.62383          0.01263          0.85592          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[10.0697 11.5418  9.452  14.7602 13.9973 14.0653 13.2089 16.3171 16.1652   15.8386 15.6084 16.89  ]]
300                   1.6452         1.06732         0.08386         0.7146          0.7152          0.00959          1.08143          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.7992 11.6063  9.668  12.7204 14.6389 14.3604 12.2985 16.5747 16.2767   16.6617 15.9609 16.058 ]]
301                   2.78698         1.39641         0.10928         0.51652          0.53085          0.01724          1.14713          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.1345 11.5976  8.7246 13.6096 14.2151 14.365  12.1435 16.5511 16.4244   16.0456 15.4602 15.6139]]
302                   5.16405         1.6642         0.1344         0.10416          0.11416          0.02833          1.30698          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 7.8645 11.7542  9.9759 17.0859 14.0708 13.5103 12.806  17.4635 16.4706   16.1747 16.785  16.2533]]
303                   1.71912         1.11559         0.0882         0.70177          0.70519          0.01081          1.09398          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.8767 11.6985 10.1135 12.5078 13.8863 13.9259 14.1835 16.5091 16.023   15.8477 15.596  16.4821]]
304                   2.63604         1.25681         0.09646         0.54271          0.55157          0.01413          0.92438          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.9135 11.5677  9.2215 13.5001 14.3689 14.2869 12.4827 16.3749 16.3372   15.7626 16.201  14.6035]]
305                   1.50995         1.02592         0.08122         0.73806          0.75734          0.00846          1.07277          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.1214 12.0146 10.3882 13.0986 14.8657 14.4619 13.232  16.7914 16.5936   16.8578 16.347  16.562 ]]
306                   2.80084         1.18101         0.09268         0.51412          0.56656          0.02048          0.56617          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.292  11.0758  8.0533 11.7122 14.9049 14.181  12.4759 16.367  15.8629   16.3769 15.7536 15.68  ]]
307                   1.43972         0.96406         0.07711         0.75024          0.75581          0.00847          0.62957          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[10.352  11.4367  9.7159 13.3721 13.963  14.3726 13.3574 17.0159 15.9232   16.8751 15.8788 17.2212]]
308                   1.72234         1.04871         0.08568         0.70121          0.70168          0.01083          0.64838          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.4037 11.5371  9.7547 13.8434 14.8367 14.4762 12.5701 15.9802 15.4307   16.3457 15.6847 16.8462]]
309                   1.88534         1.13066         0.08786         0.67294          0.68062          0.01033          0.96112          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[10.17   11.8969  9.8117 13.1378 14.168  14.103  14.0078 14.742  16.1554   15.9533 15.1489 15.5124]]
310                   3.08974         1.45011         0.10783         0.464          0.46786          0.01519          1.18097          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8344 11.9205  9.516  12.6361 14.0016 14.2446 12.3203 17.2665 16.529   15.872  17.2925 14.1102]]
311                   2.35764         1.22405         0.09826         0.591          0.59548          0.01624          0.9301          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.1013 11.7925  9.5865 12.4016 14.0162 14.3092 14.7375 15.6932 16.4586   15.8469 16.1979 16.2643]]
312                   2.36033         1.25525         0.09668         0.59054          0.59113          0.01294          1.02045          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.0105 11.6002  9.7744 12.7538 14.1818 14.2045 13.5551 17.8001 16.2871   16.0177 15.7344 15.7123]]
313                   2.98646         1.32157         0.1051         0.48192          0.49033          0.02231          1.05318          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 7.668  11.1475  8.541  13.1189 14.4968 14.0728 13.655  16.458  16.5117   15.9546 16.7804 16.2853]]
314                   3.25895         1.35829         0.10954         0.43465          0.4366          0.01914          0.62792          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 8.8537 11.6181  9.1986 15.2725 13.8519 14.1691 12.7058 15.9244 16.1304   16.1777 16.4821 15.6761]]
315                   2.83639         1.31093         0.10266         0.50795          0.51535          0.01629          0.9711          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.052  11.6235  9.2403 13.9041 14.0991 14.367  13.2773 16.7313 15.7432   16.0347 15.7391 15.0434]]
316                   1.64545         0.94805         0.07612         0.71455          0.71665          0.01011          0.58025          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[11.3632 11.743   9.3914 13.8532 14.015  14.1102 13.069  16.2761 16.1925   15.882  15.6945 17.063 ]]
317                   2.54474         1.32733         0.10551         0.55855          0.56175          0.01489          1.3306          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.7436 11.5441 10.1969 14.6793 13.9057 14.412  13.488  16.6261 17.0501   15.9227 15.6512 16.7449]]
318                   2.29941         1.2471         0.09538         0.60111          0.60251          0.01221          0.91005          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.4851 11.5041  9.7664 13.1788 13.5681 14.3609 13.6551 15.9599 16.5882   16.7148 16.6649 14.8086]]
319                   2.19697         1.22073         0.09736         0.61888          0.61914          0.0138          1.37475          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 8.8149 11.7426  9.4919 12.9843 14.1852 15.2012 13.541  17.0183 15.61   16.0072 15.7477 16.5217]]
320                   9.00687         2.41409         0.19867         -0.56248          -0.20935          0.04334          1.97027          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[15.5866 15.8097 15.5893 15.5572 15.2718 15.4688 15.5484 15.2154 15.1826   15.0761 15.1818 14.9668]]
321                   9.22068         2.44329         0.20078         -0.59958          -0.25404          0.04421          1.89468          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[15.5718 15.8764 15.5888 15.7226 15.2743 15.3673 15.4628 15.2903 15.1273   15.0201 15.1395 14.8279]]
322                   9.11803         2.44192         0.20074         -0.58177          -0.22152          0.0438          1.94152          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[15.6211 15.8018 15.6206 15.6355 15.4458 15.4141 15.5456 15.1477 15.2733   15.0276 15.1012 14.9916]]
323                   9.07606         2.42574         0.19951         -0.57449          -0.22097          0.04361          1.94357          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='sgd')            [[15.694  15.7843 15.4599 15.6577 15.3466 15.4022 15.5616 15.1648 15.2159   15.1446 15.1292 14.9029]]
324                   6.87446         2.2465         0.17066         -0.19256          -0.19234          0.03262          2.34365          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[14.1673 14.2921 14.093  14.1517 13.8717 13.8878 13.9752 13.8107 13.7639   13.6654 13.6857 13.5428]]
325                   6.86066         2.24274         0.1703         -0.19017          -0.18986          0.03255          2.33105          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[14.1179 14.2868 14.0787 14.1725 13.8892 13.8907 13.9606 13.7729 13.7609   13.6698 13.6966 13.5302]]
326                   6.85928         2.24839         0.17065         -0.18993          -0.18947          0.03254          2.33535          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[14.1065 14.2904 14.0799 14.1514 13.8375 13.889  13.9692 13.7594 13.7401   13.6618 13.6892 13.5464]]
327                   6.8724         2.24756         0.17063         -0.1922          -0.19191          0.0326          2.3453          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[14.1358 14.2825 14.0947 14.1453 13.8557 13.9125 13.9915 13.7981 13.7367   13.6644 13.6841 13.5343]]
328                   5.8041         1.73392         0.12025         -0.00688          0.01953          0.02529          1.17592          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[12.6677 11.4968 12.7254 11.0301 12.3638 14.9308 15.5394 15.0002 15.717   12.2395 16.7853 12.1551]]
329                   4.56886         1.35087         0.09807         0.20741          0.24054          0.02111          0.53738          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[10.7976 12.7063 10.7722 11.0391 12.3178 14.0215 14.8533 15.0719 15.7296   16.0058 16.7657 12.0082]]
330                   1.95646         1.12303         0.08242         0.6606          0.66449          0.00935          0.8935          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[10.6392 11.4459 12.6255 11.0457 13.3074 15.0215 14.8688 15.0192 12.2899   15.994  16.7581 16.5214]]
331                   2.20501         1.08844         0.08345         0.61748          0.65922          0.0117          0.71807          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[10.4886 12.7033 10.7639 11.0718 13.3031 13.9676 12.4986 15.0691 12.3252   15.9868 16.7599 16.5091]]
332                   1.42611         0.94765         0.07081         0.7526          0.75374          0.00662          0.76557          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.7385 11.3418 10.725  11.0653 13.6251 14.3625 15.3729 15.9962 15.4305   15.6984 16.3358 15.6679]]
333                   1.45055         0.97701         0.0729         0.74836          0.74944          0.00674          0.70222          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.6466 11.3514 10.7277 11.0753 13.7018 14.5313 15.3649 15.9229 15.3111   15.6889 16.4296 15.6379]]
334                   1.46323         0.95319         0.0714         0.74616          0.74813          0.00681          0.67387          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.6891 11.3515 10.6751 11.025  13.6243 14.4594 15.3193 15.8978 15.4316   15.7834 16.2618 15.5364]]
335                   1.42528         0.94891         0.07066         0.75275          0.75438          0.00659          0.66092          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.754  11.3117 10.6955 11.0934 13.5935 14.4401 15.3104 15.8304 15.3949   15.7419 16.4296 15.5754]]
336                   7.93852         2.3336         0.18805         -0.37715          -0.20798          0.03848          1.86298          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[15.1904 15.2565 15.083  15.3006 14.8603 14.9757 15.0469 14.7411 14.8638   14.6676 14.7374 14.4603]]
337                   8.01331         2.34332         0.18917         -0.39013          -0.21507          0.03886          1.82833          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[15.2475 15.3746 15.1065 15.2416 14.9444 14.8873 15.0719 14.7909 14.7315   14.7619 14.6924 14.5373]]
338                   7.9451         2.32996         0.18781         -0.37829          -0.20847          0.03851          1.81003          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[15.1579 15.2796 15.1683 15.2628 14.9052 14.9569 14.9721 14.7842 14.7892   14.6987 14.8231 14.4081]]
339                   7.83323         2.30931         0.18636         -0.35889          -0.18824          0.03805          1.78308          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='sgd')            [[15.2439 15.2675 15.0577 15.214  14.9427 14.9263 14.9412 14.8038 14.8299   14.7217 14.8004 14.4858]]
340                   6.8437         2.24296         0.17029         -0.18723          -0.18693          0.03247          2.33345          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[14.1249 14.2724 14.0877 14.1511 13.8485 13.9019 13.9869 13.7803 13.7802   13.6748 13.7008 13.5277]]
341                   6.81533         2.23784         0.1698         -0.1823          -0.18185          0.03233          2.3308          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[14.1414 14.2689 14.0578 14.0874 13.8626 13.8958 13.98   13.79   13.7526   13.6694 13.6762 13.5415]]
342                   6.91476         2.25478         0.17116         -0.19955          -0.19923          0.03279          2.3288          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[14.1664 14.2871 14.0862 14.155  13.8466 13.9016 13.9876 13.7778 13.7313   13.669  13.7086 13.4967]]
343                   6.82247         2.23993         0.17008         -0.18354          -0.18324          0.03237          2.3376          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[14.1385 14.2715 14.0885 14.1255 13.8464 13.9088 13.9799 13.7908 13.7504   13.692  13.6933 13.5497]]
344                   2.75601         1.16371         0.09482         0.5219          0.53168          0.01497          0.67447          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[10.8336 14.1304 14.3812 11.0416 13.3344 13.8165 13.8793 13.7234 15.7833   15.9865 16.7863 16.4866]]
345                   2.58051         1.03725         0.07461         0.55234          0.56371          0.01101          0.53112          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[10.8388 11.4684 10.7684 11.1366 13.6659 13.9945 15.3081 15.0452 15.717   16.0136 16.7925 13.5117]]
346                   2.8565         1.18902         0.09651         0.50446          0.5112          0.01537          0.62747          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[10.8548 14.1952 14.4129 11.0115 13.7424 13.5405 13.8748 15.0383 13.8273   15.9963 16.764  16.4409]]
347                   3.41344         1.36402         0.10966         0.40785          0.4084          0.01818          0.90357          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[10.8954 14.2895 10.7422 13.8751 13.7994 13.6614 13.766  13.593  15.745   16.0545 13.7145 16.5203]]
348                   1.37739         0.94609         0.07116         0.76105          0.76182          0.00652          0.71213          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.5854 11.3622 10.7292 11.0497 13.7346 14.5044 15.3124 15.953  15.4756   15.7026 16.3557 15.7708]]
349                   1.4206         0.94649         0.07058         0.75356          0.75507          0.00658          0.71872          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.7443 11.2817 10.6663 11.0844 13.6095 14.4812 15.3348 15.8787 15.4731   15.6746 16.3521 15.6318]]
350                   1.44515         0.94535         0.07049         0.7493          0.75061          0.00668          0.67827          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.7714 11.3403 10.6959 11.1085 13.6442 14.5274 15.3371 15.7558 15.4608   15.6925 16.4004 15.5568]]
351                   1.4321         0.94491         0.07073         0.75156          0.75268          0.00665          0.71443          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[10.7032 11.3426 10.7196 11.0519 13.6962 14.4428 15.3486 15.9982 15.4177   15.7716 16.2654 15.6118]]
352                   7.01162         2.29988         0.17033         -0.21636          -0.1885          0.03272          2.32188          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[13.7552 13.9268 13.7522 13.7662 13.5323 13.5407 13.6079 13.4491 13.3691   13.3191 13.3499 13.1562]]
353                   7.00163         2.3033         0.17063         -0.21462          -0.1871          0.03268          2.28163          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[13.8076 13.9226 13.7357 13.7428 13.5134 13.5262 13.6347 13.4297 13.4262   13.2921 13.3325 13.1904]]
354                   7.01849         2.30943         0.17105         -0.21755          -0.18912          0.03275          2.30213          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[13.7932 13.9081 13.7341 13.7931 13.4519 13.527  13.6126 13.3725 13.4355   13.3195 13.3635 13.1647]]
355                   6.98596         2.29891         0.17031         -0.2119          -0.18417          0.03261          2.32398          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='sgd')            [[13.7744 13.9278 13.6926 13.7835 13.4806 13.5525 13.6294 13.438  13.3822   13.3276 13.3697 13.1768]]
356                   107.01071         10.04124         0.71047         -17.5639          -0.0728          1.25412          9.9851          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[3.3616 3.84   4.3484 4.4227 4.1686 4.3876 3.4112 3.9559 3.9578 3.5934   3.5953 3.7959]]
357                   103.37848         9.82574         0.6923         -16.9338          -0.18544          1.16855          10.22272          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[4.3989 4.562  4.8344 4.0907 3.9751 3.9528 3.8411 3.5468 4.1176 4.0114   4.2732 3.8205]]
358                   109.54508         10.14605         0.71713         -18.00356          -0.14542          1.32157          9.89837          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[2.9331 4.3386 3.6414 4.4133 4.2524 4.3242 4.1217 3.0664 3.0835 4.0682   3.5827 3.7552]]
359                   99.63832         9.7202         0.68911         -16.28496          0.10556          1.10627          10.34172          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[4.1912 4.3807 3.782  3.7029 3.8209 3.869  4.6159 3.9548 4.3319 4.5013   5.0677 4.4726]]
360                   14.0315         3.00947         0.25191         -1.43414          -0.24176          0.0634          2.49723          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[16.7189 17.1478 16.9741 16.8516 16.6778 16.69   16.2403 16.2596 16.7127   16.6377 15.6153 16.2682]]
361                   13.05965         2.84627         0.23926         -1.26555          -0.19273          0.05964          2.38483          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[16.3247 16.9735 17.0853 16.2325 16.4014 16.7416 16.5602 16.1697 16.1596   16.2917 16.093  16.1419]]
362                   13.62212         2.9287         0.24522         -1.36313          -0.26864          0.06179          2.5677          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[16.6313 17.2416 16.8053 16.3517 16.4416 16.728  16.294  16.6107 15.7893   16.3293 16.5895 15.6626]]
363                   13.35824         2.94128         0.24587         -1.31735          -0.20783          0.0608          2.32773          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='sgd')            [[17.0827 16.7671 16.6651 16.5326 16.4755 16.5533 16.4826 16.1265 16.6531   15.7631 16.3231 16.2565]]
364                   6.93901         2.28357         0.17041         -0.20376          -0.18926          0.03254          2.33568          MLPRegressor(activation='logistic',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.8633 14.0308 13.8679 13.8928 13.6261 13.671  13.7256 13.5604 13.4681   13.4193 13.4592 13.2801]]
365                   6.93351         2.28256         0.17043         -0.20281          -0.1887          0.03254          2.29933          MLPRegressor(activation='logistic',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.8827 14.0602 13.8458 13.8756 13.6243 13.6721 13.7334 13.535  13.5236   13.4146 13.4353 13.3087]]
366                   6.85827         2.27709         0.16999         -0.18975          -0.17571          0.03218          2.30723          MLPRegressor(activation='logistic',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.8994 14.0038 13.8353 13.8739 13.5898 13.665  13.7565 13.5353 13.5061   13.4366 13.4893 13.3284]]
367                   6.9574         2.29081         0.17097         -0.20695          -0.19215          0.03263          2.33303          MLPRegressor(activation='logistic',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='sgd')            [[13.8925 14.0377 13.848  13.8949 13.588  13.6387 13.7328 13.5636 13.4755   13.4089 13.4715 13.2766]]
368                   1.60867         1.00532         0.07646         0.72093          0.7253          0.00754          0.9509          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[ 9.9722 11.0221 10.9398 12.2657 14.3947 14.8816 15.7916 16.2612 15.6676   15.8858 16.304  15.8508]]
369                   1.45347         0.9992         0.0751         0.74786          0.74898          0.00707          0.95737          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[ 9.853  11.026  10.6868 11.7873 14.4407 14.8754 15.3084 15.8946 15.2273   15.484  15.9311 15.8531]]
370                   1.50145         1.02574         0.07701         0.73953          0.74013          0.00728          1.05482          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False)            [[ 9.8101 10.9869 10.6524 11.8977 14.5526 14.973  15.2093 16.0018 15.3354   15.3867 16.0466 15.7746]]
371                   1.47208         1.03438         0.07802         0.74463          0.74675          0.00698          0.99515          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[10.0814 11.0187 10.775  12.2807 14.8174 14.869  15.3045 16.3113 15.2423   15.8922 16.2789 15.7904]]
372                   1.51226         1.03747         0.07832         0.73766          0.73794          0.00743          0.94222          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.8468 11.1142 10.6437 11.8944 14.5497 14.7989 15.4306 16.0165 15.3375   15.4378 15.8229 15.9593]]
373                   1.40327         0.99029         0.07466         0.75657          0.75697          0.00684          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 9.9261 11.059  10.7083 11.836  14.4636 14.8877 15.3057 15.9199 15.2415   15.496  15.9428 15.9671]]
374                   30.43817         4.76131         0.35948         -4.28032          -4.17719          0.27693          4.14303          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 6.1514 12.1908 19.7615  2.2556 21.4792 16.5857 11.6344 10.8651  6.6948   20.3845 12.3768 17.7012]]
375                   1.45233         0.99618         0.07516         0.74805          0.7486          0.0071          0.94537          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.8459 11.0447 10.6805 11.835  14.4636 14.8877 15.3124 15.9178 15.2281   15.5203 16.0505 15.8751]]
376                   2.7924         1.38461         0.0995         0.51558          0.51562          0.01208          1.24155          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.3358 10.3921 11.4704 12.0195 15.2342 15.7941 16.3824 16.3867 14.2004   16.3714 14.8536 15.0554]]
377                   4.84695         1.77034         0.12362         0.15917          0.16761          0.01963          1.30285          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[ 9.131   9.359  12.5572 11.812  15.2872 16.6054 17.4127 16.5792 14.4406   18.192  14.9235 13.6808]]
378                   1.4704         1.00639         0.07567         0.74492          0.74626          0.00718          0.95932          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False)            [[ 9.8004 11.0118 10.6733 11.7998 14.4386 14.8763 15.3081 15.8966 15.2138   15.481  15.9314 15.8479]]
379                   1.71079         1.07902         0.0807         0.70322          0.70415          0.00795          1.09142          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.8101 11.0044 10.9471 11.8872 14.393  15.1579 15.7072 16.4585 15.2136   15.4984 16.2856 15.8503]]
380                   3.48157         1.59606         0.11206         0.39603          0.40016          0.01625          1.71688          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 8.8026  9.1869 10.2234 11.3337 11.663  16.0783 13.5694 15.7735 18.0408   18.2205 17.5713 15.0182]]
381                   1.46538         1.01125         0.07612         0.74579          0.74663          0.00713          0.96137          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.8696 11.0324 10.6752 11.905  14.4468 14.8746 15.3094 15.901  15.2248   15.4752 15.9303 15.8524]]
382                   1.41883         1.01962         0.07631         0.75386          0.75538          0.00691          1.04242          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.8774 10.9701 10.6418 11.7925 14.3795 14.9821 15.2069 16.0018 15.144   15.4206 15.8177 15.9769]]
383                   33.46743         4.10382         0.31458         -4.80583          -4.80152          0.16583          3.44242          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 3.882   9.5937 10.8038 26.5365  8.7793 13.2379 18.2059 13.6602 20.9526   14.207  15.9638 13.4015]]
384                   1.46553         1.00645         0.07561         0.74577          0.74705          0.00715          0.95687          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[ 9.799  11.0063 10.6786 11.7777 14.4779 14.8702 15.3053 15.905  15.2285   15.4798 15.9241 15.8483]]
385                   1.51435         1.02984         0.07722         0.7373          0.7379          0.00729          0.85022          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False)            [[ 9.8618 11.0922 10.7599 11.7853 14.5537 14.7816 15.4265 16.0046 15.1533   15.6045 15.8148 15.7849]]
386                   1.47073         1.00599         0.07565         0.74486          0.74621          0.0072          0.96197          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.7877 11.0168 10.6731 11.7772 14.4467 14.8775 15.3057 15.9037 15.2267   15.4769 15.93   15.8546]]
387                   1.39068         0.99897         0.07528         0.75875          0.75919          0.00683          0.96022          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.8938 11.0013 10.6449 11.8771 14.3711 14.9957 15.2103 16.002  15.3361   15.5986 15.819  15.9753]]
388                   1.83704         1.13559         0.08851         0.68132          0.69518          0.01066          1.19018          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 9.8418 11.7587  9.4885 10.5332 16.0953 14.1153 14.3512 15.1368 15.2083   15.3175 15.856  16.238 ]]
389                   21.89622         3.47057         0.27432         -2.79849          -2.67898          0.10107          2.02773          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 7.2237 17.6139 21.2238 15.1317 14.5835 12.9497 12.4786 17.4717 17.4471   14.6828 16.7985  9.6886]]
390                   1.45377         0.9907         0.07481         0.7478          0.74821          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False)            [[ 9.8459 11.0486 10.6998 11.836  14.4636 14.8877 15.3188 15.9199 15.2484   15.496  16.1154 15.874 ]]
391                   2.76124         1.37149         0.09773         0.52099          0.52155          0.012          1.35447          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[11.6996  9.7521 12.7585 14.7286 14.6126 14.8823 15.2404 13.38   13.8467   14.5176 15.32   15.9119]]
392                   1.5725         1.07741         0.08027         0.72721          0.73046          0.00755          1.10443          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False)            [[ 9.8459 11.0425 10.6769 11.836  14.4636 14.8469 15.3185 15.9555 14.5972   15.2906 15.9428 15.874 ]]
393                   1.45649         1.00435         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.846  11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
394                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
395                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
396                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
397                   1.45651         1.00435         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.8359 14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
398                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
399                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
400                   1.45649         1.00435         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.846  11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
401                   1.45651         1.00435         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.8359 14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
402                   1.45648         1.00435         0.07563         0.74733          0.74802          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3184 15.9199 15.2484   15.496  15.9428 15.874 ]]
403                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
404                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
405                   1.45652         1.00437         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.8361 14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
406                   1.4565         1.00435         0.07563         0.74733          0.74801          0.0071          0.95757          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.846  11.0447 10.7043 11.8359 14.4636 14.8878 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
407                   1.45654         1.00438         0.07563         0.74732          0.748          0.0071          0.95757          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.8361 14.4636 14.8878 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
408                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
409                   1.45648         1.00435         0.07563         0.74733          0.74802          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3184 15.9199 15.2484   15.496  15.9428 15.874 ]]
410                   1.45651         1.00437         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4637 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
411                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
412                   1.45647         1.00434         0.07563         0.74734          0.74802          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2485   15.496  15.9428 15.8741]]
413                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
414                   1.45652         1.00437         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9427 15.874 ]]
415                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
416                   1.45649         1.00435         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0446 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
417                   1.45653         1.00437         0.07563         0.74733          0.74801          0.0071          0.95757          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8878 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
418                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
419                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
420                   1.45649         1.00435         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.846  11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
421                   1.4565         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.846  11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.92   15.2484   15.496  15.9428 15.874 ]]
422                   1.45648         1.00434         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.846  11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2485   15.496  15.9428 15.874 ]]
423                   1.45649         1.00435         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.846  11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
424                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='adaptive',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
425                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
426                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
427                   1.45649         1.00436         0.07563         0.74733          0.74801          0.0071          0.95757          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8878 15.3184 15.9199 15.2484   15.496  15.9428 15.874 ]]
428                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
429                   1.45652         1.00436         0.07563         0.74733          0.74801          0.0071          0.95757          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.8359 14.4636 14.8878 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
430                   1.45649         1.00435         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.846  11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
431                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
432                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
433                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
434                   1.45653         1.00437         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.92   15.2484   15.496  15.9428 15.874 ]]
435                   1.45651         1.00435         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.8359 14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
436                   1.45653         1.00437         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.92   15.2484   15.496  15.9428 15.874 ]]
437                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
438                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
439                   1.45651         1.00436         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.836  14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
440                   1.45652         1.00437         0.07563         0.74733          0.74801          0.0071          0.95752          MLPRegressor(activation='identity',beta_1=0.1,beta_2=0.1,hidden_layer_sizes=(15,15,15),learning_rate='invscaling',learning_rate_init=0.01,max_iter=5000,momentum=0.3,shuffle=False,solver='lbfgs')            [[ 9.8459 11.0447 10.7043 11.8361 14.4636 14.8877 15.3185 15.9199 15.2484   15.496  15.9428 15.874 ]]
R2 : 0.8306
MSE : 0.9767
MAE : 0.7544
MAPE : 0.0576
Explained Var : 0.8338
MSLE : 0.005
MedAE : 0.468
R2 indices : (array([269], dtype=int64),)
MSE indices : (array([269], dtype=int64),)
MAE indices : (array([269], dtype=int64),)
MAPE indices : (array([269], dtype=int64),)
Explained Var indices : (array([253], dtype=int64),)
MSLE indices : (array([269], dtype=int64),)
MedAE indices : (array([31], dtype=int64),)